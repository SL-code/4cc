[INFO] debug_build_shared_command: g++ -std=c++11 -D_GNU_SOURCE -fPIC -fno-threadsafe-statics -pthread -ggdb -g3 -fno-eliminate-unused-debug-symbols -fvar-tracking -fno-eliminate-unused-debug-types -fanalyzer -Wanalyzer-too-complex -Wall -Weffc++ -pedantic -Wextra -Wcast-align -Wcast-qual -Wconversion -Wdisabled-optimization -Wfloat-equal -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-y2k -Wimport -Winit-self -Winline -Winvalid-pch -Wlong-long -Wctor-dtor-privacy -Wlogical-op -Wmissing-declarations -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wsign-conversion -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wundef -Wno-unused -Wmissing-field-initializers -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wpacked -Wpadded -Wpointer-arith -Wredundant-decls -Wshadow -Wstack-protector -Wstrict-aliasing=2 -Wswitch-default -Wswitch-enum -Wunreachable-code -Wunused -Wunused-parameter -Wvariadic-macros -Wno-write-strings -Wno-unused-result -lX11 -lpthread -lm -lrt -lGL -ldl -lXfixes -lfreetype -lfontconfig -m64 -DFTECH_64_BIT -shared
[INFO] build command g++ -std=c++11 -D_GNU_SOURCE -fPIC -fno-threadsafe-statics -pthread -ggdb -g3 -fno-eliminate-unused-debug-symbols -fvar-tracking -fno-eliminate-unused-debug-types -fanalyzer -Wanalyzer-too-complex -Wall -Weffc++ -pedantic -Wextra -Wcast-align -Wcast-qual -Wconversion -Wdisabled-optimization -Wfloat-equal -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-y2k -Wimport -Winit-self -Winline -Winvalid-pch -Wlong-long -Wctor-dtor-privacy -Wlogical-op -Wmissing-declarations -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wsign-conversion -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wundef -Wno-unused -Wmissing-field-initializers -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wpacked -Wpadded -Wpointer-arith -Wredundant-decls -Wshadow -Wstack-protector -Wstrict-aliasing=2 -Wswitch-default -Wswitch-enum -Wunreachable-code -Wunused -Wunused-parameter -Wvariadic-macros -Wno-write-strings -Wno-unused-result -lX11 -lpthread -lm -lrt -lGL -ldl -lXfixes -lfreetype -lfontconfig -m64 -DFTECH_64_BIT -shared -I./code -I./code/custom -I./non-source/foreign/freetype2 -I"./code" ./code/4ed_app_target.cpp -o ./build/debug/./code/4ed_app.so:
In file included from ./code/4ed_app_target.cpp:79:
./code/custom/4coder_hash_functions.cpp:59:14: warning: use of C++11 long long integer constant [-Wlong-long]
   59 |         k *= 14744272059406101841ULL;
      |              ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_hash_functions.cpp:63:17: warning: use of C++11 long long integer constant [-Wlong-long]
   63 |         hash += 8766028991911375085ULL;
      |                 ^~~~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:14:
./code/custom/4coder_base_types.h:579:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  579 |   struct{
      |         ^
./code/custom/4coder_base_types.h:586:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  586 |   struct{
      |         ^
./code/custom/4coder_base_types.h:591:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  591 |   struct{
      |         ^
./code/custom/4coder_base_types.h:599:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  599 |   struct{
      |         ^
./code/custom/4coder_base_types.h:605:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  605 |   struct{
      |         ^
./code/custom/4coder_base_types.h:614:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  614 |   struct{
      |         ^
./code/custom/4coder_base_types.h:621:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  621 |   struct{
      |         ^
./code/custom/4coder_base_types.h:626:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  626 |   struct{
      |         ^
./code/custom/4coder_base_types.h:634:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  634 |   struct{
      |         ^
./code/custom/4coder_base_types.h:640:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  640 |   struct{
      |         ^
./code/custom/4coder_base_types.h:649:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  649 |   struct{
      |         ^
./code/custom/4coder_base_types.h:656:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  656 |   struct{
      |         ^
./code/custom/4coder_base_types.h:661:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  661 |   struct{
      |         ^
./code/custom/4coder_base_types.h:669:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  669 |   struct{
      |         ^
./code/custom/4coder_base_types.h:675:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  675 |   struct{
      |         ^
./code/custom/4coder_base_types.h:684:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  684 |   struct{
      |         ^
./code/custom/4coder_base_types.h:691:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  691 |   struct{
      |         ^
./code/custom/4coder_base_types.h:696:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  696 |   struct{
      |         ^
./code/custom/4coder_base_types.h:704:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  704 |   struct{
      |         ^
./code/custom/4coder_base_types.h:710:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  710 |   struct{
      |         ^
./code/custom/4coder_base_types.h:716:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  716 |   struct{
      |         ^
./code/custom/4coder_base_types.h:726:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  726 |   struct{
      |         ^
./code/custom/4coder_base_types.h:730:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  730 |   struct{
      |         ^
./code/custom/4coder_base_types.h:734:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  734 |   struct{
      |         ^
./code/custom/4coder_base_types.h:740:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  740 |   struct{
      |         ^
./code/custom/4coder_base_types.h:744:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  744 |   struct{
      |         ^
./code/custom/4coder_base_types.h:748:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  748 |   struct{
      |         ^
./code/custom/4coder_base_types.h:754:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  754 |   struct{
      |         ^
./code/custom/4coder_base_types.h:758:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  758 |   struct{
      |         ^
./code/custom/4coder_base_types.h:762:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  762 |   struct{
      |         ^
./code/custom/4coder_base_types.h:768:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  768 |   struct{
      |         ^
./code/custom/4coder_base_types.h:772:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  772 |   struct{
      |         ^
./code/custom/4coder_base_types.h:776:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  776 |   struct{
      |         ^
./code/custom/4coder_base_types.h:782:8: warning: padding struct size to alignment boundary [-Wpadded]
  782 | struct Range_i32_Array{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:786:8: warning: padding struct size to alignment boundary [-Wpadded]
  786 | struct Range_i64_Array{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:790:8: warning: padding struct size to alignment boundary [-Wpadded]
  790 | struct Range_u64_Array{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:794:8: warning: padding struct size to alignment boundary [-Wpadded]
  794 | struct Range_f32_Array{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:800:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  800 |   struct{
      |         ^
./code/custom/4coder_base_types.h:806:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  806 |   struct{
      |         ^
./code/custom/4coder_base_types.h:813:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  813 |   struct{
      |         ^
./code/custom/4coder_base_types.h:819:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  819 |   struct{
      |         ^
./code/custom/4coder_base_types.h:827:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  827 |   struct{
      |         ^
./code/custom/4coder_base_types.h:831:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  831 |   struct{
      |         ^
./code/custom/4coder_base_types.h:835:9: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  835 |   struct{
      |         ^
./code/custom/4coder_base_types.h:844:8: warning: padding struct size to alignment boundary [-Wpadded]
  844 | struct i8_Array{
      |        ^~~~~~~~
./code/custom/4coder_base_types.h:848:8: warning: padding struct size to alignment boundary [-Wpadded]
  848 | struct i16_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:852:8: warning: padding struct size to alignment boundary [-Wpadded]
  852 | struct i32_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:856:8: warning: padding struct size to alignment boundary [-Wpadded]
  856 | struct i64_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:861:8: warning: padding struct size to alignment boundary [-Wpadded]
  861 | struct u8_Array{
      |        ^~~~~~~~
./code/custom/4coder_base_types.h:865:8: warning: padding struct size to alignment boundary [-Wpadded]
  865 | struct u16_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:869:8: warning: padding struct size to alignment boundary [-Wpadded]
  869 | struct u32_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:873:8: warning: padding struct size to alignment boundary [-Wpadded]
  873 | struct u64_Array{
      |        ^~~~~~~~~
./code/custom/4coder_base_types.h:918:8: warning: padding struct size to alignment boundary [-Wpadded]
  918 | struct String_Const_char_Array{
      |        ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:925:8: warning: padding struct size to alignment boundary [-Wpadded]
  925 | struct String_Const_u8_Array{
      |        ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:932:8: warning: padding struct size to alignment boundary [-Wpadded]
  932 | struct String_Const_u16_Array{
      |        ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:939:8: warning: padding struct size to alignment boundary [-Wpadded]
  939 | struct String_Const_u32_Array{
      |        ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:960:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  960 |     struct{
      |           ^
./code/custom/4coder_base_types.h:959:3: warning: padding struct to align ‘String_Const_Any::<anonymous>’ [-Wpadded]
  959 |   union{
      |   ^~~~~
./code/custom/4coder_base_types.h:991:8: warning: padding struct size to alignment boundary [-Wpadded]
  991 | struct List_String_Const_char{
      |        ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:997:8: warning: padding struct size to alignment boundary [-Wpadded]
  997 | struct List_String_Const_u8{
      |        ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1003:8: warning: padding struct size to alignment boundary [-Wpadded]
 1003 | struct List_String_Const_u16{
      |        ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1009:8: warning: padding struct size to alignment boundary [-Wpadded]
 1009 | struct List_String_Const_u32{
      |        ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1023:8: warning: padding struct size to alignment boundary [-Wpadded]
 1023 | struct List_String_Const_Any{
      |        ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1033:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1033 |     struct{
      |           ^
./code/custom/4coder_base_types.h:1043:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1043 |     struct{
      |           ^
./code/custom/4coder_base_types.h:1053:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1053 |     struct{
      |           ^
./code/custom/4coder_base_types.h:1063:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1063 |     struct{
      |           ^
./code/custom/4coder_base_types.h:1074:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1074 |     struct{
      |           ^
./code/custom/4coder_base_types.h:1073:3: warning: padding struct to align ‘String_Any::<anonymous>’ [-Wpadded]
 1073 |   union{
      |   ^~~~~
./code/custom/4coder_base_types.h:1150:7: warning: padding struct to align ‘Date_Time::msec’ [-Wpadded]
 1150 |   u16 msec; // [0,999]
      |       ^~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1154:3: note: in expansion of macro ‘str8_lit’
 1154 |   str8_lit("January"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1154:3: note: in expansion of macro ‘str8_lit’
 1154 |   str8_lit("January"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1155:3: note: in expansion of macro ‘str8_lit’
 1155 |   str8_lit("February"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1155:3: note: in expansion of macro ‘str8_lit’
 1155 |   str8_lit("February"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1156:3: note: in expansion of macro ‘str8_lit’
 1156 |   str8_lit("March"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1156:3: note: in expansion of macro ‘str8_lit’
 1156 |   str8_lit("March"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1157:3: note: in expansion of macro ‘str8_lit’
 1157 |   str8_lit("April"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1157:3: note: in expansion of macro ‘str8_lit’
 1157 |   str8_lit("April"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1158:3: note: in expansion of macro ‘str8_lit’
 1158 |   str8_lit("May"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1158:3: note: in expansion of macro ‘str8_lit’
 1158 |   str8_lit("May"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1159:3: note: in expansion of macro ‘str8_lit’
 1159 |   str8_lit("June"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1159:3: note: in expansion of macro ‘str8_lit’
 1159 |   str8_lit("June"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1160:3: note: in expansion of macro ‘str8_lit’
 1160 |   str8_lit("July"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1160:3: note: in expansion of macro ‘str8_lit’
 1160 |   str8_lit("July"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1161:3: note: in expansion of macro ‘str8_lit’
 1161 |   str8_lit("August"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1161:3: note: in expansion of macro ‘str8_lit’
 1161 |   str8_lit("August"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1162:3: note: in expansion of macro ‘str8_lit’
 1162 |   str8_lit("September"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1162:3: note: in expansion of macro ‘str8_lit’
 1162 |   str8_lit("September"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1163:3: note: in expansion of macro ‘str8_lit’
 1163 |   str8_lit("October"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1163:3: note: in expansion of macro ‘str8_lit’
 1163 |   str8_lit("October"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1164:3: note: in expansion of macro ‘str8_lit’
 1164 |   str8_lit("November"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1164:3: note: in expansion of macro ‘str8_lit’
 1164 |   str8_lit("November"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1165:3: note: in expansion of macro ‘str8_lit’
 1165 |   str8_lit("December"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1165:3: note: in expansion of macro ‘str8_lit’
 1165 |   str8_lit("December"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1169:3: note: in expansion of macro ‘str8_lit’
 1169 |   str8_lit("Jan"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1169:3: note: in expansion of macro ‘str8_lit’
 1169 |   str8_lit("Jan"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1170:3: note: in expansion of macro ‘str8_lit’
 1170 |   str8_lit("Feb"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1170:3: note: in expansion of macro ‘str8_lit’
 1170 |   str8_lit("Feb"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1171:3: note: in expansion of macro ‘str8_lit’
 1171 |   str8_lit("Mar"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1171:3: note: in expansion of macro ‘str8_lit’
 1171 |   str8_lit("Mar"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1172:3: note: in expansion of macro ‘str8_lit’
 1172 |   str8_lit("Apr"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1172:3: note: in expansion of macro ‘str8_lit’
 1172 |   str8_lit("Apr"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1173:3: note: in expansion of macro ‘str8_lit’
 1173 |   str8_lit("May"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1173:3: note: in expansion of macro ‘str8_lit’
 1173 |   str8_lit("May"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1174:3: note: in expansion of macro ‘str8_lit’
 1174 |   str8_lit("Jun"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1174:3: note: in expansion of macro ‘str8_lit’
 1174 |   str8_lit("Jun"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1175:3: note: in expansion of macro ‘str8_lit’
 1175 |   str8_lit("Jul"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1175:3: note: in expansion of macro ‘str8_lit’
 1175 |   str8_lit("Jul"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1176:3: note: in expansion of macro ‘str8_lit’
 1176 |   str8_lit("Aug"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1176:3: note: in expansion of macro ‘str8_lit’
 1176 |   str8_lit("Aug"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1177:3: note: in expansion of macro ‘str8_lit’
 1177 |   str8_lit("Sep"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1177:3: note: in expansion of macro ‘str8_lit’
 1177 |   str8_lit("Sep"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1178:3: note: in expansion of macro ‘str8_lit’
 1178 |   str8_lit("Oct"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1178:3: note: in expansion of macro ‘str8_lit’
 1178 |   str8_lit("Oct"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1179:3: note: in expansion of macro ‘str8_lit’
 1179 |   str8_lit("Nov"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1179:3: note: in expansion of macro ‘str8_lit’
 1179 |   str8_lit("Nov"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1180:3: note: in expansion of macro ‘str8_lit’
 1180 |   str8_lit("Dec"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1180:3: note: in expansion of macro ‘str8_lit’
 1180 |   str8_lit("Dec"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1184:3: note: in expansion of macro ‘str8_lit’
 1184 |   str8_lit("1st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1184:3: note: in expansion of macro ‘str8_lit’
 1184 |   str8_lit("1st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1185:3: note: in expansion of macro ‘str8_lit’
 1185 |   str8_lit("2nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1185:3: note: in expansion of macro ‘str8_lit’
 1185 |   str8_lit("2nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1186:3: note: in expansion of macro ‘str8_lit’
 1186 |   str8_lit("3rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1186:3: note: in expansion of macro ‘str8_lit’
 1186 |   str8_lit("3rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1187:3: note: in expansion of macro ‘str8_lit’
 1187 |   str8_lit("4th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1187:3: note: in expansion of macro ‘str8_lit’
 1187 |   str8_lit("4th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1188:3: note: in expansion of macro ‘str8_lit’
 1188 |   str8_lit("5th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1188:3: note: in expansion of macro ‘str8_lit’
 1188 |   str8_lit("5th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1189:3: note: in expansion of macro ‘str8_lit’
 1189 |   str8_lit("6th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1189:3: note: in expansion of macro ‘str8_lit’
 1189 |   str8_lit("6th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1190:3: note: in expansion of macro ‘str8_lit’
 1190 |   str8_lit("7th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1190:3: note: in expansion of macro ‘str8_lit’
 1190 |   str8_lit("7th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1191:3: note: in expansion of macro ‘str8_lit’
 1191 |   str8_lit("8th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1191:3: note: in expansion of macro ‘str8_lit’
 1191 |   str8_lit("8th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1192:3: note: in expansion of macro ‘str8_lit’
 1192 |   str8_lit("9th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1192:3: note: in expansion of macro ‘str8_lit’
 1192 |   str8_lit("9th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1193:3: note: in expansion of macro ‘str8_lit’
 1193 |   str8_lit("10th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1193:3: note: in expansion of macro ‘str8_lit’
 1193 |   str8_lit("10th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1194:3: note: in expansion of macro ‘str8_lit’
 1194 |   str8_lit("11th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1194:3: note: in expansion of macro ‘str8_lit’
 1194 |   str8_lit("11th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1195:3: note: in expansion of macro ‘str8_lit’
 1195 |   str8_lit("12th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1195:3: note: in expansion of macro ‘str8_lit’
 1195 |   str8_lit("12th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1196:3: note: in expansion of macro ‘str8_lit’
 1196 |   str8_lit("13th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1196:3: note: in expansion of macro ‘str8_lit’
 1196 |   str8_lit("13th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1197:3: note: in expansion of macro ‘str8_lit’
 1197 |   str8_lit("14th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1197:3: note: in expansion of macro ‘str8_lit’
 1197 |   str8_lit("14th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1198:3: note: in expansion of macro ‘str8_lit’
 1198 |   str8_lit("15th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1198:3: note: in expansion of macro ‘str8_lit’
 1198 |   str8_lit("15th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1199:3: note: in expansion of macro ‘str8_lit’
 1199 |   str8_lit("16th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1199:3: note: in expansion of macro ‘str8_lit’
 1199 |   str8_lit("16th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1200:3: note: in expansion of macro ‘str8_lit’
 1200 |   str8_lit("17th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1200:3: note: in expansion of macro ‘str8_lit’
 1200 |   str8_lit("17th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1201:3: note: in expansion of macro ‘str8_lit’
 1201 |   str8_lit("18th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1201:3: note: in expansion of macro ‘str8_lit’
 1201 |   str8_lit("18th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1202:3: note: in expansion of macro ‘str8_lit’
 1202 |   str8_lit("19th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1202:3: note: in expansion of macro ‘str8_lit’
 1202 |   str8_lit("19th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1203:3: note: in expansion of macro ‘str8_lit’
 1203 |   str8_lit("20th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1203:3: note: in expansion of macro ‘str8_lit’
 1203 |   str8_lit("20th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1204:3: note: in expansion of macro ‘str8_lit’
 1204 |   str8_lit("21st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1204:3: note: in expansion of macro ‘str8_lit’
 1204 |   str8_lit("21st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1205:3: note: in expansion of macro ‘str8_lit’
 1205 |   str8_lit("22nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1205:3: note: in expansion of macro ‘str8_lit’
 1205 |   str8_lit("22nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1206:3: note: in expansion of macro ‘str8_lit’
 1206 |   str8_lit("23rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1206:3: note: in expansion of macro ‘str8_lit’
 1206 |   str8_lit("23rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1207:3: note: in expansion of macro ‘str8_lit’
 1207 |   str8_lit("24th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1207:3: note: in expansion of macro ‘str8_lit’
 1207 |   str8_lit("24th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1208:3: note: in expansion of macro ‘str8_lit’
 1208 |   str8_lit("25th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1208:3: note: in expansion of macro ‘str8_lit’
 1208 |   str8_lit("25th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1209:3: note: in expansion of macro ‘str8_lit’
 1209 |   str8_lit("26th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1209:3: note: in expansion of macro ‘str8_lit’
 1209 |   str8_lit("26th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1210:3: note: in expansion of macro ‘str8_lit’
 1210 |   str8_lit("27th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1210:3: note: in expansion of macro ‘str8_lit’
 1210 |   str8_lit("27th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1211:3: note: in expansion of macro ‘str8_lit’
 1211 |   str8_lit("28th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1211:3: note: in expansion of macro ‘str8_lit’
 1211 |   str8_lit("28th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1212:3: note: in expansion of macro ‘str8_lit’
 1212 |   str8_lit("29th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1212:3: note: in expansion of macro ‘str8_lit’
 1212 |   str8_lit("29th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1213:3: note: in expansion of macro ‘str8_lit’
 1213 |   str8_lit("30th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1213:3: note: in expansion of macro ‘str8_lit’
 1213 |   str8_lit("30th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1214:3: note: in expansion of macro ‘str8_lit’
 1214 |   str8_lit("31st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1214:3: note: in expansion of macro ‘str8_lit’
 1214 |   str8_lit("31st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1215:3: note: in expansion of macro ‘str8_lit’
 1215 |   str8_lit("32nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1215:3: note: in expansion of macro ‘str8_lit’
 1215 |   str8_lit("32nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1216:3: note: in expansion of macro ‘str8_lit’
 1216 |   str8_lit("33rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1216:3: note: in expansion of macro ‘str8_lit’
 1216 |   str8_lit("33rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1217:3: note: in expansion of macro ‘str8_lit’
 1217 |   str8_lit("34th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1217:3: note: in expansion of macro ‘str8_lit’
 1217 |   str8_lit("34th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1218:3: note: in expansion of macro ‘str8_lit’
 1218 |   str8_lit("35th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1218:3: note: in expansion of macro ‘str8_lit’
 1218 |   str8_lit("35th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1219:3: note: in expansion of macro ‘str8_lit’
 1219 |   str8_lit("36th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1219:3: note: in expansion of macro ‘str8_lit’
 1219 |   str8_lit("36th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1220:3: note: in expansion of macro ‘str8_lit’
 1220 |   str8_lit("37th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1220:3: note: in expansion of macro ‘str8_lit’
 1220 |   str8_lit("37th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1221:3: note: in expansion of macro ‘str8_lit’
 1221 |   str8_lit("38th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1221:3: note: in expansion of macro ‘str8_lit’
 1221 |   str8_lit("38th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1222:3: note: in expansion of macro ‘str8_lit’
 1222 |   str8_lit("39th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1222:3: note: in expansion of macro ‘str8_lit’
 1222 |   str8_lit("39th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1223:3: note: in expansion of macro ‘str8_lit’
 1223 |   str8_lit("40th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1223:3: note: in expansion of macro ‘str8_lit’
 1223 |   str8_lit("40th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1224:3: note: in expansion of macro ‘str8_lit’
 1224 |   str8_lit("41st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1224:3: note: in expansion of macro ‘str8_lit’
 1224 |   str8_lit("41st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1225:3: note: in expansion of macro ‘str8_lit’
 1225 |   str8_lit("42nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1225:3: note: in expansion of macro ‘str8_lit’
 1225 |   str8_lit("42nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1226:3: note: in expansion of macro ‘str8_lit’
 1226 |   str8_lit("43rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1226:3: note: in expansion of macro ‘str8_lit’
 1226 |   str8_lit("43rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1227:3: note: in expansion of macro ‘str8_lit’
 1227 |   str8_lit("44th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1227:3: note: in expansion of macro ‘str8_lit’
 1227 |   str8_lit("44th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1228:3: note: in expansion of macro ‘str8_lit’
 1228 |   str8_lit("45th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1228:3: note: in expansion of macro ‘str8_lit’
 1228 |   str8_lit("45th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1229:3: note: in expansion of macro ‘str8_lit’
 1229 |   str8_lit("46th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1229:3: note: in expansion of macro ‘str8_lit’
 1229 |   str8_lit("46th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1230:3: note: in expansion of macro ‘str8_lit’
 1230 |   str8_lit("47th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1230:3: note: in expansion of macro ‘str8_lit’
 1230 |   str8_lit("47th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1231:3: note: in expansion of macro ‘str8_lit’
 1231 |   str8_lit("48th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1231:3: note: in expansion of macro ‘str8_lit’
 1231 |   str8_lit("48th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1232:3: note: in expansion of macro ‘str8_lit’
 1232 |   str8_lit("49th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1232:3: note: in expansion of macro ‘str8_lit’
 1232 |   str8_lit("49th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1233:3: note: in expansion of macro ‘str8_lit’
 1233 |   str8_lit("50th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1233:3: note: in expansion of macro ‘str8_lit’
 1233 |   str8_lit("50th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1234:3: note: in expansion of macro ‘str8_lit’
 1234 |   str8_lit("51st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1234:3: note: in expansion of macro ‘str8_lit’
 1234 |   str8_lit("51st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1235:3: note: in expansion of macro ‘str8_lit’
 1235 |   str8_lit("52nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1235:3: note: in expansion of macro ‘str8_lit’
 1235 |   str8_lit("52nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1236:3: note: in expansion of macro ‘str8_lit’
 1236 |   str8_lit("53rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1236:3: note: in expansion of macro ‘str8_lit’
 1236 |   str8_lit("53rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1237:3: note: in expansion of macro ‘str8_lit’
 1237 |   str8_lit("54th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1237:3: note: in expansion of macro ‘str8_lit’
 1237 |   str8_lit("54th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1238:3: note: in expansion of macro ‘str8_lit’
 1238 |   str8_lit("55th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1238:3: note: in expansion of macro ‘str8_lit’
 1238 |   str8_lit("55th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1239:3: note: in expansion of macro ‘str8_lit’
 1239 |   str8_lit("56th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1239:3: note: in expansion of macro ‘str8_lit’
 1239 |   str8_lit("56th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1240:3: note: in expansion of macro ‘str8_lit’
 1240 |   str8_lit("57th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1240:3: note: in expansion of macro ‘str8_lit’
 1240 |   str8_lit("57th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1241:3: note: in expansion of macro ‘str8_lit’
 1241 |   str8_lit("58th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1241:3: note: in expansion of macro ‘str8_lit’
 1241 |   str8_lit("58th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1242:3: note: in expansion of macro ‘str8_lit’
 1242 |   str8_lit("59th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1242:3: note: in expansion of macro ‘str8_lit’
 1242 |   str8_lit("59th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1243:3: note: in expansion of macro ‘str8_lit’
 1243 |   str8_lit("60th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1243:3: note: in expansion of macro ‘str8_lit’
 1243 |   str8_lit("60th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1244:3: note: in expansion of macro ‘str8_lit’
 1244 |   str8_lit("61st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1244:3: note: in expansion of macro ‘str8_lit’
 1244 |   str8_lit("61st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1245:3: note: in expansion of macro ‘str8_lit’
 1245 |   str8_lit("62nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1245:3: note: in expansion of macro ‘str8_lit’
 1245 |   str8_lit("62nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1246:3: note: in expansion of macro ‘str8_lit’
 1246 |   str8_lit("63rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1246:3: note: in expansion of macro ‘str8_lit’
 1246 |   str8_lit("63rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1247:3: note: in expansion of macro ‘str8_lit’
 1247 |   str8_lit("64th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1247:3: note: in expansion of macro ‘str8_lit’
 1247 |   str8_lit("64th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1248:3: note: in expansion of macro ‘str8_lit’
 1248 |   str8_lit("65th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1248:3: note: in expansion of macro ‘str8_lit’
 1248 |   str8_lit("65th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1249:3: note: in expansion of macro ‘str8_lit’
 1249 |   str8_lit("66th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1249:3: note: in expansion of macro ‘str8_lit’
 1249 |   str8_lit("66th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1250:3: note: in expansion of macro ‘str8_lit’
 1250 |   str8_lit("67th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1250:3: note: in expansion of macro ‘str8_lit’
 1250 |   str8_lit("67th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1251:3: note: in expansion of macro ‘str8_lit’
 1251 |   str8_lit("68th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1251:3: note: in expansion of macro ‘str8_lit’
 1251 |   str8_lit("68th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1252:3: note: in expansion of macro ‘str8_lit’
 1252 |   str8_lit("69th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1252:3: note: in expansion of macro ‘str8_lit’
 1252 |   str8_lit("69th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1253:3: note: in expansion of macro ‘str8_lit’
 1253 |   str8_lit("70th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1253:3: note: in expansion of macro ‘str8_lit’
 1253 |   str8_lit("70th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1254:3: note: in expansion of macro ‘str8_lit’
 1254 |   str8_lit("71st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1254:3: note: in expansion of macro ‘str8_lit’
 1254 |   str8_lit("71st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1255:3: note: in expansion of macro ‘str8_lit’
 1255 |   str8_lit("72nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1255:3: note: in expansion of macro ‘str8_lit’
 1255 |   str8_lit("72nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1256:3: note: in expansion of macro ‘str8_lit’
 1256 |   str8_lit("73rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1256:3: note: in expansion of macro ‘str8_lit’
 1256 |   str8_lit("73rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1257:3: note: in expansion of macro ‘str8_lit’
 1257 |   str8_lit("74th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1257:3: note: in expansion of macro ‘str8_lit’
 1257 |   str8_lit("74th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1258:3: note: in expansion of macro ‘str8_lit’
 1258 |   str8_lit("75th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1258:3: note: in expansion of macro ‘str8_lit’
 1258 |   str8_lit("75th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1259:3: note: in expansion of macro ‘str8_lit’
 1259 |   str8_lit("76th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1259:3: note: in expansion of macro ‘str8_lit’
 1259 |   str8_lit("76th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1260:3: note: in expansion of macro ‘str8_lit’
 1260 |   str8_lit("77th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1260:3: note: in expansion of macro ‘str8_lit’
 1260 |   str8_lit("77th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1261:3: note: in expansion of macro ‘str8_lit’
 1261 |   str8_lit("78th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1261:3: note: in expansion of macro ‘str8_lit’
 1261 |   str8_lit("78th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1262:3: note: in expansion of macro ‘str8_lit’
 1262 |   str8_lit("79th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1262:3: note: in expansion of macro ‘str8_lit’
 1262 |   str8_lit("79th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1263:3: note: in expansion of macro ‘str8_lit’
 1263 |   str8_lit("80th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1263:3: note: in expansion of macro ‘str8_lit’
 1263 |   str8_lit("80th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1264:3: note: in expansion of macro ‘str8_lit’
 1264 |   str8_lit("81st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1264:3: note: in expansion of macro ‘str8_lit’
 1264 |   str8_lit("81st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1265:3: note: in expansion of macro ‘str8_lit’
 1265 |   str8_lit("82nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1265:3: note: in expansion of macro ‘str8_lit’
 1265 |   str8_lit("82nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1266:3: note: in expansion of macro ‘str8_lit’
 1266 |   str8_lit("83rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1266:3: note: in expansion of macro ‘str8_lit’
 1266 |   str8_lit("83rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1267:3: note: in expansion of macro ‘str8_lit’
 1267 |   str8_lit("84th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1267:3: note: in expansion of macro ‘str8_lit’
 1267 |   str8_lit("84th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1268:3: note: in expansion of macro ‘str8_lit’
 1268 |   str8_lit("85th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1268:3: note: in expansion of macro ‘str8_lit’
 1268 |   str8_lit("85th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1269:3: note: in expansion of macro ‘str8_lit’
 1269 |   str8_lit("86th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1269:3: note: in expansion of macro ‘str8_lit’
 1269 |   str8_lit("86th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1270:3: note: in expansion of macro ‘str8_lit’
 1270 |   str8_lit("87th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1270:3: note: in expansion of macro ‘str8_lit’
 1270 |   str8_lit("87th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1271:3: note: in expansion of macro ‘str8_lit’
 1271 |   str8_lit("88th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1271:3: note: in expansion of macro ‘str8_lit’
 1271 |   str8_lit("88th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1272:3: note: in expansion of macro ‘str8_lit’
 1272 |   str8_lit("89th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1272:3: note: in expansion of macro ‘str8_lit’
 1272 |   str8_lit("89th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1273:3: note: in expansion of macro ‘str8_lit’
 1273 |   str8_lit("90th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1273:3: note: in expansion of macro ‘str8_lit’
 1273 |   str8_lit("90th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1274:3: note: in expansion of macro ‘str8_lit’
 1274 |   str8_lit("91st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1274:3: note: in expansion of macro ‘str8_lit’
 1274 |   str8_lit("91st"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1275:3: note: in expansion of macro ‘str8_lit’
 1275 |   str8_lit("92nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1275:3: note: in expansion of macro ‘str8_lit’
 1275 |   str8_lit("92nd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1276:3: note: in expansion of macro ‘str8_lit’
 1276 |   str8_lit("93rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1276:3: note: in expansion of macro ‘str8_lit’
 1276 |   str8_lit("93rd"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1277:3: note: in expansion of macro ‘str8_lit’
 1277 |   str8_lit("94th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1277:3: note: in expansion of macro ‘str8_lit’
 1277 |   str8_lit("94th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1278:3: note: in expansion of macro ‘str8_lit’
 1278 |   str8_lit("95th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1278:3: note: in expansion of macro ‘str8_lit’
 1278 |   str8_lit("95th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1279:3: note: in expansion of macro ‘str8_lit’
 1279 |   str8_lit("96th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1279:3: note: in expansion of macro ‘str8_lit’
 1279 |   str8_lit("96th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1280:3: note: in expansion of macro ‘str8_lit’
 1280 |   str8_lit("97th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1280:3: note: in expansion of macro ‘str8_lit’
 1280 |   str8_lit("97th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1281:3: note: in expansion of macro ‘str8_lit’
 1281 |   str8_lit("98th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1281:3: note: in expansion of macro ‘str8_lit’
 1281 |   str8_lit("98th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1282:3: note: in expansion of macro ‘str8_lit’
 1282 |   str8_lit("99th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1282:3: note: in expansion of macro ‘str8_lit’
 1282 |   str8_lit("99th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/custom/4coder_base_types.h:1283:3: note: in expansion of macro ‘str8_lit’
 1283 |   str8_lit("100th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/custom/4coder_base_types.h:1283:3: note: in expansion of macro ‘str8_lit’
 1283 |   str8_lit("100th"),
      |   ^~~~~~~~
./code/custom/4coder_base_types.h:1336:3: warning: padding struct to align ‘Temp_Memory::<anonymous>’ [-Wpadded]
 1336 |   union{
      |   ^~~~~
./code/custom/4coder_base_types.h:1380:8: warning: padding struct size to alignment boundary [-Wpadded]
 1380 | struct Arena_Node{
      |        ^~~~~~~~~~
./code/custom/4coder_base_types.h:1389:19: warning: padding struct to align ‘Thread_Context::allocator’ [-Wpadded]
 1389 |   Base_Allocator *allocator;
      |                   ^~~~~~~~~
./code/custom/4coder_base_types.h:1402:9: warning: padding struct to align ‘Thread_Context::user_data’ [-Wpadded]
 1402 |   void *user_data;
      |         ^~~~~~~~~
./code/custom/4coder_base_types.h:1405:8: warning: ‘struct Scratch_Block’ has pointer data members [-Weffc++]
 1405 | struct Scratch_Block{
      |        ^~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1405:8: warning:   but does not declare ‘Scratch_Block(const Scratch_Block&)’ [-Weffc++]
./code/custom/4coder_base_types.h:1405:8: warning:   or ‘operator=(const Scratch_Block&)’ [-Weffc++]
./code/custom/4coder_base_types.h:1407:10: note: pointer member ‘Scratch_Block::arena’ declared here
 1407 |   Arena *arena;
      |          ^~~~~
./code/custom/4coder_base_types.h:1440:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
 1440 |     struct{
      |           ^
In file included from ./code/4ed_app_target.cpp:16:
./code/custom/4coder_table.h:10:8: warning: padding struct size to alignment boundary [-Wpadded]
   10 | struct Table_Lookup{
      |        ^~~~~~~~~~~~
./code/custom/4coder_table.h:18:8: warning: padding struct size to alignment boundary [-Wpadded]
   18 | struct Table_u64_u64{
      |        ^~~~~~~~~~~~~
./code/custom/4coder_table.h:28:8: warning: padding struct size to alignment boundary [-Wpadded]
   28 | struct Table_u32_u16{
      |        ^~~~~~~~~~~~~
./code/custom/4coder_table.h:38:8: warning: padding struct size to alignment boundary [-Wpadded]
   38 | struct Table_Data_u64{
      |        ^~~~~~~~~~~~~~
./code/custom/4coder_table.h:49:8: warning: padding struct size to alignment boundary [-Wpadded]
   49 | struct Table_u64_Data{
      |        ^~~~~~~~~~~~~~
./code/custom/4coder_table.h:59:8: warning: padding struct size to alignment boundary [-Wpadded]
   59 | struct Table_Data_Data{
      |        ^~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:17:
./code/custom/4coder_events.h:40:8: warning: padding struct size to alignment boundary [-Wpadded]
   40 | struct Input_Modifier_Set{
      |        ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.h:54:15: warning: padding struct size to alignment boundary [-Wpadded]
   54 |         struct{
      |               ^
./code/custom/4coder_events.h:72:32: warning: padding struct to align ‘Input_Event::<unnamed union>::<unnamed struct>::modifiers’ [-Wpadded]
   72 |             Input_Modifier_Set modifiers;
      |                                ^~~~~~~~~
./code/custom/4coder_events.h:77:32: warning: padding struct to align ‘Input_Event::<unnamed union>::<unnamed struct>::modifiers’ [-Wpadded]
   77 |             Input_Modifier_Set modifiers;
      |                                ^~~~~~~~~
./code/custom/4coder_events.h:88:23: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   88 |                 struct{
      |                       ^
./code/custom/4coder_events.h:85:13: warning: padding struct to align ‘Input_Event::<unnamed union>::<unnamed struct>::<anonymous>’ [-Wpadded]
   85 |             union{
      |             ^~~~~
./code/custom/4coder_events.h:103:8: warning: padding struct size to alignment boundary [-Wpadded]
  103 | struct Input_List{
      |        ^~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:18:
./code/custom/4coder_types.h:31:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   31 |     struct{
      |           ^
./code/custom/4coder_types.h:36:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   36 |     struct{
      |           ^
./code/custom/4coder_types.h:46:16: warning: padding struct to align ‘Theme_Color::color’ [-Wpadded]
   46 |     ARGB_Color color;
      |                ^~~~~
./code/custom/4coder_types.h:50:8: warning: padding struct size to alignment boundary [-Wpadded]
   50 | struct Color_Array{
      |        ^~~~~~~~~~~
./code/custom/4coder_types.h:56:8: warning: padding struct size to alignment boundary [-Wpadded]
   56 | struct Color_Table{
      |        ^~~~~~~~~~~
./code/custom/4coder_types.h:93:8: warning: padding struct size to alignment boundary [-Wpadded]
   93 | struct Fancy_Block{
      |        ^~~~~~~~~~~
./code/custom/4coder_types.h:131:8: warning: padding struct size to alignment boundary [-Wpadded]
  131 | struct Line_Shift_Vertical{
      |        ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:231:5: warning: ISO C++ forbids empty unnamed enum [-Wpedantic]
  231 | enum{};
      |     ^
./code/custom/4coder_types.h:326:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  326 |         struct{
      |               ^
./code/custom/4coder_types.h:324:9: warning: padding struct to align ‘Mouse_State::wheel’ [-Wpadded]
  324 |     i32 wheel;
      |         ^~~~~
./code/custom/4coder_types.h:348:8: warning: padding struct size to alignment boundary [-Wpadded]
  348 | struct File_Attributes{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:362:8: warning: padding struct size to alignment boundary [-Wpadded]
  362 | struct File_List{
      |        ^~~~~~~~~
./code/custom/4coder_types.h:404:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  404 |         struct{
      |               ^
./code/custom/4coder_types.h:407:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  407 |         struct{
      |               ^
./code/custom/4coder_types.h:403:5: warning: padding struct to align ‘Buffer_Seek::<anonymous>’ [-Wpadded]
  403 |     union{
      |     ^~~~~
./code/custom/4coder_types.h:423:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  423 |     struct{
      |           ^
./code/custom/4coder_types.h:427:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  427 |     struct{
      |           ^
./code/custom/4coder_types.h:431:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  431 |     struct{
      |           ^
./code/custom/4coder_types.h:438:8: warning: padding struct size to alignment boundary [-Wpadded]
  438 | struct Marker{
      |        ^~~~~~
./code/custom/4coder_types.h:482:8: warning: padding struct size to alignment boundary [-Wpadded]
  482 | struct Query_Bar_Ptr_Array{
      |        ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:488:8: warning: ‘struct Query_Bar_Group’ has pointer data members [-Weffc++]
  488 | struct Query_Bar_Group{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:488:8: warning:   but does not declare ‘Query_Bar_Group(const Query_Bar_Group&)’ [-Weffc++]
./code/custom/4coder_types.h:488:8: warning:   or ‘operator=(const Query_Bar_Group&)’ [-Weffc++]
./code/custom/4coder_types.h:489:24: note: pointer member ‘Query_Bar_Group::app’ declared here
  489 |     Application_Links *app;
      |                        ^~~
./code/custom/4coder_types.h:488:8: warning: padding struct size to alignment boundary [-Wpadded]
  488 | struct Query_Bar_Group{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:520:8: warning: padding struct size to alignment boundary [-Wpadded]
  520 | struct Face_Description{
      |        ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:556:8: warning: padding struct size to alignment boundary [-Wpadded]
  556 | struct Face_Advance_Map{
      |        ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:611:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  611 |         struct{
      |               ^
./code/custom/4coder_types.h:616:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  616 |         struct{
      |               ^
./code/custom/4coder_types.h:610:5: warning: padding struct to align ‘Record_Info::<anonymous>’ [-Wpadded]
  610 |     union{
      |     ^~~~~
./code/custom/4coder_types.h:639:8: warning: padding struct size to alignment boundary [-Wpadded]
  639 | struct User_Input{
      |        ^~~~~~~~~~
./code/custom/4coder_types.h:671:21: warning: padding struct to align ‘Buffer_Name_Conflict_Entry::file_name’ [-Wpadded]
  671 |     String_Const_u8 file_name;
      |                     ^~~~~~~~~
./code/custom/4coder_types.h:723:8: warning: padding struct size to alignment boundary [-Wpadded]
  723 | struct Layout_Item{
      |        ^~~~~~~~~~~
./code/custom/4coder_types.h:732:8: warning: padding struct size to alignment boundary [-Wpadded]
  732 | struct Layout_Item_Block{
      |        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:749:15: warning: padding struct to align ‘Layout_Item_List::input_index_range’ [-Wpadded]
  749 |     Range_i64 input_index_range;
      |               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:762:21: warning: padding struct to align ‘View_Context::mapping’ [-Wpadded]
  762 |     struct Mapping *mapping;
      |                     ^~~~~~~
./code/custom/4coder_types.h:781:15: warning: padding struct to align ‘String_Match::range’ [-Wpadded]
  781 |     Range_i64 range;
      |               ^~~~~
./code/custom/4coder_types.h:785:8: warning: padding struct size to alignment boundary [-Wpadded]
  785 | struct String_Match_List{
      |        ^~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:19:
./code/custom/4coder_doc_content_types.h:90:8: warning: padding struct size to alignment boundary [-Wpadded]
   90 | struct Doc_Content{
      |        ^~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:97:8: warning: padding struct size to alignment boundary [-Wpadded]
   97 | struct Doc_Content_List{
      |        ^~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:115:8: warning: padding struct size to alignment boundary [-Wpadded]
  115 | struct Doc_Code_Sample{
      |        ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:120:8: warning: padding struct size to alignment boundary [-Wpadded]
  120 | struct Doc_Code_Sample_List{
      |        ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:135:5: warning: padding struct to align ‘Doc_Paragraph::<anonymous>’ [-Wpadded]
  135 |     union{
      |     ^~~~~
./code/custom/4coder_doc_content_types.h:145:8: warning: padding struct size to alignment boundary [-Wpadded]
  145 | struct Doc_Block{
      |        ^~~~~~~~~
./code/custom/4coder_doc_content_types.h:162:8: warning: padding struct size to alignment boundary [-Wpadded]
  162 | struct Doc_Block_List{
      |        ^~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:180:20: warning: padding struct to align ‘Doc_Page::quick_jumps’ [-Wpadded]
  180 |     Doc_Block_List quick_jumps;
      |                    ^~~~~~~~~~~
./code/custom/4coder_doc_content_types.h:193:15: warning: padding struct to align ‘Doc_Cluster::first_page’ [-Wpadded]
  193 |     Doc_Page *first_page;
      |               ^~~~~~~~~~
./code/custom/4coder_doc_content_types.h:197:14: warning: padding struct to align ‘Doc_Cluster::first_log’ [-Wpadded]
  197 |     Doc_Log *first_log;
      |              ^~~~~~~~~
In file included from ./code/4ed_app_target.cpp:20:
./code/custom/4coder_default_colors.h:55:8: warning: padding struct size to alignment boundary [-Wpadded]
   55 | struct Color_Table_List{
      |        ^~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:25:
./code/custom/4coder_token.h:92:9: warning: padding struct to align ‘Token_Relex::first_resync_index’ [-Wpadded]
   92 |     i64 first_resync_index;
      |         ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.h:121:5: warning: padding struct to align ‘Token_Iterator::<anonymous>’ [-Wpadded]
  121 |     union{
      |     ^~~~~
In file included from ./code/4ed_app_target.cpp:27:
./code/custom/4coder_system_types.h:48:8: warning: padding struct size to alignment boundary [-Wpadded]
   48 | struct Memory_Annotation{
      |        ^~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:36:
./code/custom/4coder_profile.h:21:8: warning: ‘struct Profile_Block’ has pointer data members [-Weffc++]
   21 | struct Profile_Block{
      |        ^~~~~~~~~~~~~
./code/custom/4coder_profile.h:21:8: warning:   but does not declare ‘Profile_Block(const Profile_Block&)’ [-Weffc++]
./code/custom/4coder_profile.h:21:8: warning:   or ‘operator=(const Profile_Block&)’ [-Weffc++]
./code/custom/4coder_profile.h:23:26: note: pointer member ‘Profile_Block::list’ declared here
   23 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.h:25:16: warning: padding struct to align ‘Profile_Block::id’ [-Wpadded]
   25 |     Profile_ID id;
      |                ^~
./code/custom/4coder_profile.h:34:8: warning: ‘struct Profile_Scope_Block’ has pointer data members [-Weffc++]
   34 | struct Profile_Scope_Block{
      |        ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.h:34:8: warning:   but does not declare ‘Profile_Scope_Block(const Profile_Scope_Block&)’ [-Weffc++]
./code/custom/4coder_profile.h:34:8: warning:   or ‘operator=(const Profile_Scope_Block&)’ [-Weffc++]
./code/custom/4coder_profile.h:36:26: note: pointer member ‘Profile_Scope_Block::list’ declared here
   36 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.h:38:16: warning: padding struct to align ‘Profile_Scope_Block::id’ [-Wpadded]
   38 |     Profile_ID id;
      |                ^~
In file included from ./code/4ed_app_target.cpp:37:
./code/custom/4coder_command_map.h:45:8: warning: padding struct size to alignment boundary [-Wpadded]
   45 | struct Command_Binding_List{
      |        ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.h:88:8: warning: padding struct size to alignment boundary [-Wpadded]
   88 | struct Map_Event_Breakdown{
      |        ^~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:39:
./code/4ed_render_target.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Render_Free_Texture{
      |        ^~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.h:34:8: warning: padding struct size to alignment boundary [-Wpadded]
   34 | struct Render_Vertex_List{
      |        ^~~~~~~~~~~~~~~~~~
./code/4ed_render_target.h:40:8: warning: padding struct size to alignment boundary [-Wpadded]
   40 | struct Render_Group{
      |        ^~~~~~~~~~~~
./code/4ed_render_target.h:50:9: warning: padding struct to align ‘Render_Target::width’ [-Wpadded]
   50 |     i32 width;
      |         ^~~~~
./code/4ed_render_target.h:48:8: warning: padding struct size to alignment boundary [-Wpadded]
   48 | struct Render_Target{
      |        ^~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:40:
./code/4ed.h:22:9: warning: padding struct to align ‘Plat_Settings::window_w’ [-Wpadded]
   22 |     i32 window_w;
      |         ^~~~~~~~
./code/4ed.h:68:11: warning: padding struct to align ‘Application_Step_Result::title_string’ [-Wpadded]
   68 |     char *title_string;
      |           ^~~~~~~~~~~~
./code/4ed.h:75:16: warning: padding struct to align ‘Application_Step_Input::events’ [-Wpadded]
   75 |     Input_List events;
      |                ^~~~~~
./code/4ed.h:71:8: warning: padding struct size to alignment boundary [-Wpadded]
   71 | struct Application_Step_Input{
      |        ^~~~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:42:
./code/4ed_coroutine.h:52:16: warning: padding struct to align ‘Coroutine_Group::active’ [-Wpadded]
   52 |     Coroutine *active;
      |                ^~~~~~
In file included from ./code/4ed_app_target.cpp:44:
./code/4ed_dynamic_variables.h:17:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   17 |     struct{
      |           ^
./code/4ed_dynamic_variables.h:15:7: warning: padding struct size to alignment boundary [-Wpadded]
   15 | union Managed_Object_Standard_Header{
      |       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:28:8: warning: padding struct size to alignment boundary [-Wpadded]
   28 | struct Managed_Buffer_Markers_Header{
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:49:8: warning: padding struct size to alignment boundary [-Wpadded]
   49 | struct Managed_Buffer_Markers_Header_List{
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:55:8: warning: padding struct size to alignment boundary [-Wpadded]
   55 | struct Managed_Arena_Header_List{
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:80:8: warning: padding struct size to alignment boundary [-Wpadded]
   80 | struct Dynamic_Workspace{
      |        ^~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:111:27: warning: padding struct to align ‘Lifetime_Object::<unnamed struct>::workspace’ [-Wpadded]
  111 |         Dynamic_Workspace workspace;
      |                           ^~~~~~~~~
./code/4ed_dynamic_variables.h:107:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  107 |     struct{
      |           ^
./code/4ed_dynamic_variables.h:117:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  117 |         struct{
      |               ^
./code/4ed_dynamic_variables.h:124:31: warning: padding struct to align ‘Lifetime_Key::<unnamed union>::<unnamed struct>::dynamic_workspace’ [-Wpadded]
  124 |             Dynamic_Workspace dynamic_workspace;
      |                               ^~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.h:121:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
  121 |         struct{
      |               ^
./code/4ed_dynamic_variables.h:132:8: warning: padding struct size to alignment boundary [-Wpadded]
  132 | struct Lifetime_Allocator{
      |        ^~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:47:
./code/4ed_translation.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Translation_State{
      |        ^~~~~~~~~~~~~~~~~
./code/4ed_translation.h:38:9: warning: padding struct to align ‘Translation_Emit_Rule::codepoint’ [-Wpadded]
   38 |     u32 codepoint;
      |         ^~~~~~~~~
In file included from ./code/4ed_app_target.cpp:48:
./code/4ed_buffer.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Cursor_With_Index{
      |        ^~~~~~~~~~~~~~~~~
./code/4ed_buffer.h:54:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   54 |         struct{
      |               ^
./code/4ed_buffer.h:59:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   59 |         struct{
      |               ^
./code/4ed_buffer.h:52:9: warning: padding struct to align ‘Line_Move::new_line_first’ [-Wpadded]
   52 |     i64 new_line_first;
      |         ^~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:49:
./code/4ed_history.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Record_Batch_Slot{
      |        ^~~~~~~~~~~~~~~~~
./code/4ed_history.h:33:15: warning: padding struct size to alignment boundary [-Wpadded]
   33 |         struct{
      |               ^
./code/4ed_history.h:48:11: warning: padding struct to align ‘History::arena’ [-Wpadded]
   48 |     Arena arena;
      |           ^~~~~
./code/4ed_history.h:54:29: warning: padding struct to align ‘History::record_lookup’ [-Wpadded]
   54 |     Record_Ptr_Lookup_Table record_lookup;
      |                             ^~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:50:
./code/4ed_file.h:23:19: warning: padding struct to align ‘File_Edit_Positions::scroll’ [-Wpadded]
   23 |     Buffer_Scroll scroll;
      |                   ^~~~~~
./code/4ed_file.h:27:8: warning: padding struct size to alignment boundary [-Wpadded]
   27 | struct Editing_File_Settings{
      |        ^~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.h:42:9: warning: padding struct to align ‘Line_Layout_Key::line_number’ [-Wpadded]
   42 |     i64 line_number;
      |         ^~~~~~~~~~~
./code/4ed_file.h:60:25: warning: padding struct to align ‘Editing_File_State::edit_pos_most_recent’ [-Wpadded]
   60 |     File_Edit_Positions edit_pos_most_recent;
      |                         ^~~~~~~~~~~~~~~~~~~~
./code/4ed_file.h:83:27: warning: padding struct to align ‘Editing_File::settings’ [-Wpadded]
   83 |     Editing_File_Settings settings;
      |                           ^~~~~~~~
./code/4ed_file.h:92:8: warning: padding struct size to alignment boundary [-Wpadded]
   92 | struct Buffer_Point_Delta{
      |        ^~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:52:
./code/4ed_working_set.h:25:10: warning: padding struct to align ‘Working_Set::active_file_sentinel’ [-Wpadded]
   25 |     Node active_file_sentinel;
      |          ^~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.h:29:19: warning: padding struct to align ‘Working_Set::id_to_ptr_table’ [-Wpadded]
   29 |     Table_u64_u64 id_to_ptr_table;
      |                   ^~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:54:
./code/4ed_cli.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Child_Process{
      |        ^~~~~~~~~~~~~
./code/4ed_cli.h:33:8: warning: padding struct size to alignment boundary [-Wpadded]
   33 | struct Child_Process_And_ID{
      |        ^~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:55:
./code/4ed_layout.h:37:15: warning: padding struct size to alignment boundary [-Wpadded]
   37 |         struct{
      |               ^
./code/4ed_layout.h:37:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
./code/4ed_layout.h:50:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   50 |         struct{
      |               ^
./code/4ed_layout.h:35:5: warning: padding struct to align ‘Panel::<anonymous>’ [-Wpadded]
   35 |     union{
      |     ^~~~~
In file included from ./code/4ed_app_target.cpp:56:
./code/4ed_view.h:17:15: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   17 |         struct{
      |               ^
./code/4ed_view.h:38:23: warning: padding struct to align ‘Co_Out::face_description’ [-Wpadded]
   38 |     Face_Description *face_description;
      |                       ^~~~~~~~~~~~~~~~
./code/4ed_view.h:36:8: warning: padding struct size to alignment boundary [-Wpadded]
   36 | struct Co_Out{
      |        ^~~~~~
./code/4ed_view.h:66:19: warning: padding struct to align ‘View::file’ [-Wpadded]
   66 |     Editing_File *file;
      |                   ^~~~
In file included from ./code/4ed_app_target.cpp:57:
./code/4ed_edit.h:17:9: warning: padding struct to align ‘Edit_Behaviors::pos_before_edit’ [-Wpadded]
   17 |     i64 pos_before_edit;
      |         ^~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:58:
./code/4ed_text_layout.h:20:22: warning: padding struct to align ‘Text_Layout::<unnamed struct>::point’ [-Wpadded]
   20 |         Buffer_Point point;
      |                      ^~~~~
./code/4ed_text_layout.h:17:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   17 |     struct{
      |           ^
./code/4ed_text_layout.h:29:8: warning: padding struct size to alignment boundary [-Wpadded]
   29 | struct Text_Layout_Container{
      |        ^~~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:59:
./code/4ed_font_set.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct Font_Face_ID_Node{
      |        ^~~~~~~~~~~~~~~~~
./code/4ed_font_set.h:21:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   21 |     struct{
      |           ^
./code/4ed_font_set.h:24:11: warning: ISO C++ prohibits anonymous structs [-Wpedantic]
   24 |     struct{
      |           ^
./code/4ed_font_set.h:33:24: warning: padding struct to align ‘Font_Set::free_ids’ [-Wpadded]
   33 |     Font_Face_ID_Node *free_ids;
      |                        ^~~~~~~~
./code/4ed_font_set.h:30:8: warning: padding struct size to alignment boundary [-Wpadded]
   30 | struct Font_Set{
      |        ^~~~~~~~
In file included from ./code/4ed_app_target.cpp:61:
./code/4ed_app_models.h:15:8: warning: padding struct size to alignment boundary [-Wpadded]
   15 | struct App_Settings{
      |        ^~~~~~~~~~~~
./code/4ed_app_models.h:36:8: warning: padding struct size to alignment boundary [-Wpadded]
   36 | struct Model_View_Command_Function{
      |        ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.h:120:9: warning: padding struct to align ‘Models::title_capacity’ [-Wpadded]
  120 |     i32 title_capacity;
      |         ^~~~~~~~~~~~~~
./code/4ed_app_models.h:130:25: warning: padding struct to align ‘Models::profile_list’ [-Wpadded]
  130 |     Profile_Global_List profile_list;
      |                         ^~~~~~~~~~~~
./code/4ed_app_models.h:136:9: warning: padding struct to align ‘Models::last_render_usecond_stamp’ [-Wpadded]
  136 |     u64 last_render_usecond_stamp;
      |         ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.h:145:20: warning: padding struct to align ‘Models::target’ [-Wpadded]
  145 |     Render_Target *target;
      |                    ^~~~~~
./code/4ed_app_models.h:174:8: warning: padding struct size to alignment boundary [-Wpadded]
  174 | struct File_Init{
      |        ^~~~~~~~~
In file included from ./code/4ed_app_target.cpp:64:
./code/4ed_api_definition.h:21:8: warning: padding struct size to alignment boundary [-Wpadded]
   21 | struct API_Param_List{
      |        ^~~~~~~~~~~~~~
./code/4ed_api_definition.h:42:26: warning: padding struct to align ‘API_Type_Structure::member_names’ [-Wpadded]
   42 |     List_String_Const_u8 member_names;
      |                          ^~~~~~~~~~~~
./code/4ed_api_definition.h:51:8: warning: padding struct size to alignment boundary [-Wpadded]
   51 | struct API_Type_Enum{
      |        ^~~~~~~~~~~~~
./code/4ed_api_definition.h:72:21: warning: padding struct to align ‘API_Type::name’ [-Wpadded]
   72 |     String_Const_u8 name;
      |                     ^~~~
./code/4ed_api_definition.h:88:15: warning: padding struct to align ‘API_Definition::first_type’ [-Wpadded]
   88 |     API_Type *first_type;
      |               ^~~~~~~~~~
./code/4ed_api_definition.h:92:21: warning: padding struct to align ‘API_Definition::name’ [-Wpadded]
   92 |     String_Const_u8 name;
      |                     ^~~~
./code/4ed_api_definition.h:95:8: warning: padding struct size to alignment boundary [-Wpadded]
   95 | struct API_Definition_List{
      |        ^~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:69:
./code/custom/4coder_base_types.cpp: In function ‘i32 i32_ceil32(f32)’:
./code/custom/4coder_base_types.cpp:14:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   14 |     return(((v)>0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)+1.f)) ):( ((i32)(v)) ));
      |                                   ^
      |                            --------
      |                            static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp:14:25: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
   14 |     return(((v)>0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)+1.f)) ):( ((i32)(v)) ));
      |                       ~~^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:14:46: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   14 |     return(((v)>0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)+1.f)) ):( ((i32)(v)) ));
      |                                              ^
      |                                       --------
      |                                       static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp:14:63: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   14 |     return(((v)>0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)+1.f)) ):( ((i32)(v)) ));
      |                                                               ^
      |                                                  --------------
      |                                                  static_cast<i32> (((v)+1.f))
./code/custom/4coder_base_types.cpp:14:78: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   14 |     return(((v)>0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)+1.f)) ):( ((i32)(v)) ));
      |                                                                              ^
      |                                                                       --------
      |                                                                       static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp: In function ‘i32 i32_floor32(f32)’:
./code/custom/4coder_base_types.cpp:19:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   19 |     return(((v)<0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)-1.f)) ):( ((i32)(v)) ));
      |                                   ^
      |                            --------
      |                            static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp:19:25: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
   19 |     return(((v)<0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)-1.f)) ):( ((i32)(v)) ));
      |                       ~~^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:19:46: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   19 |     return(((v)<0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)-1.f)) ):( ((i32)(v)) ));
      |                                              ^
      |                                       --------
      |                                       static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp:19:63: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   19 |     return(((v)<0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)-1.f)) ):( ((i32)(v)) ));
      |                                                               ^
      |                                                  --------------
      |                                                  static_cast<i32> (((v)-1.f))
./code/custom/4coder_base_types.cpp:19:78: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   19 |     return(((v)<0)?( (v == (i32)(v))?((i32)(v)):((i32)((v)-1.f)) ):( ((i32)(v)) ));
      |                                                                              ^
      |                                                                       --------
      |                                                                       static_cast<i32> ((v))
./code/custom/4coder_base_types.cpp: In function ‘f32 f32_ceil32(f32)’:
./code/custom/4coder_base_types.cpp:29:29: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   29 |     return((f32)i32_ceil32(v));
      |                             ^
      |            -----
      |            static_cast<f32> ()
./code/custom/4coder_base_types.cpp: In function ‘f32 f32_floor32(f32)’:
./code/custom/4coder_base_types.cpp:34:30: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   34 |     return((f32)i32_floor32(v));
      |                              ^
      |            -----
      |            static_cast<f32> ( )
./code/custom/4coder_base_types.cpp: In function ‘f32 f32_round32(f32)’:
./code/custom/4coder_base_types.cpp:39:30: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   39 |     return((f32)i32_round32(v));
      |                              ^
      |            -----
      |            static_cast<f32> ( )
./code/custom/4coder_base_types.cpp: In function ‘i8 round_up_i8(i8, i8)’:
./code/custom/4coder_base_types.cpp:44:7: warning: conversion from ‘int’ to ‘i8’ {aka ‘signed char’} may change value [-Wconversion]
   44 |     x += b - 1;
      |     ~~^~~~~~~~
./code/custom/4coder_base_types.cpp:45:7: warning: conversion from ‘int’ to ‘i8’ {aka ‘signed char’} may change value [-Wconversion]
   45 |     x -= x%b;
      |     ~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u8 round_up_u8(u8, u8)’:
./code/custom/4coder_base_types.cpp:50:7: warning: conversion from ‘int’ to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
   50 |     x += b - 1;
      |     ~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i16 round_up_i16(i16, i16)’:
./code/custom/4coder_base_types.cpp:56:7: warning: conversion from ‘int’ to ‘i16’ {aka ‘short int’} may change value [-Wconversion]
   56 |     x += b - 1;
      |     ~~^~~~~~~~
./code/custom/4coder_base_types.cpp:57:7: warning: conversion from ‘int’ to ‘i16’ {aka ‘short int’} may change value [-Wconversion]
   57 |     x -= x%b;
      |     ~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u16 round_up_u16(u16, u16)’:
./code/custom/4coder_base_types.cpp:62:7: warning: conversion from ‘int’ to ‘u16’ {aka ‘short unsigned int’} may change value [-Wconversion]
   62 |     x += b - 1;
      |     ~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i8 round_down_i8(i8, i8)’:
./code/custom/4coder_base_types.cpp:93:7: warning: conversion from ‘int’ to ‘i8’ {aka ‘signed char’} may change value [-Wconversion]
   93 |     x -= x%b;
      |     ~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i16 round_down_i16(i16, i16)’:
./code/custom/4coder_base_types.cpp:103:7: warning: conversion from ‘int’ to ‘i16’ {aka ‘short int’} may change value [-Wconversion]
  103 |     x -= x%b;
      |     ~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘f32 f32_integer(f32)’:
./code/custom/4coder_base_types.cpp:134:23: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  134 |     return((f32)((i32)x));
      |                       ^
      |                  ------
      |                  static_cast<i32> (x)
./code/custom/4coder_base_types.cpp:134:24: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  134 |     return((f32)((i32)x));
      |                        ^
      |            -------------
      |            static_cast<f32> (((i32)x))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 make_data(void*, u64)’:
./code/custom/4coder_base_types.cpp:153:34: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  153 |     String_Const_u8 data = {(u8*)memory, size};
      |                                  ^~~~~~
      |                             -----------
      |                             static_cast<u8*> (memory)
./code/custom/4coder_base_types.cpp: In function ‘void block_zero(void*, u64)’:
./code/custom/4coder_base_types.cpp:170:23: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  170 |     for (u8 *p = (u8*)mem, *e = p + size; p < e; p += 1){
      |                       ^~~
      |                  --------
      |                  static_cast<u8*> (mem)
./code/custom/4coder_base_types.cpp: In function ‘void block_fill_ones(void*, u64)’:
./code/custom/4coder_base_types.cpp:180:23: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  180 |     for (u8 *p = (u8*)mem, *e = p + size; p < e; p += 1){
      |                       ^~~
      |                  --------
      |                  static_cast<u8*> (mem)
./code/custom/4coder_base_types.cpp: In function ‘void block_copy(void*, const void*, u64)’:
./code/custom/4coder_base_types.cpp:190:18: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  190 |     u8 *d = (u8*)dst;
      |                  ^~~
      |             --------
      |             static_cast<u8*> (dst)
./code/custom/4coder_base_types.cpp:191:18: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  191 |     u8 *s = (u8*)src;
      |                  ^~~
./code/custom/4coder_base_types.cpp:191:13: warning: cast from type ‘const void*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  191 |     u8 *s = (u8*)src;
      |             ^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 block_match(void*, void*, u64)’:
./code/custom/4coder_base_types.cpp:210:24: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  210 |     for (u8 *pa = (u8*)a, *pb = (u8*)b, *ea = pa + size; pa < ea; pa += 1, pb += 1){
      |                        ^
      |                   ------
      |                   static_cast<u8*> (a)
./code/custom/4coder_base_types.cpp:210:38: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  210 |     for (u8 *pa = (u8*)a, *pb = (u8*)b, *ea = pa + size; pa < ea; pa += 1, pb += 1){
      |                                      ^
      |                                 ------
      |                                 static_cast<u8*> (b)
./code/custom/4coder_base_types.cpp: In function ‘i32 block_compare(void*, void*, u64)’:
./code/custom/4coder_base_types.cpp:221:24: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  221 |     for (u8 *pa = (u8*)a, *pb = (u8*)b, *ea = pa + size; pa < ea; pa += 1, pb += 1){
      |                        ^
      |                   ------
      |                   static_cast<u8*> (a)
./code/custom/4coder_base_types.cpp:221:38: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  221 |     for (u8 *pa = (u8*)a, *pb = (u8*)b, *ea = pa + size; pa < ea; pa += 1, pb += 1){
      |                                      ^
      |                                 ------
      |                                 static_cast<u8*> (b)
./code/custom/4coder_base_types.cpp:222:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  222 |         i32 dif = (i32)*pa - (i32)*pb;
      |                         ^~
      |                   --------
      |                   static_cast<i32> (*pa)
./code/custom/4coder_base_types.cpp:222:36: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  222 |         i32 dif = (i32)*pa - (i32)*pb;
      |                                    ^~
      |                              --------
      |                              static_cast<i32> (*pb)
./code/custom/4coder_base_types.cpp: In function ‘void block_fill_u8(void*, u64, u8)’:
./code/custom/4coder_base_types.cpp:232:25: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  232 |     for (u8 *ptr = (u8*)a, *e = ptr + size; ptr < e; ptr += 1){
      |                         ^
      |                    ------
      |                    static_cast<u8*> (a)
./code/custom/4coder_base_types.cpp: In function ‘void block_fill_u16(void*, u64, u16)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:238:5: note: in expansion of macro ‘Assert’
  238 |     Assert(size%sizeof(u16) == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:240:27: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
  240 |     for (u16 *ptr = (u16*)a, *e = ptr + count; ptr < e; ptr += 1){
      |                           ^
      |                     -------
      |                     static_cast<u16*> (a)
./code/custom/4coder_base_types.cpp: In function ‘void block_fill_u32(void*, u64, u32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:246:5: note: in expansion of macro ‘Assert’
  246 |     Assert(size%sizeof(u32) == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:248:27: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
  248 |     for (u32 *ptr = (u32*)a, *e = ptr + count; ptr < e; ptr += 1){
      |                           ^
      |                     -------
      |                     static_cast<u32*> (a)
./code/custom/4coder_base_types.cpp: In function ‘void block_fill_u64(void*, u64, u64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:254:5: note: in expansion of macro ‘Assert’
  254 |     Assert(size%sizeof(u64) == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:256:27: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
  256 |     for (u64 *ptr = (u64*)a, *e = ptr + count; ptr < e; ptr += 1){
      |                           ^
      |                     -------
      |                     static_cast<u64*> (a)
./code/custom/4coder_base_types.cpp: In function ‘void block_range_copy__inner(void*, void*, Range_u64, i64)’:
./code/custom/4coder_base_types.cpp:274:21: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  274 |     block_copy((u8*)dst + range.first + shift, (u8*)src + range.first, range.max - range.min);
      |                     ^~~
      |                --------
      |                static_cast<u8*> (dst)
./code/custom/4coder_base_types.cpp:274:53: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  274 |     block_copy((u8*)dst + range.first + shift, (u8*)src + range.first, range.max - range.min);
      |                                                     ^~~
      |                                                --------
      |                                                static_cast<u8*> (src)
./code/custom/4coder_base_types.cpp: In function ‘void block_range_copy__inner(void*, void*, Range_u64, i64, u64)’:
./code/custom/4coder_base_types.cpp:281:14: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  281 |     shift *= item_size;
      |              ^~~~~~~~~
./code/custom/4coder_base_types.cpp:281:11: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  281 |     shift *= item_size;
      |     ~~~~~~^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void block_copy_array_shift__inner(void*, void*, u64, Range_i64, i64)’:
./code/custom/4coder_base_types.cpp:291:21: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  291 |     u8 *dptr = (u8*)dst;
      |                     ^~~
      |                --------
      |                static_cast<u8*> (dst)
./code/custom/4coder_base_types.cpp:292:21: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  292 |     u8 *sptr = (u8*)src;
      |                     ^~~
      |                --------
      |                static_cast<u8*> (src)
./code/custom/4coder_base_types.cpp:293:34: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  293 |     dptr += it_size*(range.first + shift);
      |                     ~~~~~~~~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp:294:27: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  294 |     sptr += it_size*range.first;
      |                     ~~~~~~^~~~~
./code/custom/4coder_base_types.cpp:295:63: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  295 |     block_copy(dptr, sptr, (u64)(it_size*(range.one_past_last - range.first)));
      |                                          ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:295:77: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  295 |     block_copy(dptr, sptr, (u64)(it_size*(range.one_past_last - range.first)));
      |                                                                             ^
      |                            -----
      |                            static_cast<u64> (                                )
./code/custom/4coder_base_types.cpp: In function ‘void block_copy_array_shift__inner(void*, void*, u64, Range_i32, i64)’:
./code/custom/4coder_base_types.cpp:299:21: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  299 |     u8 *dptr = (u8*)dst;
      |                     ^~~
      |                --------
      |                static_cast<u8*> (dst)
./code/custom/4coder_base_types.cpp:300:21: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  300 |     u8 *sptr = (u8*)src;
      |                     ^~~
      |                --------
      |                static_cast<u8*> (src)
./code/custom/4coder_base_types.cpp:301:34: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  301 |     dptr += it_size*(range.first + shift);
      |                     ~~~~~~~~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp:302:27: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  302 |     sptr += it_size*range.first;
      |                     ~~~~~~^~~~~
./code/custom/4coder_base_types.cpp:303:63: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  303 |     block_copy(dptr, sptr, (u64)(it_size*(range.one_past_last - range.first)));
      |                                          ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:303:77: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  303 |     block_copy(dptr, sptr, (u64)(it_size*(range.one_past_last - range.first)));
      |                                                                             ^
      |                            -----
      |                            static_cast<u64> (                                )
./code/custom/4coder_base_types.cpp: In function ‘f32 mod_f32(f32, i32)’:
./code/custom/4coder_base_types.cpp:325:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  325 |     f32 r = ((i32)(whole) % m) + frac;
      |                         ^
      |              ------------
      |              static_cast<i32> ((whole))
./code/custom/4coder_base_types.cpp:325:27: warning: conversion from ‘i32’ {aka ‘int’} to ‘f32’ {aka ‘float’} may change value [-Wconversion]
  325 |     f32 r = ((i32)(whole) % m) + frac;
      |             ~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i8 V2i8(Vec2_i8)’:
./code/custom/4coder_base_types.cpp:405:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  405 |     return(V2i8((i8)o.x, (i8)o.y));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:405:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  405 |     return(V2i8((i8)o.x, (i8)o.y));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i8 V2i8(Vec2_i16)’:
./code/custom/4coder_base_types.cpp:409:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  409 |     return(V2i8((i8)o.x, (i8)o.y));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:409:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  409 |     return(V2i8((i8)o.x, (i8)o.y));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i8 V2i8(Vec2_i32)’:
./code/custom/4coder_base_types.cpp:413:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  413 |     return(V2i8((i8)o.x, (i8)o.y));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:413:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  413 |     return(V2i8((i8)o.x, (i8)o.y));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i8 V2i8(Vec2_f32)’:
./code/custom/4coder_base_types.cpp:417:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  417 |     return(V2i8((i8)o.x, (i8)o.y));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:417:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  417 |     return(V2i8((i8)o.x, (i8)o.y));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i8 V3i8(Vec3_i8)’:
./code/custom/4coder_base_types.cpp:421:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  421 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:421:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  421 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:421:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  421 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i8 V3i8(Vec3_i16)’:
./code/custom/4coder_base_types.cpp:425:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  425 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:425:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  425 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:425:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  425 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i8 V3i8(Vec3_i32)’:
./code/custom/4coder_base_types.cpp:429:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  429 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:429:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  429 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:429:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  429 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i8 V3i8(Vec3_f32)’:
./code/custom/4coder_base_types.cpp:433:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  433 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:433:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  433 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:433:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  433 |     return(V3i8((i8)o.x, (i8)o.y, (i8)o.z));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i8 V4i8(Vec4_i8)’:
./code/custom/4coder_base_types.cpp:437:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  437 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:437:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  437 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:437:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  437 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp:437:50: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  437 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                                  ^
      |                                            -------
      |                                            static_cast<i8> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i8 V4i8(Vec4_i16)’:
./code/custom/4coder_base_types.cpp:441:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  441 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:441:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  441 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:441:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  441 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp:441:50: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  441 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                                  ^
      |                                            -------
      |                                            static_cast<i8> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i8 V4i8(Vec4_i32)’:
./code/custom/4coder_base_types.cpp:445:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  445 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:445:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  445 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:445:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  445 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp:445:50: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  445 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                                  ^
      |                                            -------
      |                                            static_cast<i8> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i8 V4i8(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:449:23: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  449 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                       ^
      |                 -------
      |                 static_cast<i8> (o.x)
./code/custom/4coder_base_types.cpp:449:32: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  449 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                ^
      |                          -------
      |                          static_cast<i8> (o.y)
./code/custom/4coder_base_types.cpp:449:41: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  449 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                         ^
      |                                   -------
      |                                   static_cast<i8> (o.z)
./code/custom/4coder_base_types.cpp:449:50: warning: use of old-style cast to ‘i8’ {aka ‘signed char’} [-Wold-style-cast]
  449 |     return(V4i8((i8)o.x, (i8)o.y, (i8)o.z, (i8)o.w));
      |                                                  ^
      |                                            -------
      |                                            static_cast<i8> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i16 V2i16(Vec2_i8)’:
./code/custom/4coder_base_types.cpp:453:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  453 |     return(V2i16((i16)o.x, (i16)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:453:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  453 |     return(V2i16((i16)o.x, (i16)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i16 V2i16(Vec2_i16)’:
./code/custom/4coder_base_types.cpp:457:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  457 |     return(V2i16((i16)o.x, (i16)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:457:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  457 |     return(V2i16((i16)o.x, (i16)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i16 V2i16(Vec2_i32)’:
./code/custom/4coder_base_types.cpp:461:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  461 |     return(V2i16((i16)o.x, (i16)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:461:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  461 |     return(V2i16((i16)o.x, (i16)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i16 V2i16(Vec2_f32)’:
./code/custom/4coder_base_types.cpp:465:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  465 |     return(V2i16((i16)o.x, (i16)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:465:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  465 |     return(V2i16((i16)o.x, (i16)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i16 V3i16(Vec3_i8)’:
./code/custom/4coder_base_types.cpp:469:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  469 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:469:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  469 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:469:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  469 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i16 V3i16(Vec3_i16)’:
./code/custom/4coder_base_types.cpp:473:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  473 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:473:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  473 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:473:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  473 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i16 V3i16(Vec3_i32)’:
./code/custom/4coder_base_types.cpp:477:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  477 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:477:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  477 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:477:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  477 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i16 V3i16(Vec3_f32)’:
./code/custom/4coder_base_types.cpp:481:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  481 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:481:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  481 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:481:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  481 |     return(V3i16((i16)o.x, (i16)o.y, (i16)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i16 V4i16(Vec4_i8)’:
./code/custom/4coder_base_types.cpp:485:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  485 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:485:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  485 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:485:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  485 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp:485:55: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  485 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i16> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i16 V4i16(Vec4_i16)’:
./code/custom/4coder_base_types.cpp:489:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  489 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:489:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  489 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:489:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  489 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp:489:55: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  489 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i16> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i16 V4i16(Vec4_i32)’:
./code/custom/4coder_base_types.cpp:493:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  493 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:493:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  493 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:493:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  493 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp:493:55: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  493 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i16> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i16 V4i16(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:497:25: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  497 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i16> (o.x)
./code/custom/4coder_base_types.cpp:497:35: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  497 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i16> (o.y)
./code/custom/4coder_base_types.cpp:497:45: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  497 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i16> (o.z)
./code/custom/4coder_base_types.cpp:497:55: warning: use of old-style cast to ‘i16’ {aka ‘short int’} [-Wold-style-cast]
  497 |     return(V4i16((i16)o.x, (i16)o.y, (i16)o.z, (i16)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i16> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i32 V2i32(Vec2_i8)’:
./code/custom/4coder_base_types.cpp:501:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  501 |     return(V2i32((i32)o.x, (i32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:501:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  501 |     return(V2i32((i32)o.x, (i32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i32 V2i32(Vec2_i16)’:
./code/custom/4coder_base_types.cpp:505:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  505 |     return(V2i32((i32)o.x, (i32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:505:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  505 |     return(V2i32((i32)o.x, (i32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i32 V2i32(Vec2_i32)’:
./code/custom/4coder_base_types.cpp:509:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  509 |     return(V2i32((i32)o.x, (i32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:509:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  509 |     return(V2i32((i32)o.x, (i32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_i32 V2i32(Vec2_f32)’:
./code/custom/4coder_base_types.cpp:513:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  513 |     return(V2i32((i32)o.x, (i32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:513:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  513 |     return(V2i32((i32)o.x, (i32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i32 V3i32(Vec3_i8)’:
./code/custom/4coder_base_types.cpp:517:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  517 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:517:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  517 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:517:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  517 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i32 V3i32(Vec3_i16)’:
./code/custom/4coder_base_types.cpp:521:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  521 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:521:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  521 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:521:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  521 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i32 V3i32(Vec3_i32)’:
./code/custom/4coder_base_types.cpp:525:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  525 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:525:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  525 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:525:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  525 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_i32 V3i32(Vec3_f32)’:
./code/custom/4coder_base_types.cpp:529:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  529 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:529:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  529 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:529:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  529 |     return(V3i32((i32)o.x, (i32)o.y, (i32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i32 V4i32(Vec4_i8)’:
./code/custom/4coder_base_types.cpp:533:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  533 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:533:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  533 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:533:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  533 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp:533:55: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  533 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i32 V4i32(Vec4_i16)’:
./code/custom/4coder_base_types.cpp:537:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  537 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:537:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  537 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:537:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  537 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp:537:55: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  537 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i32 V4i32(Vec4_i32)’:
./code/custom/4coder_base_types.cpp:541:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  541 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:541:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  541 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:541:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  541 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp:541:55: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  541 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_i32 V4i32(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:545:25: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  545 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<i32> (o.x)
./code/custom/4coder_base_types.cpp:545:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  545 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<i32> (o.y)
./code/custom/4coder_base_types.cpp:545:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  545 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<i32> (o.z)
./code/custom/4coder_base_types.cpp:545:55: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  545 |     return(V4i32((i32)o.x, (i32)o.y, (i32)o.z, (i32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<i32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_f32 V2f32(Vec2_i8)’:
./code/custom/4coder_base_types.cpp:549:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  549 |     return(V2f32((f32)o.x, (f32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:549:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  549 |     return(V2f32((f32)o.x, (f32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_f32 V2f32(Vec2_i16)’:
./code/custom/4coder_base_types.cpp:553:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  553 |     return(V2f32((f32)o.x, (f32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:553:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  553 |     return(V2f32((f32)o.x, (f32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_f32 V2f32(Vec2_i32)’:
./code/custom/4coder_base_types.cpp:557:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  557 |     return(V2f32((f32)o.x, (f32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:557:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  557 |     return(V2f32((f32)o.x, (f32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec2_f32 V2f32(Vec2_f32)’:
./code/custom/4coder_base_types.cpp:561:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  561 |     return(V2f32((f32)o.x, (f32)o.y));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:561:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  561 |     return(V2f32((f32)o.x, (f32)o.y));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_f32 V3f32(Vec3_i8)’:
./code/custom/4coder_base_types.cpp:565:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  565 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:565:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  565 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:565:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  565 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_f32 V3f32(Vec3_i16)’:
./code/custom/4coder_base_types.cpp:569:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  569 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:569:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  569 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:569:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  569 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_f32 V3f32(Vec3_i32)’:
./code/custom/4coder_base_types.cpp:573:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  573 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:573:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  573 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:573:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  573 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec3_f32 V3f32(Vec3_f32)’:
./code/custom/4coder_base_types.cpp:577:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  577 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:577:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  577 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:577:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  577 |     return(V3f32((f32)o.x, (f32)o.y, (f32)o.z));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 V4f32(Vec4_i8)’:
./code/custom/4coder_base_types.cpp:581:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  581 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:581:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  581 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:581:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  581 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp:581:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  581 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<f32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 V4f32(Vec4_i16)’:
./code/custom/4coder_base_types.cpp:585:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  585 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:585:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  585 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:585:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  585 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp:585:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  585 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<f32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 V4f32(Vec4_i32)’:
./code/custom/4coder_base_types.cpp:589:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  589 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:589:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  589 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:589:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  589 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp:589:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  589 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<f32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 V4f32(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:593:25: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  593 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                         ^
      |                  --------
      |                  static_cast<f32> (o.x)
./code/custom/4coder_base_types.cpp:593:35: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  593 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                   ^
      |                            --------
      |                            static_cast<f32> (o.y)
./code/custom/4coder_base_types.cpp:593:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  593 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                             ^
      |                                      --------
      |                                      static_cast<f32> (o.z)
./code/custom/4coder_base_types.cpp:593:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  593 |     return(V4f32((f32)o.x, (f32)o.y, (f32)o.z, (f32)o.w));
      |                                                       ^
      |                                                --------
      |                                                static_cast<f32> (o.w)
./code/custom/4coder_base_types.cpp: In function ‘b32 operator==(Vec2_f32, Vec2_f32)’:
./code/custom/4coder_base_types.cpp:1398:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1398 |     return(a.x == b.x && a.y == b.y);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1398:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1398 |     return(a.x == b.x && a.y == b.y);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator==(Vec3_f32, Vec3_f32)’:
./code/custom/4coder_base_types.cpp:1402:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1402 |     return(a.x == b.x && a.y == b.y && a.z == b.z);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1402:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1402 |     return(a.x == b.x && a.y == b.y && a.z == b.z);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1402:44: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1402 |     return(a.x == b.x && a.y == b.y && a.z == b.z);
      |                                        ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator==(Vec4_f32, Vec4_f32)’:
./code/custom/4coder_base_types.cpp:1406:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1406 |     return(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1406:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1406 |     return(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1406:44: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1406 |     return(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w);
      |                                        ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1406:58: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1406 |     return(a.x == b.x && a.y == b.y && a.z == b.z && a.w == b.w);
      |                                                      ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator!=(Vec2_f32, Vec2_f32)’:
./code/custom/4coder_base_types.cpp:1447:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1447 |     return(a.x != b.x || a.y != b.y);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1447:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1447 |     return(a.x != b.x || a.y != b.y);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator!=(Vec3_f32, Vec3_f32)’:
./code/custom/4coder_base_types.cpp:1451:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1451 |     return(a.x != b.x || a.y != b.y || a.z != b.z);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1451:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1451 |     return(a.x != b.x || a.y != b.y || a.z != b.z);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1451:44: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1451 |     return(a.x != b.x || a.y != b.y || a.z != b.z);
      |                                        ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator!=(Vec4_f32, Vec4_f32)’:
./code/custom/4coder_base_types.cpp:1455:16: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1455 |     return(a.x != b.x || a.y != b.y || a.z != b.z || a.w != b.w);
      |            ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1455:30: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1455 |     return(a.x != b.x || a.y != b.y || a.z != b.z || a.w != b.w);
      |                          ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1455:44: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1455 |     return(a.x != b.x || a.y != b.y || a.z != b.z || a.w != b.w);
      |                                        ~~~~^~~~~~
./code/custom/4coder_base_types.cpp:1455:58: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1455 |     return(a.x != b.x || a.y != b.y || a.z != b.z || a.w != b.w);
      |                                                      ~~~~^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i32 lerp(i32, f32, i32)’:
./code/custom/4coder_base_types.cpp:1519:28: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 1519 |     return((i32)(lerp((f32)a, t, (f32)b)));
      |                            ^
      |                       ------
      |                       static_cast<f32> (a)
./code/custom/4coder_base_types.cpp:1519:39: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 1519 |     return((i32)(lerp((f32)a, t, (f32)b)));
      |                                       ^
      |                                  ------
      |                                  static_cast<f32> (b)
./code/custom/4coder_base_types.cpp:1519:41: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 1519 |     return((i32)(lerp((f32)a, t, (f32)b)));
      |                                         ^
      |            -----
      |            static_cast<i32> (            )
./code/custom/4coder_base_types.cpp: In function ‘f32 unlerp(f32, f32, f32)’:
./code/custom/4coder_base_types.cpp:1540:11: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1540 |     if (b != a){
      |         ~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘f32 unlerp(u64, u64, u64)’:
./code/custom/4coder_base_types.cpp:1555:25: warning: use of old-style cast to ‘f64’ {aka ‘double’} [-Wold-style-cast]
 1555 |         r = (f32)(((f64)n)/((f64)d));
      |                         ^
      |                    ------
      |                    static_cast<f64> (n)
./code/custom/4coder_base_types.cpp:1555:34: warning: use of old-style cast to ‘f64’ {aka ‘double’} [-Wold-style-cast]
 1555 |         r = (f32)(((f64)n)/((f64)d));
      |                                  ^
      |                             ------
      |                             static_cast<f64> (d)
./code/custom/4coder_base_types.cpp:1555:36: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 1555 |         r = (f32)(((f64)n)/((f64)d));
      |                                    ^
      |             -----
      |             static_cast<f32> (      )
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 unpack_color(ARGB_Color)’:
./code/custom/4coder_base_types.cpp:1609:31: warning: conversion from ‘ARGB_Color’ {aka ‘unsigned int’} to ‘float’ may change value [-Wconversion]
 1609 |     result.a = ((color >> 24) & 0xFF)/255.f;
      |                ~~~~~~~~~~~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:1610:31: warning: conversion from ‘ARGB_Color’ {aka ‘unsigned int’} to ‘float’ may change value [-Wconversion]
 1610 |     result.r = ((color >> 16) & 0xFF)/255.f;
      |                ~~~~~~~~~~~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:1611:30: warning: conversion from ‘ARGB_Color’ {aka ‘unsigned int’} to ‘float’ may change value [-Wconversion]
 1611 |     result.g = ((color >> 8) & 0xFF)/255.f;
      |                ~~~~~~~~~~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:1612:30: warning: conversion from ‘ARGB_Color’ {aka ‘unsigned int’} to ‘float’ may change value [-Wconversion]
 1612 |     result.b = ((color >> 0) & 0xFF)/255.f;
      |                ~~~~~~~~~~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘ARGB_Color pack_color(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:1619:26: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 1619 |         ((u8)(color.a*255) << 24) |
      |                          ^
      |          ----
      |          static_cast<u8> ()
./code/custom/4coder_base_types.cpp:1620:26: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 1620 |         ((u8)(color.r*255) << 16) |
      |                          ^
      |          ----
      |          static_cast<u8> ()
./code/custom/4coder_base_types.cpp:1621:26: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 1621 |         ((u8)(color.g*255) << 8) |
      |                          ^
      |          ----
      |          static_cast<u8> ()
./code/custom/4coder_base_types.cpp:1622:26: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 1622 |         ((u8)(color.b*255) << 0);
      |                          ^
      |          ----
      |          static_cast<u8> ()
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 rgba_to_hsla(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:1659:15: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1659 |     if (delta == 0){
      |         ~~~~~~^~~~
./code/custom/4coder_base_types.cpp:1664:16: warning: switch missing default case [-Wswitch-default]
 1664 |         switch (maxc){
      |                ^
./code/custom/4coder_base_types.cpp: In function ‘Vec4_f32 hsla_to_rgba(Vec4_f32)’:
./code/custom/4coder_base_types.cpp:1701:12: warning: switch missing default case [-Wswitch-default]
 1701 |     switch (H){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘Range_u64 Iu64(Range_i32)’:
./code/custom/4coder_base_types.cpp:1815:19: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 1815 |     return(Iu64(r.min, r.max));
      |                 ~~^~~
./code/custom/4coder_base_types.cpp:1815:26: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 1815 |     return(Iu64(r.min, r.max));
      |                        ~~^~~
./code/custom/4coder_base_types.cpp: In function ‘b32 operator==(Range_f32, Range_f32)’:
./code/custom/4coder_base_types.cpp:1837:18: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1837 |     return(a.min == b.min && a.max == b.max);
      |            ~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp:1837:36: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 1837 |     return(a.min == b.min && a.max == b.max);
      |                              ~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u64 range_size(Range_u64)’:
./code/custom/4coder_base_types.h:325:23: warning: comparison of unsigned expression in ‘< 0’ is always false [-Wtype-limits]
  325 | #define Max(a,b) (((a)>(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:328:24: note: in expansion of macro ‘Max’
  328 | #define clamp_bot(a,b) Max(a,b)
      |                        ^~~
./code/custom/4coder_base_types.cpp:2057:12: note: in expansion of macro ‘clamp_bot’
 2057 |     size = clamp_bot(0, size);
      |            ^~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u64 range_size_inclusive(Range_u64)’:
./code/custom/4coder_base_types.h:325:23: warning: comparison of unsigned expression in ‘< 0’ is always false [-Wtype-limits]
  325 | #define Max(a,b) (((a)>(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:328:24: note: in expansion of macro ‘Max’
  328 | #define clamp_bot(a,b) Max(a,b)
      |                        ^~~
./code/custom/4coder_base_types.cpp:2082:12: note: in expansion of macro ‘clamp_bot’
 2082 |     size = clamp_bot(0, size);
      |            ^~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i64 replace_range_shift(u64, u64)’:
./code/custom/4coder_base_types.cpp:2249:17: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2249 |     return((i64)insert_length - replace_length);
      |                 ^~~~~~~~~~~~~
      |            -----
      |            static_cast<i64> ()
./code/custom/4coder_base_types.cpp:2249:12: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 2249 |     return((i64)insert_length - replace_length);
      |            ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2249:31: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
 2249 |     return((i64)insert_length - replace_length);
      |           ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i64 replace_range_shift(i64, i64, u64)’:
./code/custom/4coder_base_types.cpp:2253:17: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2253 |     return((i64)insert_length - (end - start));
      |                 ^~~~~~~~~~~~~
      |            -----
      |            static_cast<i64> ()
./code/custom/4coder_base_types.cpp: In function ‘i64 replace_range_shift(Range_i64, u64)’:
./code/custom/4coder_base_types.cpp:2257:17: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2257 |     return((i64)insert_length - (range.end - range.start));
      |                 ^~~~~~~~~~~~~
      |            -----
      |            static_cast<i64> ()
./code/custom/4coder_base_types.cpp: In function ‘Rect_i32 Ri32(Rect_f32)’:
./code/custom/4coder_base_types.cpp:2286:32: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2286 |     Rect_i32 rect = {(i32)(o.x0), (i32)(o.y0), (i32)(o.x1), (i32)(o.y1)};
      |                                ^
      |                      -----------
      |                      static_cast<i32> ((o.x0))
./code/custom/4coder_base_types.cpp:2286:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2286 |     Rect_i32 rect = {(i32)(o.x0), (i32)(o.y0), (i32)(o.x1), (i32)(o.y1)};
      |                                             ^
      |                                   -----------
      |                                   static_cast<i32> ((o.y0))
./code/custom/4coder_base_types.cpp:2286:58: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2286 |     Rect_i32 rect = {(i32)(o.x0), (i32)(o.y0), (i32)(o.x1), (i32)(o.y1)};
      |                                                          ^
      |                                                -----------
      |                                                static_cast<i32> ((o.x1))
./code/custom/4coder_base_types.cpp:2286:71: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2286 |     Rect_i32 rect = {(i32)(o.x0), (i32)(o.y0), (i32)(o.x1), (i32)(o.y1)};
      |                                                                       ^
      |                                                             -----------
      |                                                             static_cast<i32> ((o.y1))
./code/custom/4coder_base_types.cpp: In function ‘Rect_f32 Rf32(Rect_i32)’:
./code/custom/4coder_base_types.cpp:2291:32: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 2291 |     Rect_f32 rect = {(f32)(o.x0), (f32)(o.y0), (f32)(o.x1), (f32)(o.y1)};
      |                                ^
      |                      -----------
      |                      static_cast<f32> ((o.x0))
./code/custom/4coder_base_types.cpp:2291:45: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 2291 |     Rect_f32 rect = {(f32)(o.x0), (f32)(o.y0), (f32)(o.x1), (f32)(o.y1)};
      |                                             ^
      |                                   -----------
      |                                   static_cast<f32> ((o.y0))
./code/custom/4coder_base_types.cpp:2291:58: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 2291 |     Rect_f32 rect = {(f32)(o.x0), (f32)(o.y0), (f32)(o.x1), (f32)(o.y1)};
      |                                                          ^
      |                                                -----------
      |                                                static_cast<f32> ((o.x1))
./code/custom/4coder_base_types.cpp:2291:71: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
 2291 |     Rect_f32 rect = {(f32)(o.x0), (f32)(o.y0), (f32)(o.x1), (f32)(o.y1)};
      |                                                                       ^
      |                                                             -----------
      |                                                             static_cast<f32> ((o.y1))
./code/custom/4coder_base_types.cpp: In function ‘b32 rect_equals(Rect_f32, Rect_f32)’:
./code/custom/4coder_base_types.cpp:2338:17: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 2338 |     return(a.x0 == b.x0 && a.y0 == b.y0 && a.x1 == b.x1 && a.y1 == b.y1);
      |            ~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:2338:33: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 2338 |     return(a.x0 == b.x0 && a.y0 == b.y0 && a.x1 == b.x1 && a.y1 == b.y1);
      |                            ~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:2338:49: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 2338 |     return(a.x0 == b.x0 && a.y0 == b.y0 && a.x1 == b.x1 && a.y1 == b.y1);
      |                                            ~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp:2338:65: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
 2338 |     return(a.x0 == b.x0 && a.y0 == b.y0 && a.x1 == b.x1 && a.y1 == b.y1);
      |                                                            ~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘Scan_Direction flip_direction(Scan_Direction)’:
./code/custom/4coder_base_types.cpp:2556:12: warning: switch missing default case [-Wswitch-default]
 2556 |     switch (direction){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘Side flip_side(Side)’:
./code/custom/4coder_base_types.cpp:2571:12: warning: switch missing default case [-Wswitch-default]
 2571 |     switch (side){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any Sany(void*, u64, u64, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2634:34: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2634 |     String_Any string = {encoding};
      |                                  ^
./code/custom/4coder_base_types.cpp:2636:65: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2636 |         case StringEncoding_ASCII: string.s_char = Schar((char*)str, size, cap); break;
      |                                                                 ^~~
      |                                                          ----------
      |                                                          static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2637:59: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2637 |         case StringEncoding_UTF8:  string.s_u8 = Su8((u8*)str, size, cap); break;
      |                                                           ^~~
      |                                                      --------
      |                                                      static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2638:62: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2638 |         case StringEncoding_UTF16: string.s_u16 = Su16((u16*)str, size, cap); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2639:62: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2639 |         case StringEncoding_UTF32: string.s_u32 = Su32((u32*)str, size, cap); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2635:12: warning: switch missing default case [-Wswitch-default]
 2635 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any Sany(void*, u64, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2667:34: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2667 |     String_Any string = {encoding};
      |                                  ^
./code/custom/4coder_base_types.cpp:2669:65: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2669 |         case StringEncoding_ASCII: string.s_char = Schar((char*)str, size); break;
      |                                                                 ^~~
      |                                                          ----------
      |                                                          static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2670:59: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2670 |         case StringEncoding_UTF8:  string.s_u8 = Su8((u8*)str, size); break;
      |                                                           ^~~
      |                                                      --------
      |                                                      static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2671:62: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2671 |         case StringEncoding_UTF16: string.s_u16 = Su16((u16*)str, size); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2672:62: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2672 |         case StringEncoding_UTF32: string.s_u32 = Su32((u32*)str, size); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2668:12: warning: switch missing default case [-Wswitch-default]
 2668 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_char Schar(char*, char*)’:
./code/custom/4coder_base_types.cpp:2679:48: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2679 |     return(Schar(str, (u64)(one_past_last - str)));
      |                                                ^
      |                       -----
      |                       static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_u8 Su8(u8*, u8*)’:
./code/custom/4coder_base_types.cpp:2683:46: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2683 |     return(Su8(str, (u64)(one_past_last - str)));
      |                                              ^
      |                     -----
      |                     static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_u16 Su16(u16*, u16*)’:
./code/custom/4coder_base_types.cpp:2687:47: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2687 |     return(Su16(str, (u64)(one_past_last - str)));
      |                                               ^
      |                      -----
      |                      static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_u32 Su32(u32*, u32*)’:
./code/custom/4coder_base_types.cpp:2691:47: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2691 |     return(Su32(str, (u64)(one_past_last - str)));
      |                                               ^
      |                      -----
      |                      static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_Any Sany(void*, void*, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2696:34: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2696 |     String_Any string = {encoding};
      |                                  ^
./code/custom/4coder_base_types.cpp:2698:65: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2698 |         case StringEncoding_ASCII: string.s_char = Schar((char*)str, (char*)one_past_last); break;
      |                                                                 ^~~
      |                                                          ----------
      |                                                          static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2698:77: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2698 |         case StringEncoding_ASCII: string.s_char = Schar((char*)str, (char*)one_past_last); break;
      |                                                                             ^~~~~~~~~~~~~
      |                                                                      -------
      |                                                                      static_cast<char*> ()
./code/custom/4coder_base_types.cpp:2699:59: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2699 |         case StringEncoding_UTF8:  string.s_u8 = Su8((u8*)str, (u8*)one_past_last); break;
      |                                                           ^~~
      |                                                      --------
      |                                                      static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2699:69: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2699 |         case StringEncoding_UTF8:  string.s_u8 = Su8((u8*)str, (u8*)one_past_last); break;
      |                                                                     ^~~~~~~~~~~~~
      |                                                                -----
      |                                                                static_cast<u8*> ()
./code/custom/4coder_base_types.cpp:2700:62: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2700 |         case StringEncoding_UTF16: string.s_u16 = Su16((u16*)str, (u16*)one_past_last); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2700:73: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2700 |         case StringEncoding_UTF16: string.s_u16 = Su16((u16*)str, (u16*)one_past_last); break;
      |                                                                         ^~~~~~~~~~~~~
      |                                                                   ------
      |                                                                   static_cast<u16*> ()
./code/custom/4coder_base_types.cpp:2701:62: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2701 |         case StringEncoding_UTF32: string.s_u32 = Su32((u32*)str, (u32*)one_past_last); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2701:73: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2701 |         case StringEncoding_UTF32: string.s_u32 = Su32((u32*)str, (u32*)one_past_last); break;
      |                                                                         ^~~~~~~~~~~~~
      |                                                                   ------
      |                                                                   static_cast<u32*> ()
./code/custom/4coder_base_types.cpp:2697:12: warning: switch missing default case [-Wswitch-default]
 2697 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any Sany(void*, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2733:34: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2733 |     String_Any string = {encoding};
      |                                  ^
./code/custom/4coder_base_types.cpp:2735:65: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2735 |         case StringEncoding_ASCII: string.s_char = Schar((char*)str); break;
      |                                                                 ^~~
      |                                                          ----------
      |                                                          static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2736:59: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2736 |         case StringEncoding_UTF8:  string.s_u8 = Su8((u8*)str); break;
      |                                                           ^~~
      |                                                      --------
      |                                                      static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2737:62: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2737 |         case StringEncoding_UTF16: string.s_u16 = Su16((u16*)str); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2738:62: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2738 |         case StringEncoding_UTF32: string.s_u32 = Su32((u32*)str); break;
      |                                                              ^~~
      |                                                        ---------
      |                                                        static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2734:12: warning: switch missing default case [-Wswitch-default]
 2734 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any SCany(String_char)’:
./code/custom/4coder_base_types.cpp:2766:46: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2766 |     String_Any string = {StringEncoding_ASCII};
      |                                              ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any SCany(String_u8)’:
./code/custom/4coder_base_types.cpp:2772:45: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2772 |     String_Any string = {StringEncoding_UTF8};
      |                                             ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any SCany(String_u16)’:
./code/custom/4coder_base_types.cpp:2778:46: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2778 |     String_Any string = {StringEncoding_UTF16};
      |                                              ^
./code/custom/4coder_base_types.cpp: In function ‘String_Any SCany(String_u32)’:
./code/custom/4coder_base_types.cpp:2784:46: warning: missing initializer for member ‘String_Any::<anonymous>’ [-Wmissing-field-initializers]
 2784 |     String_Any string = {StringEncoding_UTF32};
      |                                              ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(void*, u64, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2812:40: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2812 |     String_Const_Any string = {encoding};
      |                                        ^
./code/custom/4coder_base_types.cpp:2814:66: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2814 |         case StringEncoding_ASCII: string.s_char = SCchar((char*)str, size); break;
      |                                                                  ^~~
      |                                                           ----------
      |                                                           static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2815:60: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2815 |         case StringEncoding_UTF8:  string.s_u8 = SCu8((u8*)str, size); break;
      |                                                            ^~~
      |                                                       --------
      |                                                       static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2816:63: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2816 |         case StringEncoding_UTF16: string.s_u16 = SCu16((u16*)str, size); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2817:63: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2817 |         case StringEncoding_UTF32: string.s_u32 = SCu32((u32*)str, size); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2813:12: warning: switch missing default case [-Wswitch-default]
 2813 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char SCchar(char*, char*)’:
./code/custom/4coder_base_types.cpp:2845:49: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2845 |     return(SCchar(str, (u64)(one_past_last - str)));
      |                                                 ^
      |                        -----
      |                        static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 SCu8(u8*, u8*)’:
./code/custom/4coder_base_types.cpp:2849:47: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2849 |     return(SCu8(str, (u64)(one_past_last - str)));
      |                                               ^
      |                      -----
      |                      static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 SCu16(u16*, u16*)’:
./code/custom/4coder_base_types.cpp:2853:48: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2853 |     return(SCu16(str, (u64)(one_past_last - str)));
      |                                                ^
      |                       -----
      |                       static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 SCu32(u32*, u32*)’:
./code/custom/4coder_base_types.cpp:2857:48: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2857 |     return(SCu32(str, (u64)(one_past_last - str)));
      |                                                ^
      |                       -----
      |                       static_cast<u64> (        )
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(void*, void*, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2862:40: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2862 |     String_Const_Any string = {encoding};
      |                                        ^
./code/custom/4coder_base_types.cpp:2864:66: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2864 |         case StringEncoding_ASCII: string.s_char = SCchar((char*)str, (char*)one_past_last); break;
      |                                                                  ^~~
      |                                                           ----------
      |                                                           static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2864:78: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2864 |         case StringEncoding_ASCII: string.s_char = SCchar((char*)str, (char*)one_past_last); break;
      |                                                                              ^~~~~~~~~~~~~
      |                                                                       -------
      |                                                                       static_cast<char*> ()
./code/custom/4coder_base_types.cpp:2865:60: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2865 |         case StringEncoding_UTF8:  string.s_u8 = SCu8((u8*)str, (u8*)one_past_last); break;
      |                                                            ^~~
      |                                                       --------
      |                                                       static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2865:70: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2865 |         case StringEncoding_UTF8:  string.s_u8 = SCu8((u8*)str, (u8*)one_past_last); break;
      |                                                                      ^~~~~~~~~~~~~
      |                                                                 -----
      |                                                                 static_cast<u8*> ()
./code/custom/4coder_base_types.cpp:2866:63: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2866 |         case StringEncoding_UTF16: string.s_u16 = SCu16((u16*)str, (u16*)one_past_last); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2866:74: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2866 |         case StringEncoding_UTF16: string.s_u16 = SCu16((u16*)str, (u16*)one_past_last); break;
      |                                                                          ^~~~~~~~~~~~~
      |                                                                    ------
      |                                                                    static_cast<u16*> ()
./code/custom/4coder_base_types.cpp:2867:63: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2867 |         case StringEncoding_UTF32: string.s_u32 = SCu32((u32*)str, (u32*)one_past_last); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2867:74: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2867 |         case StringEncoding_UTF32: string.s_u32 = SCu32((u32*)str, (u32*)one_past_last); break;
      |                                                                          ^~~~~~~~~~~~~
      |                                                                    ------
      |                                                                    static_cast<u32*> ()
./code/custom/4coder_base_types.cpp:2863:12: warning: switch missing default case [-Wswitch-default]
 2863 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char SCchar(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2916:30: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2916 |     return(SCchar((char*)str.str, str.size));
      |                              ^~~
      |                   --------------
      |                   reinterpret_cast<char*> (str.str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 SCu8(String_Const_char)’:
./code/custom/4coder_base_types.cpp:2920:26: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2920 |     return(SCu8((u8*)str.str, str.size));
      |                          ^~~
      |                 ------------
      |                 reinterpret_cast<u8*> (str.str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 SCu8(char*, u64)’:
./code/custom/4coder_base_types.cpp:2925:22: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2925 |     return(SCu8((u8*)str, length));
      |                      ^~~
      |                 --------
      |                 reinterpret_cast<u8*> (str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 SCu8(char*, char*)’:
./code/custom/4coder_base_types.cpp:2929:22: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2929 |     return(SCu8((u8*)first, (u8*)one_past_last));
      |                      ^~~~~
      |                 ----------
      |                 reinterpret_cast<u8*> (first)
./code/custom/4coder_base_types.cpp:2929:34: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2929 |     return(SCu8((u8*)first, (u8*)one_past_last));
      |                                  ^~~~~~~~~~~~~
      |                             ------------------
      |                             reinterpret_cast<u8*> (one_past_last)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 SCu8(char*)’:
./code/custom/4coder_base_types.cpp:2933:22: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2933 |     return(SCu8((u8*)str));
      |                      ^~~
      |                 --------
      |                 reinterpret_cast<u8*> (str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 SCu16(wchar_t*, u64)’:
./code/custom/4coder_base_types.cpp:2938:24: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2938 |     return(SCu16((u16*)str, size));
      |                        ^~~
      |                  ---------
      |                  reinterpret_cast<u16*> (str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 SCu16(wchar_t*)’:
./code/custom/4coder_base_types.cpp:2942:24: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2942 |     return(SCu16((u16*)str));
      |                        ^~~
      |                  ---------
      |                  reinterpret_cast<u16*> (str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(void*, String_Encoding)’:
./code/custom/4coder_base_types.cpp:2947:40: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2947 |     String_Const_Any string = {encoding};
      |                                        ^
./code/custom/4coder_base_types.cpp:2949:66: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2949 |         case StringEncoding_ASCII: string.s_char = SCchar((char*)str); break;
      |                                                                  ^~~
      |                                                           ----------
      |                                                           static_cast<char*> (str)
./code/custom/4coder_base_types.cpp:2950:60: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2950 |         case StringEncoding_UTF8:  string.s_u8 = SCu8((u8*)str); break;
      |                                                            ^~~
      |                                                       --------
      |                                                       static_cast<u8*> (str)
./code/custom/4coder_base_types.cpp:2951:63: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 2951 |         case StringEncoding_UTF16: string.s_u16 = SCu16((u16*)str); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u16*> (str)
./code/custom/4coder_base_types.cpp:2952:63: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 2952 |         case StringEncoding_UTF32: string.s_u32 = SCu32((u32*)str); break;
      |                                                               ^~~
      |                                                         ---------
      |                                                         static_cast<u32*> (str)
./code/custom/4coder_base_types.cpp:2948:12: warning: switch missing default case [-Wswitch-default]
 2948 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(String_Const_char)’:
./code/custom/4coder_base_types.cpp:2959:52: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2959 |     String_Const_Any string = {StringEncoding_ASCII};
      |                                                    ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2965:51: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2965 |     String_Const_Any string = {StringEncoding_UTF8};
      |                                                   ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:2971:52: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2971 |     String_Const_Any string = {StringEncoding_UTF16};
      |                                                    ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any SCany(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:2977:52: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 2977 |     String_Const_Any string = {StringEncoding_UTF32};
      |                                                    ^
./code/custom/4coder_base_types.cpp: At global scope:
./code/custom/4coder_base_types.cpp:2989:50: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2989 | function String_Const_u8 string_u8_empty = {(u8*)"", 0};
      |                                                  ^~
./code/custom/4coder_base_types.cpp:2989:45: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2989 | function String_Const_u8 string_u8_empty = {(u8*)"", 0};
      |                                             ^~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void* base_reserve__noop(void*, u64, u64*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2996:26: warning: unused parameter ‘user_data’ [-Wunused-parameter]
 2996 | base_reserve__noop(void *user_data, u64 size, u64 *size_out, String_Const_u8 location){
      |                    ~~~~~~^~~~~~~~~
./code/custom/4coder_base_types.cpp:2996:41: warning: unused parameter ‘size’ [-Wunused-parameter]
 2996 | base_reserve__noop(void *user_data, u64 size, u64 *size_out, String_Const_u8 location){
      |                                     ~~~~^~~~
./code/custom/4coder_base_types.cpp:2996:78: warning: unused parameter ‘location’ [-Wunused-parameter]
 2996 | base_reserve__noop(void *user_data, u64 size, u64 *size_out, String_Const_u8 location){
      |                                                              ~~~~~~~~~~~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void base_commit__noop(void*, void*, u64)’:
./code/custom/4coder_base_types.cpp:3001:25: warning: unused parameter ‘user_data’ [-Wunused-parameter]
 3001 | base_commit__noop(void *user_data, void *ptr, u64 size){}
      |                   ~~~~~~^~~~~~~~~
./code/custom/4coder_base_types.cpp:3001:42: warning: unused parameter ‘ptr’ [-Wunused-parameter]
 3001 | base_commit__noop(void *user_data, void *ptr, u64 size){}
      |                                    ~~~~~~^~~
./code/custom/4coder_base_types.cpp:3001:51: warning: unused parameter ‘size’ [-Wunused-parameter]
 3001 | base_commit__noop(void *user_data, void *ptr, u64 size){}
      |                                               ~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘void base_uncommit__noop(void*, void*, u64)’:
./code/custom/4coder_base_types.cpp:3003:27: warning: unused parameter ‘user_data’ [-Wunused-parameter]
 3003 | base_uncommit__noop(void *user_data, void *ptr, u64 size){}
      |                     ~~~~~~^~~~~~~~~
./code/custom/4coder_base_types.cpp:3003:44: warning: unused parameter ‘ptr’ [-Wunused-parameter]
 3003 | base_uncommit__noop(void *user_data, void *ptr, u64 size){}
      |                                      ~~~~~~^~~
./code/custom/4coder_base_types.cpp:3003:53: warning: unused parameter ‘size’ [-Wunused-parameter]
 3003 | base_uncommit__noop(void *user_data, void *ptr, u64 size){}
      |                                                 ~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘void base_free__noop(void*, void*)’:
./code/custom/4coder_base_types.cpp:3005:23: warning: unused parameter ‘user_data’ [-Wunused-parameter]
 3005 | base_free__noop(void *user_data, void *ptr){}
      |                 ~~~~~~^~~~~~~~~
./code/custom/4coder_base_types.cpp:3005:40: warning: unused parameter ‘ptr’ [-Wunused-parameter]
 3005 | base_free__noop(void *user_data, void *ptr){}
      |                                  ~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘void base_set_access__noop(void*, void*, u64, Access_Flag)’:
./code/custom/4coder_base_types.cpp:3007:29: warning: unused parameter ‘user_data’ [-Wunused-parameter]
 3007 | base_set_access__noop(void *user_data, void *ptr, u64 size, Access_Flag flags){}
      |                       ~~~~~~^~~~~~~~~
./code/custom/4coder_base_types.cpp:3007:46: warning: unused parameter ‘ptr’ [-Wunused-parameter]
 3007 | base_set_access__noop(void *user_data, void *ptr, u64 size, Access_Flag flags){}
      |                                        ~~~~~~^~~
./code/custom/4coder_base_types.cpp:3007:55: warning: unused parameter ‘size’ [-Wunused-parameter]
 3007 | base_set_access__noop(void *user_data, void *ptr, u64 size, Access_Flag flags){}
      |                                                   ~~~~^~~~
./code/custom/4coder_base_types.cpp:3007:73: warning: unused parameter ‘flags’ [-Wunused-parameter]
 3007 | base_set_access__noop(void *user_data, void *ptr, u64 size, Access_Flag flags){}
      |                                                             ~~~~~~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 base_allocate__inner(Base_Allocator*, u64, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3046:35: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 3046 |     return(make_data(memory, (u64)full_size));
      |                                   ^~~~~~~~~
      |                              --------------
      |                              static_cast<u64> (full_size)
./code/custom/4coder_base_types.cpp: In function ‘Cursor make_cursor(void*, u64)’:
./code/custom/4coder_base_types.cpp:3063:27: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3063 |     Cursor cursor = {(u8*)base, 0, size};
      |                           ^~~~
      |                      ---------
      |                      static_cast<u8*> (base)
./code/custom/4coder_base_types.cpp: In function ‘Cursor make_cursor(Base_Allocator*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3072:30: note: in expansion of macro ‘base_allocate’
 3072 |     String_Const_u8 memory = base_allocate(allocator, size);
      |                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3072:30: note: in expansion of macro ‘base_allocate’
 3072 |     String_Const_u8 memory = base_allocate(allocator, size);
      |                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3072:30: note: in expansion of macro ‘base_allocate’
 3072 |     String_Const_u8 memory = base_allocate(allocator, size);
      |                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 linalloc_push(Cursor*, u64, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3076:57: warning: unused parameter ‘location’ [-Wunused-parameter]
 3076 | linalloc_push(Cursor *cursor, u64 size, String_Const_u8 location){
      |                                         ~~~~~~~~~~~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 linalloc_align(Cursor*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3098:44: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3098 |     return(linalloc_push(cursor, new_size, file_name_line_number_lit_u8));
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3098:44: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3098 |     return(linalloc_push(cursor, new_size, file_name_line_number_lit_u8));
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3098:44: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3098 |     return(linalloc_push(cursor, new_size, file_name_line_number_lit_u8));
      |                                            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘Cursor_Node* arena__new_node(Arena*, u64, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3130:53: warning: use of old-style cast to ‘struct Cursor_Node*’ [-Wold-style-cast]
 3130 |     Cursor_Node *cursor_node = (Cursor_Node*)memory.str;
      |                                                     ^~~
      |                                ------------------------
      |                                reinterpret_cast<Cursor_Node*> (memory.str)
./code/custom/4coder_base_types.cpp: In function ‘Temp_Memory begin_temp(Cursor*)’:
./code/custom/4coder_base_types.cpp:3237:51: warning: missing initializer for member ‘Temp_Memory::<anonymous>’ [-Wmissing-field-initializers]
 3237 |     Temp_Memory temp = {LinearAllocatorKind_Cursor};
      |                                                   ^
./code/custom/4coder_base_types.cpp: In function ‘Temp_Memory begin_temp(Arena*)’:
./code/custom/4coder_base_types.cpp:3243:50: warning: missing initializer for member ‘Temp_Memory::<anonymous>’ [-Wmissing-field-initializers]
 3243 |     Temp_Memory temp = {LinearAllocatorKind_Arena};
      |                                                  ^
./code/custom/4coder_base_types.cpp: In function ‘void end_temp(Temp_Memory)’:
./code/custom/4coder_base_types.cpp:3249:12: warning: switch missing default case [-Wswitch-default]
 3249 |     switch (temp.kind){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘Arena_Node* tctx__alloc_arena_node(Thread_Context*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘tctx->Thread_Context::free_arenas’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3296:9: note: in expansion of macro ‘sll_stack_pop’
 3296 |         sll_stack_pop(tctx->free_arenas);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3299:18: note: in expansion of macro ‘push_array_zero’
 3299 |         result = push_array_zero(&tctx->node_arena, Arena_Node, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3299:18: note: in expansion of macro ‘push_array_zero’
 3299 |         result = push_array_zero(&tctx->node_arena, Arena_Node, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3299:18: note: in expansion of macro ‘push_array_zero’
 3299 |         result = push_array_zero(&tctx->node_arena, Arena_Node, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Arena_Node*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_base_types.cpp:3299:18: note: in expansion of macro ‘push_array_zero’
 3299 |         result = push_array_zero(&tctx->node_arena, Arena_Node, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void tctx_release(Thread_Context*, Arena*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_base_types.cpp:3374:24: note: in expansion of macro ‘CastFromMember’
 3374 |     Arena_Node *node = CastFromMember(Arena_Node, arena, arena);
      |                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Arena_Node*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3374:24: note: in expansion of macro ‘CastFromMember’
 3374 |     Arena_Node *node = CastFromMember(Arena_Node, arena, arena);
      |                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3374:24: note: in expansion of macro ‘CastFromMember’
 3374 |     Arena_Node *node = CastFromMember(Arena_Node, arena, arena);
      |                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3374:24: note: in expansion of macro ‘CastFromMember’
 3374 |     Arena_Node *node = CastFromMember(Arena_Node, arena, arena);
      |                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Arena_Node*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_base_types.cpp:3374:24: note: in expansion of macro ‘CastFromMember’
 3374 |     Arena_Node *node = CastFromMember(Arena_Node, arena, arena);
      |                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In constructor ‘Scratch_Block::Scratch_Block(Thread_Context*)’:
./code/custom/4coder_base_types.cpp:3387:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
 3387 | Scratch_Block::Scratch_Block(Thread_Context *t){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3387:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp:3387:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp: In constructor ‘Scratch_Block::Scratch_Block(Thread_Context*, Arena*)’:
./code/custom/4coder_base_types.cpp:3393:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
 3393 | Scratch_Block::Scratch_Block(Thread_Context *t, Arena *a1){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3393:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp:3393:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp: In constructor ‘Scratch_Block::Scratch_Block(Thread_Context*, Arena*, Arena*)’:
./code/custom/4coder_base_types.cpp:3399:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
 3399 | Scratch_Block::Scratch_Block(Thread_Context *t, Arena *a1, Arena *a2){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3399:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp:3399:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp: In constructor ‘Scratch_Block::Scratch_Block(Thread_Context*, Arena*, Arena*, Arena*)’:
./code/custom/4coder_base_types.cpp:3405:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
 3405 | Scratch_Block::Scratch_Block(Thread_Context *t, Arena *a1, Arena *a2, Arena *a3){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3405:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp:3405:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_base_types.cpp: In constructor ‘Temp_Memory_Block::Temp_Memory_Block(Temp_Memory)’:
./code/custom/4coder_base_types.cpp:3425:1: warning: ‘Temp_Memory_Block::temp’ should be initialized in the member initialization list [-Weffc++]
 3425 | Temp_Memory_Block::Temp_Memory_Block(Temp_Memory t){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In constructor ‘Temp_Memory_Block::Temp_Memory_Block(Arena*)’:
./code/custom/4coder_base_types.cpp:3429:1: warning: ‘Temp_Memory_Block::temp’ should be initialized in the member initialization list [-Weffc++]
 3429 | Temp_Memory_Block::Temp_Memory_Block(Arena *arena){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void heap__extend(Heap*, void*, u64)’:
./code/custom/4coder_base_types.cpp:3514:43: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
 3514 |         Heap_Node *new_node = (Heap_Node*)memory;
      |                                           ^~~~~~
      |                               ------------------
      |                               static_cast<Heap_Node*> (memory)
./code/custom/4coder_base_types.cpp: In function ‘void heap__extend_automatic(Heap*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3525:20: note: in expansion of macro ‘push_array’
 3525 |     void *memory = push_array(heap->arena, u8, size);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3525:20: note: in expansion of macro ‘push_array’
 3525 |     void *memory = push_array(heap->arena, u8, size);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3525:20: note: in expansion of macro ‘push_array’
 3525 |     void *memory = push_array(heap->arena, u8, size);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:3525:20: note: in expansion of macro ‘push_array’
 3525 |     void *memory = push_array(heap->arena, u8, size);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void* heap__reserve_chunk(Heap*, Heap_Node*, u64)’:
./code/custom/4coder_base_types.cpp:3531:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3531 |     u8 *ptr = (u8*)(node + 1);
      |                             ^
      |               ---------------
      |               reinterpret_cast<u8*> ((node + 1))
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3532:5: note: in expansion of macro ‘Assert’
 3532 |     Assert(node->size >= size);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:3536:54: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
 3536 |         Heap_Node *new_node = (Heap_Node*)(ptr + size);
      |                                                      ^
      |                               ------------------------
      |                               reinterpret_cast<Heap_Node*> ((ptr + size))
./code/custom/4coder_base_types.cpp: In function ‘void* heap_allocate(Heap*, u64)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_base_types.cpp:3560:35: note: in expansion of macro ‘CastFromMember’
 3560 |                 Heap_Node *node = CastFromMember(Heap_Node, alloc, n);
      |                                   ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3560:35: note: in expansion of macro ‘CastFromMember’
 3560 |                 Heap_Node *node = CastFromMember(Heap_Node, alloc, n);
      |                                   ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3560:35: note: in expansion of macro ‘CastFromMember’
 3560 |                 Heap_Node *node = CastFromMember(Heap_Node, alloc, n);
      |                                   ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3560:35: note: in expansion of macro ‘CastFromMember’
 3560 |                 Heap_Node *node = CastFromMember(Heap_Node, alloc, n);
      |                                   ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_base_types.cpp:3560:35: note: in expansion of macro ‘CastFromMember’
 3560 |                 Heap_Node *node = CastFromMember(Heap_Node, alloc, n);
      |                                   ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void heap__merge(Heap*, Heap_Node*, Heap_Node*)’:
./code/custom/4coder_base_types.cpp:3587:30: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3587 |         u8 *ptr = (u8*)(l + 1) + l->size;
      |                              ^
      |                   ------------
      |                   reinterpret_cast<u8*> ((l + 1))
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.cpp:3588:13: note: in expansion of macro ‘PtrDif’
 3588 |         if (PtrDif(ptr, r) == 0){
      |             ^~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.cpp:3588:13: note: in expansion of macro ‘PtrDif’
 3588 |         if (PtrDif(ptr, r) == 0){
      |             ^~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void heap_free(Heap*, void*)’:
./code/custom/4coder_base_types.cpp:3601:40: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
 3601 |         Heap_Node *node = ((Heap_Node*)memory) - 1;
      |                                        ^~~~~~
      |                            ------------------
      |                            static_cast<Heap_Node*> (memory)
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3602:9: note: in expansion of macro ‘Assert’
 3602 |         Assert(node->alloc.next == 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3603:9: note: in expansion of macro ‘Assert’
 3603 |         Assert(node->alloc.prev == 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_base_types.cpp:3608:33: note: in expansion of macro ‘CastFromMember’
 3608 |         heap__merge(heap, node, CastFromMember(Heap_Node, order, node->order.next));
      |                                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3608:33: note: in expansion of macro ‘CastFromMember’
 3608 |         heap__merge(heap, node, CastFromMember(Heap_Node, order, node->order.next));
      |                                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3608:33: note: in expansion of macro ‘CastFromMember’
 3608 |         heap__merge(heap, node, CastFromMember(Heap_Node, order, node->order.next));
      |                                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3608:33: note: in expansion of macro ‘CastFromMember’
 3608 |         heap__merge(heap, node, CastFromMember(Heap_Node, order, node->order.next));
      |                                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_base_types.cpp:3608:33: note: in expansion of macro ‘CastFromMember’
 3608 |         heap__merge(heap, node, CastFromMember(Heap_Node, order, node->order.next));
      |                                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_base_types.cpp:3610:27: note: in expansion of macro ‘CastFromMember’
 3610 |         heap__merge(heap, CastFromMember(Heap_Node, order, node->order.prev), node);
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3610:27: note: in expansion of macro ‘CastFromMember’
 3610 |         heap__merge(heap, CastFromMember(Heap_Node, order, node->order.prev), node);
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3610:27: note: in expansion of macro ‘CastFromMember’
 3610 |         heap__merge(heap, CastFromMember(Heap_Node, order, node->order.prev), node);
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3610:27: note: in expansion of macro ‘CastFromMember’
 3610 |         heap__merge(heap, CastFromMember(Heap_Node, order, node->order.prev), node);
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Heap_Node*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_base_types.cpp:3610:27: note: in expansion of macro ‘CastFromMember’
 3610 |         heap__merge(heap, CastFromMember(Heap_Node, order, node->order.prev), node);
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void* base_reserve__heap(void*, u64, u64*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3621:25: warning: use of old-style cast to ‘struct Heap*’ [-Wold-style-cast]
 3621 |     Heap *heap = (Heap*)user_data;
      |                         ^~~~~~~~~
      |                  ----------------
      |                  static_cast<Heap*> (user_data)
./code/custom/4coder_base_types.cpp:3620:78: warning: unused parameter ‘location’ [-Wunused-parameter]
 3620 | base_reserve__heap(void *user_data, u64 size, u64 *size_out, String_Const_u8 location){
      |                                                              ~~~~~~~~~~~~~~~~^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void base_free__heap(void*, void*)’:
./code/custom/4coder_base_types.cpp:3629:25: warning: use of old-style cast to ‘struct Heap*’ [-Wold-style-cast]
 3629 |     Heap *heap = (Heap*)user_data;
      |                         ^~~~~~~~~
      |                  ----------------
      |                  static_cast<Heap*> (user_data)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 push_data(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3643:18: note: in expansion of macro ‘push_array’
 3643 |     result.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3643:18: note: in expansion of macro ‘push_array’
 3643 |     result.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3643:18: note: in expansion of macro ‘push_array’
 3643 |     result.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:3643:18: note: in expansion of macro ‘push_array’
 3643 |     result.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 push_data_copy(Arena*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3651:18: note: in expansion of macro ‘push_array_write’
 3651 |     result.str = push_array_write(arena, u8, data.size, data.str);
      |                  ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3651:18: note: in expansion of macro ‘push_array_write’
 3651 |     result.str = push_array_write(arena, u8, data.size, data.str);
      |                  ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3651:18: note: in expansion of macro ‘push_array_write’
 3651 |     result.str = push_array_write(arena, u8, data.size, data.str);
      |                  ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:143: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                               ^
./code/custom/4coder_base_types.cpp:3651:18: note: in expansion of macro ‘push_array_write’
 3651 |     result.str = push_array_write(arena, u8, data.size, data.str);
      |                  ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_prefix(String_Const_Any, u64)’:
./code/custom/4coder_base_types.cpp:4002:12: warning: switch missing default case [-Wswitch-default]
 4002 |     switch (str.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_postfix(String_Const_Any, u64)’:
./code/custom/4coder_base_types.cpp:4042:12: warning: switch missing default case [-Wswitch-default]
 4042 |     switch (str.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_skip(String_Const_Any, u64)’:
./code/custom/4coder_base_types.cpp:4082:12: warning: switch missing default case [-Wswitch-default]
 4082 |     switch (str.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_chop(String_Const_Any, u64)’:
./code/custom/4coder_base_types.cpp:4118:12: warning: switch missing default case [-Wswitch-default]
 4118 |     switch (str.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last(String_Const_char, char)’:
./code/custom/4coder_base_types.cpp:4188:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4188 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last(String_Const_u8, u8)’:
./code/custom/4coder_base_types.cpp:4195:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4195 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last(String_Const_u16, u16)’:
./code/custom/4coder_base_types.cpp:4202:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4202 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last(String_Const_u32, u32)’:
./code/custom/4coder_base_types.cpp:4209:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4209 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_whitespace(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4241:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4241 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_whitespace(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4248:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4248 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_whitespace(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4255:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4255 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_whitespace(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4262:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4262 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_non_whitespace(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4294:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4294 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_non_whitespace(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4301:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4301 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_non_whitespace(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4308:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4308 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_non_whitespace(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4315:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4315 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_slash(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4347:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4347 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_slash(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4354:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4354 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_slash(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4361:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4361 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘i64 string_find_last_slash(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4368:25: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4368 |     i64 size = (i64)str.size;
      |                         ^~~~
      |                -------------
      |                static_cast<i64> (str.size)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_remove_last_folder(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4384:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4384 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_remove_last_folder(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4398:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4398 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_remove_last_folder(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4412:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4412 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_remove_last_folder(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4426:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4426 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_remove_front_of_path(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4450:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4450 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_remove_front_of_path(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4461:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4461 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_remove_front_of_path(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4472:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4472 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_remove_front_of_path(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4483:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4483 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_front_of_path(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4492:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4492 |         str = string_skip(str, slash_pos + 1);
      |                                ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_front_of_path(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4500:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4500 |         str = string_skip(str, slash_pos + 1);
      |                                ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_front_of_path(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4508:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4508 |         str = string_skip(str, slash_pos + 1);
      |                                ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_front_of_path(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4516:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4516 |         str = string_skip(str, slash_pos + 1);
      |                                ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_remove_front_folder_of_path(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4528:30: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4528 |         str.size = slash_pos + 1;
      |                    ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_front_folder_of_path(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4536:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4536 |         str = string_skip(str, slash_pos + 1);
      |                                ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_file_extension(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4543:62: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4543 |     return(string_skip(string, string_find_last(string, '.') + 1));
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_file_extension(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4547:62: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4547 |     return(string_skip(string, string_find_last(string, '.') + 1));
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_file_extension(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4551:62: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4551 |     return(string_skip(string, string_find_last(string, '.') + 1));
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_file_extension(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4555:62: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4555 |     return(string_skip(string, string_find_last(string, '.') + 1));
      |                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_file_without_extension(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4562:40: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4562 |         string = string_prefix(string, pos);
      |                                        ^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_file_without_extension(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4570:40: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4570 |         string = string_prefix(string, pos);
      |                                        ^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_file_without_extension(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4578:40: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4578 |         string = string_prefix(string, pos);
      |                                        ^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_file_without_extension(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4586:40: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 4586 |         string = string_prefix(string, pos);
      |                                        ^~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_chop_whitespace(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4619:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4619 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_chop_whitespace(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4625:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4625 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_chop_whitespace(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4631:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4631 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_chop_whitespace(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4637:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4637 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_skip_chop_whitespace(String_Const_char)’:
./code/custom/4coder_base_types.cpp:4646:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4646 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_skip_chop_whitespace(String_Const_u8)’:
./code/custom/4coder_base_types.cpp:4654:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4654 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_skip_chop_whitespace(String_Const_u16)’:
./code/custom/4coder_base_types.cpp:4662:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4662 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_skip_chop_whitespace(String_Const_u32)’:
./code/custom/4coder_base_types.cpp:4670:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 4670 |     str = string_prefix(str, (u64)(e + 1));
      |                                         ^
      |                              ------------
      |                              static_cast<u64> ((e + 1))
./code/custom/4coder_base_types.cpp: In function ‘b32 string_match(String_Const_Any, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:4735:16: warning: switch missing default case [-Wswitch-default]
 4735 |         switch (a.encoding){
      |                ^
./code/custom/4coder_base_types.cpp: In function ‘b32 string_match(String_Const_char, String_Const_char, String_Match_Rule)’:
./code/custom/4coder_base_types.cpp:4805:12: warning: switch missing default case [-Wswitch-default]
 4805 |     switch (rule){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘b32 string_match(String_Const_u8, String_Const_u8, String_Match_Rule)’:
./code/custom/4coder_base_types.cpp:4820:12: warning: switch missing default case [-Wswitch-default]
 4820 |     switch (rule){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘b32 string_match(String_Const_u16, String_Const_u16, String_Match_Rule)’:
./code/custom/4coder_base_types.cpp:4835:12: warning: switch missing default case [-Wswitch-default]
 4835 |     switch (rule){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘b32 string_match(String_Const_u32, String_Const_u32, String_Match_Rule)’:
./code/custom/4coder_base_types.cpp:4850:12: warning: switch missing default case [-Wswitch-default]
 4850 |     switch (rule){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘i32 string_compare(String_Const_u32, String_Const_u32)’:
./code/custom/4coder_base_types.cpp:5051:25: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
 5051 |         i32 dif = ((ca) - (cb));
      |                   ~~~~~~^~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘i32 string_compare_insensitive(String_Const_u32, String_Const_u32)’:
./code/custom/4coder_base_types.cpp:5108:42: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
 5108 |         i32 dif = character_to_upper(ca) - character_to_upper(cb);
      |                   ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_char string_char_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5309:18: note: in expansion of macro ‘push_array’
 5309 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5309:18: note: in expansion of macro ‘push_array’
 5309 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5309:18: note: in expansion of macro ‘push_array’
 5309 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5309:18: note: in expansion of macro ‘push_array’
 5309 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u8 string_u8_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5316:18: note: in expansion of macro ‘push_array’
 5316 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5316:18: note: in expansion of macro ‘push_array’
 5316 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5316:18: note: in expansion of macro ‘push_array’
 5316 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5316:18: note: in expansion of macro ‘push_array’
 5316 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u16 string_u16_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5323:18: note: in expansion of macro ‘push_array’
 5323 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5323:18: note: in expansion of macro ‘push_array’
 5323 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5323:18: note: in expansion of macro ‘push_array’
 5323 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5323:18: note: in expansion of macro ‘push_array’
 5323 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u32 string_u32_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5330:18: note: in expansion of macro ‘push_array’
 5330 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5330:18: note: in expansion of macro ‘push_array’
 5330 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5330:18: note: in expansion of macro ‘push_array’
 5330 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5330:18: note: in expansion of macro ‘push_array’
 5330 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Any string_any_push(Arena*, u64, String_Encoding)’:
./code/custom/4coder_base_types.cpp:5338:12: warning: switch missing default case [-Wswitch-default]
 5338 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_const_char_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5355:18: note: in expansion of macro ‘push_array’
 5355 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5355:18: note: in expansion of macro ‘push_array’
 5355 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5355:18: note: in expansion of macro ‘push_array’
 5355 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5355:18: note: in expansion of macro ‘push_array’
 5355 |     string.str = push_array(arena, char, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_const_u8_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5362:18: note: in expansion of macro ‘push_array’
 5362 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5362:18: note: in expansion of macro ‘push_array’
 5362 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5362:18: note: in expansion of macro ‘push_array’
 5362 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5362:18: note: in expansion of macro ‘push_array’
 5362 |     string.str = push_array(arena, u8, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_const_u16_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5369:18: note: in expansion of macro ‘push_array’
 5369 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5369:18: note: in expansion of macro ‘push_array’
 5369 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5369:18: note: in expansion of macro ‘push_array’
 5369 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5369:18: note: in expansion of macro ‘push_array’
 5369 |     string.str = push_array(arena, u16, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_const_u32_push(Arena*, u64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5376:18: note: in expansion of macro ‘push_array’
 5376 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5376:18: note: in expansion of macro ‘push_array’
 5376 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5376:18: note: in expansion of macro ‘push_array’
 5376 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5376:18: note: in expansion of macro ‘push_array’
 5376 |     string.str = push_array(arena, u32, size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_const_any_push(Arena*, u64, String_Encoding)’:
./code/custom/4coder_base_types.cpp:5384:12: warning: switch missing default case [-Wswitch-default]
 5384 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char push_string_copy(Arena*, String_Const_char)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5401:18: note: in expansion of macro ‘push_array’
 5401 |     string.str = push_array(arena, char, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5401:18: note: in expansion of macro ‘push_array’
 5401 |     string.str = push_array(arena, char, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5401:18: note: in expansion of macro ‘push_array’
 5401 |     string.str = push_array(arena, char, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5401:18: note: in expansion of macro ‘push_array’
 5401 |     string.str = push_array(arena, char, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 push_string_copy(Arena*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5410:18: note: in expansion of macro ‘push_array’
 5410 |     string.str = push_array(arena, u8, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5410:18: note: in expansion of macro ‘push_array’
 5410 |     string.str = push_array(arena, u8, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5410:18: note: in expansion of macro ‘push_array’
 5410 |     string.str = push_array(arena, u8, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5410:18: note: in expansion of macro ‘push_array’
 5410 |     string.str = push_array(arena, u8, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 push_string_copy(Arena*, String_Const_u16)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5419:18: note: in expansion of macro ‘push_array’
 5419 |     string.str = push_array(arena, u16, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5419:18: note: in expansion of macro ‘push_array’
 5419 |     string.str = push_array(arena, u16, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5419:18: note: in expansion of macro ‘push_array’
 5419 |     string.str = push_array(arena, u16, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5419:18: note: in expansion of macro ‘push_array’
 5419 |     string.str = push_array(arena, u16, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 push_string_copy(Arena*, String_Const_u32)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5428:18: note: in expansion of macro ‘push_array’
 5428 |     string.str = push_array(arena, u32, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5428:18: note: in expansion of macro ‘push_array’
 5428 |     string.str = push_array(arena, u32, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5428:18: note: in expansion of macro ‘push_array’
 5428 |     string.str = push_array(arena, u32, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5428:18: note: in expansion of macro ‘push_array’
 5428 |     string.str = push_array(arena, u32, src.size + 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any push_string_copy(Arena*, u64, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:5438:12: warning: switch missing default case [-Wswitch-default]
 5438 |     switch (src.encoding){
      |            ^
./code/custom/4coder_base_types.cpp:5436:36: warning: unused parameter ‘size’ [-Wunused-parameter]
 5436 | push_string_copy(Arena *arena, u64 size, String_Const_Any src){
      |                                ~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8_Array push_string_array_copy(Arena*, String_Const_u8_Array)’:
./code/custom/4coder_base_types.cpp:5450:58: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 5450 |     result.vals = push_array(arena, String_Const_u8, src.count);
      |                                                          ^
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5450:19: note: in expansion of macro ‘push_array’
 5450 |     result.vals = push_array(arena, String_Const_u8, src.count);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5450:19: note: in expansion of macro ‘push_array’
 5450 |     result.vals = push_array(arena, String_Const_u8, src.count);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5450:19: note: in expansion of macro ‘push_array’
 5450 |     result.vals = push_array(arena, String_Const_u8, src.count);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5450:19: note: in expansion of macro ‘push_array’
 5450 |     result.vals = push_array(arena, String_Const_u8, src.count);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_push(Arena*, List_String_Const_char*, String_Const_char)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5485:36: note: in expansion of macro ‘push_array’
 5485 |     Node_String_Const_char *node = push_array(arena, Node_String_Const_char, 1);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5485:36: note: in expansion of macro ‘push_array’
 5485 |     Node_String_Const_char *node = push_array(arena, Node_String_Const_char, 1);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5485:36: note: in expansion of macro ‘push_array’
 5485 |     Node_String_Const_char *node = push_array(arena, Node_String_Const_char, 1);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5485:36: note: in expansion of macro ‘push_array’
 5485 |     Node_String_Const_char *node = push_array(arena, Node_String_Const_char, 1);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_push(Arena*, List_String_Const_u8*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5493:34: note: in expansion of macro ‘push_array’
 5493 |     Node_String_Const_u8 *node = push_array(arena, Node_String_Const_u8, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5493:34: note: in expansion of macro ‘push_array’
 5493 |     Node_String_Const_u8 *node = push_array(arena, Node_String_Const_u8, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5493:34: note: in expansion of macro ‘push_array’
 5493 |     Node_String_Const_u8 *node = push_array(arena, Node_String_Const_u8, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5493:34: note: in expansion of macro ‘push_array’
 5493 |     Node_String_Const_u8 *node = push_array(arena, Node_String_Const_u8, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_push(Arena*, List_String_Const_u16*, String_Const_u16)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5501:35: note: in expansion of macro ‘push_array’
 5501 |     Node_String_Const_u16 *node = push_array(arena, Node_String_Const_u16, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5501:35: note: in expansion of macro ‘push_array’
 5501 |     Node_String_Const_u16 *node = push_array(arena, Node_String_Const_u16, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5501:35: note: in expansion of macro ‘push_array’
 5501 |     Node_String_Const_u16 *node = push_array(arena, Node_String_Const_u16, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u16*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5501:35: note: in expansion of macro ‘push_array’
 5501 |     Node_String_Const_u16 *node = push_array(arena, Node_String_Const_u16, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_push(Arena*, List_String_Const_u32*, String_Const_u32)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5509:35: note: in expansion of macro ‘push_array’
 5509 |     Node_String_Const_u32 *node = push_array(arena, Node_String_Const_u32, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5509:35: note: in expansion of macro ‘push_array’
 5509 |     Node_String_Const_u32 *node = push_array(arena, Node_String_Const_u32, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5509:35: note: in expansion of macro ‘push_array’
 5509 |     Node_String_Const_u32 *node = push_array(arena, Node_String_Const_u32, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u32*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5509:35: note: in expansion of macro ‘push_array’
 5509 |     Node_String_Const_u32 *node = push_array(arena, Node_String_Const_u32, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_push(Arena*, List_String_Const_Any*, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5518:35: note: in expansion of macro ‘push_array’
 5518 |     Node_String_Const_Any *node = push_array(arena, Node_String_Const_Any, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5518:35: note: in expansion of macro ‘push_array’
 5518 |     Node_String_Const_Any *node = push_array(arena, Node_String_Const_Any, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5518:35: note: in expansion of macro ‘push_array’
 5518 |     Node_String_Const_Any *node = push_array(arena, Node_String_Const_Any, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_Any*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:5518:35: note: in expansion of macro ‘push_array’
 5518 |     Node_String_Const_Any *node = push_array(arena, Node_String_Const_Any, 1);
      |                                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_list_flatten(Arena*, List_String_Const_char, String_Const_char (*)(String_Const_char), String_Const_char, String_Separator_Flag, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:5680:86: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 5680 |     u64 separator_size = separator.size*(list.node_count + before_first + after_last - 1);
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_list_flatten(Arena*, List_String_Const_u8, String_Const_u8 (*)(String_Const_u8), String_Const_u8, String_Separator_Flag, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:5707:86: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 5707 |     u64 separator_size = separator.size*(list.node_count + before_first + after_last - 1);
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_list_flatten(Arena*, List_String_Const_u16, String_Const_u16 (*)(String_Const_u16), String_Const_u16, String_Separator_Flag, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:5734:86: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 5734 |     u64 separator_size = separator.size*(list.node_count + before_first + after_last - 1);
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_list_flatten(Arena*, List_String_Const_u32, String_Const_u32 (*)(String_Const_u32), String_Const_u32, String_Separator_Flag, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:5761:86: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 5761 |     u64 separator_size = separator.size*(list.node_count + before_first + after_last - 1);
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_insert_separators(Arena*, List_String_Const_char*, String_Const_char, String_Separator_Flag)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6006:44: note: in expansion of macro ‘push_array’
 6006 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6006:44: note: in expansion of macro ‘push_array’
 6006 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6006:44: note: in expansion of macro ‘push_array’
 6006 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6006:44: note: in expansion of macro ‘push_array’
 6006 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6014:44: note: in expansion of macro ‘push_array’
 6014 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6014:44: note: in expansion of macro ‘push_array’
 6014 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6014:44: note: in expansion of macro ‘push_array’
 6014 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6014:44: note: in expansion of macro ‘push_array’
 6014 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6022:44: note: in expansion of macro ‘push_array’
 6022 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6022:44: note: in expansion of macro ‘push_array’
 6022 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6022:44: note: in expansion of macro ‘push_array’
 6022 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6022:44: note: in expansion of macro ‘push_array’
 6022 |         Node_String_Const_char *new_node = push_array(arena, Node_String_Const_char, 1);
      |                                            ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_insert_separators(Arena*, List_String_Const_u8*, String_Const_u8, String_Separator_Flag)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6038:42: note: in expansion of macro ‘push_array’
 6038 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6038:42: note: in expansion of macro ‘push_array’
 6038 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6038:42: note: in expansion of macro ‘push_array’
 6038 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6038:42: note: in expansion of macro ‘push_array’
 6038 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6046:42: note: in expansion of macro ‘push_array’
 6046 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6046:42: note: in expansion of macro ‘push_array’
 6046 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6046:42: note: in expansion of macro ‘push_array’
 6046 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6046:42: note: in expansion of macro ‘push_array’
 6046 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6054:42: note: in expansion of macro ‘push_array’
 6054 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6054:42: note: in expansion of macro ‘push_array’
 6054 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6054:42: note: in expansion of macro ‘push_array’
 6054 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6054:42: note: in expansion of macro ‘push_array’
 6054 |         Node_String_Const_u8 *new_node = push_array(arena, Node_String_Const_u8, 1);
      |                                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_insert_separators(Arena*, List_String_Const_u16*, String_Const_u16, String_Separator_Flag)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6070:43: note: in expansion of macro ‘push_array’
 6070 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6070:43: note: in expansion of macro ‘push_array’
 6070 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6070:43: note: in expansion of macro ‘push_array’
 6070 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u16*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6070:43: note: in expansion of macro ‘push_array’
 6070 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6078:43: note: in expansion of macro ‘push_array’
 6078 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6078:43: note: in expansion of macro ‘push_array’
 6078 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6078:43: note: in expansion of macro ‘push_array’
 6078 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u16*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6078:43: note: in expansion of macro ‘push_array’
 6078 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6086:43: note: in expansion of macro ‘push_array’
 6086 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6086:43: note: in expansion of macro ‘push_array’
 6086 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6086:43: note: in expansion of macro ‘push_array’
 6086 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u16*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6086:43: note: in expansion of macro ‘push_array’
 6086 |         Node_String_Const_u16 *new_node = push_array(arena, Node_String_Const_u16, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_insert_separators(Arena*, List_String_Const_u32*, String_Const_u32, String_Separator_Flag)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6102:43: note: in expansion of macro ‘push_array’
 6102 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6102:43: note: in expansion of macro ‘push_array’
 6102 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6102:43: note: in expansion of macro ‘push_array’
 6102 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u32*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6102:43: note: in expansion of macro ‘push_array’
 6102 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6110:43: note: in expansion of macro ‘push_array’
 6110 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6110:43: note: in expansion of macro ‘push_array’
 6110 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6110:43: note: in expansion of macro ‘push_array’
 6110 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u32*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6110:43: note: in expansion of macro ‘push_array’
 6110 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6118:43: note: in expansion of macro ‘push_array’
 6118 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6118:43: note: in expansion of macro ‘push_array’
 6118 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6118:43: note: in expansion of macro ‘push_array’
 6118 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Node_String_Const_u32*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6118:43: note: in expansion of macro ‘push_array’
 6118 |         Node_String_Const_u32 *new_node = push_array(arena, Node_String_Const_u32, 1);
      |                                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_rewrite_nodes(Arena*, List_String_Const_char*, String_Const_char, String_Const_char)’:
./code/custom/4coder_base_types.cpp:6129:34: warning: unused parameter ‘arena’ [-Wunused-parameter]
 6129 | string_list_rewrite_nodes(Arena *arena, List_String_Const_char *list, String_Const_char needle, String_Const_char new_value){
      |                           ~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u8*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:6141:34: warning: unused parameter ‘arena’ [-Wunused-parameter]
 6141 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u8 *list, String_Const_u8 needle, String_Const_u8 new_value){
      |                           ~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u16*, String_Const_u16, String_Const_u16)’:
./code/custom/4coder_base_types.cpp:6153:34: warning: unused parameter ‘arena’ [-Wunused-parameter]
 6153 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u16 *list, String_Const_u16 needle, String_Const_u16 new_value){
      |                           ~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp: In function ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u32*, String_Const_u32, String_Const_u32)’:
./code/custom/4coder_base_types.cpp:6165:34: warning: unused parameter ‘arena’ [-Wunused-parameter]
 6165 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u32 *list, String_Const_u32 needle, String_Const_u32 new_value){
      |                           ~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp: In function ‘List_String_Const_u8 string_split_wildcards(Arena*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:6213:72: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 6213 |         List_String_Const_u8 splits = string_split(arena, string, (u8*)"*", 1);
      |                                                                        ^~~
./code/custom/4coder_base_types.cpp:6213:67: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 6213 |         List_String_Const_u8 splits = string_split(arena, string, (u8*)"*", 1);
      |                                                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘Character_Consume_Result utf8_consume(u8*, u64)’:
./code/custom/4coder_base_types.cpp:6344:12: warning: switch missing default case [-Wswitch-default]
 6344 |     switch (byte_class){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘Character_Consume_Result utf16_consume(u16*, u64)’:
./code/custom/4coder_base_types.cpp:6398:54: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘int’ may change the sign of the result [-Wsign-conversion]
 6398 |         result.codepoint = ((str[0] - 0xD800) << 10) | (str[1] - 0xDC00);
      |                            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u32 utf8_write(u8*, u32)’:
./code/custom/4coder_base_types.cpp:6408:22: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 6408 |         str[0] = (u8)codepoint;
      |                      ^~~~~~~~~
      |                  -------------
      |                  static_cast<u8> (codepoint)
./code/custom/4coder_base_types.cpp: In function ‘u32 utf16_write(u16*, u32)’:
./code/custom/4coder_base_types.cpp:6440:23: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
 6440 |         str[0] = (u16)'?';
      |                       ^~~
      |                  --------
      |                  static_cast<u16> ('?')
./code/custom/4coder_base_types.cpp:6443:23: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
 6443 |         str[0] = (u16)codepoint;
      |                       ^~~~~~~~~
      |                  --------------
      |                  static_cast<u16> (codepoint)
./code/custom/4coder_base_types.cpp:6447:40: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
 6447 |         str[0] = 0xD800 + (u16)(v >> 10);
      |                                        ^
      |                           --------------
      |                           static_cast<u16> ((v >> 10))
./code/custom/4coder_base_types.cpp: In function ‘String_u8 string_u8_from_string_char(Arena*, String_Const_char, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6463:15: note: in expansion of macro ‘push_array’
 6463 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6463:15: note: in expansion of macro ‘push_array’
 6463 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6463:15: note: in expansion of macro ‘push_array’
 6463 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6463:15: note: in expansion of macro ‘push_array’
 6463 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6465:39: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
 6465 |         out.str[i] = ((u8)string.str[i])&bitmask_7;
      |                                       ^
      |                       ----
      |                       static_cast<u8> ()
./code/custom/4coder_base_types.cpp: In function ‘String_u16 string_u16_from_string_char(Arena*, String_Const_char, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6481:15: note: in expansion of macro ‘push_array’
 6481 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6481:15: note: in expansion of macro ‘push_array’
 6481 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6481:15: note: in expansion of macro ‘push_array’
 6481 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6481:15: note: in expansion of macro ‘push_array’
 6481 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6483:40: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
 6483 |         out.str[i] = ((u16)string.str[i])&bitmask_7;
      |                                        ^
      |                       -----
      |                       static_cast<u16> ()
./code/custom/4coder_base_types.cpp: In function ‘String_u32 string_u32_from_string_char(Arena*, String_Const_char, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6499:15: note: in expansion of macro ‘push_array’
 6499 |     out.str = push_array(arena, u32, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6499:15: note: in expansion of macro ‘push_array’
 6499 |     out.str = push_array(arena, u32, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6499:15: note: in expansion of macro ‘push_array’
 6499 |     out.str = push_array(arena, u32, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6499:15: note: in expansion of macro ‘push_array’
 6499 |     out.str = push_array(arena, u32, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6501:40: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
 6501 |         out.str[i] = ((u32)string.str[i])&bitmask_7;
      |                                        ^
      |                       -----
      |                       static_cast<u32> ()
./code/custom/4coder_base_types.cpp: In function ‘String_char string_char_from_string_u8(Arena*, String_Const_u8, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6517:15: note: in expansion of macro ‘push_array’
 6517 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6517:15: note: in expansion of macro ‘push_array’
 6517 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6517:15: note: in expansion of macro ‘push_array’
 6517 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6517:15: note: in expansion of macro ‘push_array’
 6517 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6524:73: warning: use of old-style cast to ‘char’ [-Wold-style-cast]
 6524 |         out.str[out.size++] = (consume.codepoint <= 127)?((char)consume.codepoint):('?');
      |                                                                         ^~~~~~~~~
      |                                                           ------
      |                                                           static_cast<char> (    )
./code/custom/4coder_base_types.cpp: In function ‘String_u16 string_u16_from_string_u8(Arena*, String_Const_u8, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6539:15: note: in expansion of macro ‘push_array’
 6539 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6539:15: note: in expansion of macro ‘push_array’
 6539 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6539:15: note: in expansion of macro ‘push_array’
 6539 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6539:15: note: in expansion of macro ‘push_array’
 6539 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u32 string_u32_from_string_u8(Arena*, String_Const_u8, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6561:15: note: in expansion of macro ‘push_array’
 6561 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6561:15: note: in expansion of macro ‘push_array’
 6561 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6561:15: note: in expansion of macro ‘push_array’
 6561 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6561:15: note: in expansion of macro ‘push_array’
 6561 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6568:67: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 6568 |         out.str[out.size++] = (consume.codepoint == max_u32)?(u64)'?':(consume.codepoint);
      |                                                                   ^~~
      |                                                              --------
      |                                                              static_cast<u64> ('?')
./code/custom/4coder_base_types.cpp: In function ‘String_char string_char_from_string_u16(Arena*, String_Const_u16, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6583:15: note: in expansion of macro ‘push_array’
 6583 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6583:15: note: in expansion of macro ‘push_array’
 6583 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6583:15: note: in expansion of macro ‘push_array’
 6583 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6583:15: note: in expansion of macro ‘push_array’
 6583 |     out.str = push_array(arena, char, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6590:73: warning: use of old-style cast to ‘char’ [-Wold-style-cast]
 6590 |         out.str[out.size++] = (consume.codepoint <= 127)?((char)consume.codepoint):('?');
      |                                                                         ^~~~~~~~~
      |                                                           ------
      |                                                           static_cast<char> (    )
./code/custom/4coder_base_types.cpp: In function ‘String_u8 string_u8_from_string_u16(Arena*, String_Const_u16, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6605:15: note: in expansion of macro ‘push_array’
 6605 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6605:15: note: in expansion of macro ‘push_array’
 6605 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6605:15: note: in expansion of macro ‘push_array’
 6605 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6605:15: note: in expansion of macro ‘push_array’
 6605 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u32 string_u32_from_string_u16(Arena*, String_Const_u16, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6627:15: note: in expansion of macro ‘push_array’
 6627 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6627:15: note: in expansion of macro ‘push_array’
 6627 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6627:15: note: in expansion of macro ‘push_array’
 6627 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6627:15: note: in expansion of macro ‘push_array’
 6627 |     out.str = push_array(arena, u32, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_char string_char_from_string_u32(Arena*, String_Const_u32, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6649:15: note: in expansion of macro ‘push_array’
 6649 |     out.str = push_array(arena, char, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6649:15: note: in expansion of macro ‘push_array’
 6649 |     out.str = push_array(arena, char, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6649:15: note: in expansion of macro ‘push_array’
 6649 |     out.str = push_array(arena, char, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6649:15: note: in expansion of macro ‘push_array’
 6649 |     out.str = push_array(arena, char, string.size);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:6654:57: warning: use of old-style cast to ‘char’ [-Wold-style-cast]
 6654 |         out.str[out.size++] = (codepoint <= 127)?((char)codepoint):('?');
      |                                                         ^~~~~~~~~
      |                                                   ---------------
      |                                                   static_cast<char> (codepoint)
./code/custom/4coder_base_types.cpp: In function ‘String_u8 string_u8_from_string_u32(Arena*, String_Const_u32, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6669:15: note: in expansion of macro ‘push_array’
 6669 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6669:15: note: in expansion of macro ‘push_array’
 6669 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6669:15: note: in expansion of macro ‘push_array’
 6669 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6669:15: note: in expansion of macro ‘push_array’
 6669 |     out.str = push_array(arena, u8, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_u16 string_u16_from_string_u32(Arena*, String_Const_u32, String_Fill_Terminate_Rule)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6688:15: note: in expansion of macro ‘push_array’
 6688 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6688:15: note: in expansion of macro ‘push_array’
 6688 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6688:15: note: in expansion of macro ‘push_array’
 6688 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:6688:15: note: in expansion of macro ‘push_array’
 6688 |     out.str = push_array(arena, u16, out.cap);
      |               ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_char_from_any(Arena*, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:6756:12: warning: switch missing default case [-Wswitch-default]
 6756 |     switch (string.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_u8_from_any(Arena*, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:6767:12: warning: switch missing default case [-Wswitch-default]
 6767 |     switch (string.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u16 string_u16_from_any(Arena*, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:6778:12: warning: switch missing default case [-Wswitch-default]
 6778 |     switch (string.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u32 string_u32_from_any(Arena*, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:6789:12: warning: switch missing default case [-Wswitch-default]
 6789 |     switch (string.encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_Any string_any_from_any(Arena*, String_Encoding, String_Const_Any)’:
./code/custom/4coder_base_types.cpp:6800:40: warning: missing initializer for member ‘String_Const_Any::<anonymous>’ [-Wmissing-field-initializers]
 6800 |     String_Const_Any result = {encoding};
      |                                        ^
./code/custom/4coder_base_types.cpp:6801:12: warning: switch missing default case [-Wswitch-default]
 6801 |     switch (encoding){
      |            ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_escape(Arena*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:7019:68: note: in expansion of macro ‘string_u8_litexpr’
 7019 |     List_String_Const_u8 list = string_replace_list(arena, string, string_u8_litexpr("\\"),
      |                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:7019:68: note: in expansion of macro ‘string_u8_litexpr’
 7019 |     List_String_Const_u8 list = string_replace_list(arena, string, string_u8_litexpr("\\"),
      |                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:7019:68: note: in expansion of macro ‘string_u8_litexpr’
 7019 |     List_String_Const_u8 list = string_replace_list(arena, string, string_u8_litexpr("\\"),
      |                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:7020:53: note: in expansion of macro ‘string_u8_litexpr’
 7020 |                                                     string_u8_litexpr("\\\\"));
      |                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:7020:53: note: in expansion of macro ‘string_u8_litexpr’
 7020 |                                                     string_u8_litexpr("\\\\"));
      |                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:7020:53: note: in expansion of macro ‘string_u8_litexpr’
 7020 |                                                     string_u8_litexpr("\\\\"));
      |                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:7026:80: note: in expansion of macro ‘string_u8_litexpr’
 7026 |         List_String_Const_u8 relist = string_replace_list(arena, node->string, string_u8_litexpr("\""),
      |                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:7026:80: note: in expansion of macro ‘string_u8_litexpr’
 7026 |         List_String_Const_u8 relist = string_replace_list(arena, node->string, string_u8_litexpr("\""),
      |                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:7026:80: note: in expansion of macro ‘string_u8_litexpr’
 7026 |         List_String_Const_u8 relist = string_replace_list(arena, node->string, string_u8_litexpr("\""),
      |                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:7027:59: note: in expansion of macro ‘string_u8_litexpr’
 7027 |                                                           string_u8_litexpr("\\\""));
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:7027:59: note: in expansion of macro ‘string_u8_litexpr’
 7027 |                                                           string_u8_litexpr("\\\""));
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:7027:59: note: in expansion of macro ‘string_u8_litexpr’
 7027 |                                                           string_u8_litexpr("\\\""));
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_char string_interpret_escapes(Arena*, String_Const_char)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7043:19: note: in expansion of macro ‘push_array’
 7043 |     char *space = push_array(arena, char, string.size + 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7043:19: note: in expansion of macro ‘push_array’
 7043 |     char *space = push_array(arena, char, string.size + 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7043:19: note: in expansion of macro ‘push_array’
 7043 |     char *space = push_array(arena, char, string.size + 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_base_types.cpp:7043:19: note: in expansion of macro ‘push_array’
 7043 |     char *space = push_array(arena, char, string.size + 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_from_integer(Arena*, u64, u32)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:7154:46: note: in expansion of macro ‘string_u8_litexpr’
 7154 |             result = push_string_copy(arena, string_u8_litexpr("0"));
      |                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:7154:46: note: in expansion of macro ‘string_u8_litexpr’
 7154 |             result = push_string_copy(arena, string_u8_litexpr("0"));
      |                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:7154:46: note: in expansion of macro ‘string_u8_litexpr’
 7154 |             result = push_string_copy(arena, string_u8_litexpr("0"));
      |                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘u64 string_to_integer(String_Const_char, u32)’:
./code/custom/4coder_base_types.cpp:7216:47: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 7216 |     return(string_to_integer(SCu8((u8*)string.str, string.size), radix));
      |                                               ^~~
      |                                   ---------------
      |                                   reinterpret_cast<u8*> (string.str)
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 string_base64_encode_from_binary(Arena*, void*, u64)’:
./code/custom/4coder_base_types.cpp:7225:18: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 7225 |     u8 *d = (u8*)data;
      |                  ^~~~
      |             ---------
      |             static_cast<u8*> (data)
./code/custom/4coder_base_types.cpp:7228:41: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 7228 |         i32 in_byte_count = (i32)(de - d);
      |                                         ^
      |                             -------------
      |                             static_cast<i32> ((de - d))
./code/custom/4coder_base_types.h:326:23: warning: comparison of integer expressions of different signedness: ‘long unsigned int’ and ‘i32’ {aka ‘int’} [-Wsign-compare]
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:327:24: note: in expansion of macro ‘Min’
  327 | #define clamp_top(a,b) Min(a,b)
      |                        ^~~
./code/custom/4coder_base_types.cpp:7233:36: note: in expansion of macro ‘clamp_top’
 7233 |             block_copy(D_space, d, clamp_top(sizeof(D_space), in_byte_count));
      |                                    ^~~~~~~~~
./code/custom/4coder_base_types.cpp:7233:63: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 7233 |             block_copy(D_space, d, clamp_top(sizeof(D_space), in_byte_count));
./code/custom/4coder_base_types.h:326:34: note: in definition of macro ‘Min’
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                                  ^
./code/custom/4coder_base_types.cpp:7233:36: note: in expansion of macro ‘clamp_top’
 7233 |             block_copy(D_space, d, clamp_top(sizeof(D_space), in_byte_count));
      |                                    ^~~~~~~~~
./code/custom/4coder_base_types.cpp:7243:16: warning: switch missing default case [-Wswitch-default]
 7243 |         switch (in_byte_count){
      |                ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 data_decode_from_base64(Arena*, u8*, u64)’:
./code/custom/4coder_base_types.cpp:7276:46: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 7276 |             i32 out_byte_count = (i32)(de - d);
      |                                              ^
      |                                  -------------
      |                                  static_cast<i32> ((de - d))
./code/custom/4coder_base_types.cpp:7295:39: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
 7295 |                 Assert(out_byte_count <= sizeof(D_space));
      |                        ~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7295:17: note: in expansion of macro ‘Assert’
 7295 |                 Assert(out_byte_count <= sizeof(D_space));
      |                 ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7295:17: note: in expansion of macro ‘Assert’
 7295 |                 Assert(out_byte_count <= sizeof(D_space));
      |                 ^~~~~~
./code/custom/4coder_base_types.cpp:7296:40: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 7296 |                 block_copy(D, D_space, out_byte_count);
      |                                        ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp: In function ‘Date_Time date_time_from_time_stamp(u64)’:
./code/custom/4coder_base_types.cpp:7327:29: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u16’ {aka ‘short unsigned int’} may change value [-Wconversion]
 7327 |     result.msec = time_stamp%1000;
      |                   ~~~~~~~~~~^~~~~
./code/custom/4coder_base_types.cpp:7329:28: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
 7329 |     result.sec = time_stamp%61;
      |                  ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp:7331:28: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
 7331 |     result.min = time_stamp%60;
      |                  ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp:7333:29: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
 7333 |     result.hour = time_stamp%24;
      |                   ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp:7335:28: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
 7335 |     result.day = time_stamp%30;
      |                  ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp:7337:28: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u8’ {aka ‘unsigned char’} may change value [-Wconversion]
 7337 |     result.mon = time_stamp%12;
      |                  ~~~~~~~~~~^~~
./code/custom/4coder_base_types.cpp:7339:24: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
 7339 |     result.year = (u32)time_stamp;
      |                        ^~~~~~~~~~
      |                   ---------------
      |                   static_cast<u32> (time_stamp)
In file included from ./code/4ed_app_target.cpp:70:
./code/custom/4coder_layout.cpp: In function ‘i64 layout_nearest_pos_to_xy(Layout_Item_List, Vec2_f32)’:
./code/custom/4coder_layout.cpp:55:21: warning: comparing floating-point with ‘==’ or ‘!=’ is unsafe [-Wfloat-equal]
   55 |             if (p.x == max_f32){
      |                 ~~~~^~~~~~~~~~
./code/custom/4coder_string_match.cpp: In function ‘void string_match_list_push(Arena*, String_Match_List*, Buffer_ID, i32, String_Match_Flag, Range_i64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:15:27: note: in expansion of macro ‘push_array’
   15 |     String_Match *match = push_array(arena, String_Match, 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:15:27: note: in expansion of macro ‘push_array’
   15 |     String_Match *match = push_array(arena, String_Match, 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:15:27: note: in expansion of macro ‘push_array’
   15 |     String_Match *match = push_array(arena, String_Match, 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct String_Match*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_string_match.cpp:15:27: note: in expansion of macro ‘push_array’
   15 |     String_Match *match = push_array(arena, String_Match, 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_string_match.cpp: In function ‘String_Match_List string_match_list_merge_nearest(String_Match_List*, String_Match_List*, Range_i64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:118:5: note: in expansion of macro ‘Assert’
  118 |     Assert(node_a == 0 || node_b == 0);
      |     ^~~~~~
In file included from ./code/4ed_app_target.cpp:71:
./code/custom/4coder_string_match.cpp: In function ‘String_Match_List string_match_list_merge_front_to_back(String_Match_List*, String_Match_List*)’:
./code/custom/4coder_string_match.cpp:141:60: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  141 |     return(string_match_list_merge_nearest(a, b, Ii64((i64)0)));
      |                                                            ^
      |                                                       ------
      |                                                       static_cast<i64> (0)
In file included from ./code/4ed_app_target.cpp:72:
./code/custom/4coder_stringf.cpp: In function ‘String_Const_u8 push_stringfv(Arena*, char*, __va_list_tag*)’:
./code/custom/4coder_stringf.cpp:17:25: warning: function ‘String_Const_u8 push_stringfv(Arena*, char*, __va_list_tag*)’ might be a candidate for ‘gnu_printf’ format attribute [-Wsuggest-attribute=format]
   17 |     i32 size = vsnprintf(0, 0, format, args);
      |                ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp:18:63: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   18 |     String_Const_u8 result = string_const_u8_push(arena, size + 1);
      |                                                          ~~~~~^~~
./code/custom/4coder_stringf.cpp:19:29: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
   19 |     vsnprintf((char*)result.str, (size_t)result.size, format, args2);
      |                             ^~~
      |               -----------------
      |               reinterpret_cast<char*> (result.str)
./code/custom/4coder_stringf.cpp:19:49: warning: use of old-style cast to ‘size_t’ {aka ‘long unsigned int’} [-Wold-style-cast]
   19 |     vsnprintf((char*)result.str, (size_t)result.size, format, args2);
      |                                                 ^~~~
      |                                  -------------------
      |                                  static_cast<size_t> (result.size)
./code/custom/4coder_stringf.cpp:19:14: warning: function ‘String_Const_u8 push_stringfv(Arena*, char*, __va_list_tag*)’ might be a candidate for ‘gnu_printf’ format attribute [-Wsuggest-attribute=format]
   19 |     vsnprintf((char*)result.str, (size_t)result.size, format, args2);
      |     ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp: In function ‘void push_hour_am_pm(Arena*, List_String_Const_u8*, u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:150:39: note: in expansion of macro ‘string_u8_litexpr’
  150 |         string_list_push(arena, list, string_u8_litexpr("pm"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:150:39: note: in expansion of macro ‘string_u8_litexpr’
  150 |         string_list_push(arena, list, string_u8_litexpr("pm"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:150:39: note: in expansion of macro ‘string_u8_litexpr’
  150 |         string_list_push(arena, list, string_u8_litexpr("pm"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:153:39: note: in expansion of macro ‘string_u8_litexpr’
  153 |         string_list_push(arena, list, string_u8_litexpr("am"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:153:39: note: in expansion of macro ‘string_u8_litexpr’
  153 |         string_list_push(arena, list, string_u8_litexpr("am"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:153:39: note: in expansion of macro ‘string_u8_litexpr’
  153 |         string_list_push(arena, list, string_u8_litexpr("am"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp: In function ‘void date_time_format(Arena*, List_String_Const_u8*, String_Const_u8, Date_Time*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:200:59: note: in expansion of macro ‘string_u8_litexpr’
  200 |                 if (string_match(string_prefix(field, 5), string_u8_litexpr("month"))){
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:200:59: note: in expansion of macro ‘string_u8_litexpr’
  200 |                 if (string_match(string_prefix(field, 5), string_u8_litexpr("month"))){
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:200:59: note: in expansion of macro ‘string_u8_litexpr’
  200 |                 if (string_match(string_prefix(field, 5), string_u8_litexpr("month"))){
      |                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:205:64: note: in expansion of macro ‘string_u8_litexpr’
  205 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("yyyy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:205:64: note: in expansion of macro ‘string_u8_litexpr’
  205 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("yyyy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:205:64: note: in expansion of macro ‘string_u8_litexpr’
  205 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("yyyy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:209:64: note: in expansion of macro ‘string_u8_litexpr’
  209 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("hh24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:209:64: note: in expansion of macro ‘string_u8_litexpr’
  209 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("hh24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:209:64: note: in expansion of macro ‘string_u8_litexpr’
  209 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("hh24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:213:64: note: in expansion of macro ‘string_u8_litexpr’
  213 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("ampm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:213:64: note: in expansion of macro ‘string_u8_litexpr’
  213 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("ampm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:213:64: note: in expansion of macro ‘string_u8_litexpr’
  213 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("ampm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:217:64: note: in expansion of macro ‘string_u8_litexpr’
  217 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("mimi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:217:64: note: in expansion of macro ‘string_u8_litexpr’
  217 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("mimi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:217:64: note: in expansion of macro ‘string_u8_litexpr’
  217 |                 else if (string_match(string_prefix(field, 4), string_u8_litexpr("mimi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:222:64: note: in expansion of macro ‘string_u8_litexpr’
  222 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("mon"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:222:64: note: in expansion of macro ‘string_u8_litexpr’
  222 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("mon"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:222:64: note: in expansion of macro ‘string_u8_litexpr’
  222 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("mon"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:226:64: note: in expansion of macro ‘string_u8_litexpr’
  226 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("day"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:226:64: note: in expansion of macro ‘string_u8_litexpr’
  226 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("day"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:226:64: note: in expansion of macro ‘string_u8_litexpr’
  226 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("day"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:230:64: note: in expansion of macro ‘string_u8_litexpr’
  230 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("h24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:230:64: note: in expansion of macro ‘string_u8_litexpr’
  230 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("h24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:230:64: note: in expansion of macro ‘string_u8_litexpr’
  230 |                 else if (string_match(string_prefix(field, 3), string_u8_litexpr("h24"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:235:64: note: in expansion of macro ‘string_u8_litexpr’
  235 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("yy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:235:64: note: in expansion of macro ‘string_u8_litexpr’
  235 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("yy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:235:64: note: in expansion of macro ‘string_u8_litexpr’
  235 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("yy"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:239:64: note: in expansion of macro ‘string_u8_litexpr’
  239 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:239:64: note: in expansion of macro ‘string_u8_litexpr’
  239 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:239:64: note: in expansion of macro ‘string_u8_litexpr’
  239 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mm"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:243:64: note: in expansion of macro ‘string_u8_litexpr’
  243 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("dd"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:243:64: note: in expansion of macro ‘string_u8_litexpr’
  243 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("dd"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:243:64: note: in expansion of macro ‘string_u8_litexpr’
  243 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("dd"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:247:64: note: in expansion of macro ‘string_u8_litexpr’
  247 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("hh"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:247:64: note: in expansion of macro ‘string_u8_litexpr’
  247 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("hh"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:247:64: note: in expansion of macro ‘string_u8_litexpr’
  247 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("hh"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:251:64: note: in expansion of macro ‘string_u8_litexpr’
  251 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:251:64: note: in expansion of macro ‘string_u8_litexpr’
  251 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:251:64: note: in expansion of macro ‘string_u8_litexpr’
  251 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("mi"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:255:64: note: in expansion of macro ‘string_u8_litexpr’
  255 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ss"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:255:64: note: in expansion of macro ‘string_u8_litexpr’
  255 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ss"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:255:64: note: in expansion of macro ‘string_u8_litexpr’
  255 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ss"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:259:64: note: in expansion of macro ‘string_u8_litexpr’
  259 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ms"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:259:64: note: in expansion of macro ‘string_u8_litexpr’
  259 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ms"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:259:64: note: in expansion of macro ‘string_u8_litexpr’
  259 |                 else if (string_match(string_prefix(field, 2), string_u8_litexpr("ms"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:264:64: note: in expansion of macro ‘string_u8_litexpr’
  264 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("m"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:264:64: note: in expansion of macro ‘string_u8_litexpr’
  264 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("m"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:264:64: note: in expansion of macro ‘string_u8_litexpr’
  264 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("m"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:268:64: note: in expansion of macro ‘string_u8_litexpr’
  268 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("d"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:268:64: note: in expansion of macro ‘string_u8_litexpr’
  268 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("d"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:268:64: note: in expansion of macro ‘string_u8_litexpr’
  268 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("d"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:272:64: note: in expansion of macro ‘string_u8_litexpr’
  272 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("h"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:272:64: note: in expansion of macro ‘string_u8_litexpr’
  272 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("h"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:272:64: note: in expansion of macro ‘string_u8_litexpr’
  272 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("h"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_stringf.cpp:276:64: note: in expansion of macro ‘string_u8_litexpr’
  276 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("s"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_stringf.cpp:276:64: note: in expansion of macro ‘string_u8_litexpr’
  276 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("s"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_stringf.cpp:276:64: note: in expansion of macro ‘string_u8_litexpr’
  276 |                 else if (string_match(string_prefix(field, 1), string_u8_litexpr("s"))){
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp: In function ‘Input_Modifier_Set copy_modifier_set(Arena*, Input_Modifier_Set_Fixed*)’:
./code/custom/4coder_events.cpp:34:64: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
./code/custom/4coder_base_types.cpp:3231:90: note: in definition of macro ‘push_array_write’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                          ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:34:23: note: in expansion of macro ‘push_array_write’
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:34:23: note: in expansion of macro ‘push_array_write’
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:34:23: note: in expansion of macro ‘push_array_write’
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:34:64: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
./code/custom/4coder_base_types.cpp:3231:136: note: in definition of macro ‘push_array_write’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                        ^
./code/custom/4coder_base_types.cpp:3231:143: warning: use of old-style cast to ‘Key_Code*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                               ^
./code/custom/4coder_events.cpp:34:23: note: in expansion of macro ‘push_array_write’
   34 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp: In function ‘void copy_modifier_set(Input_Modifier_Set_Fixed*, Input_Modifier_Set*)’:
./code/custom/4coder_base_types.h:326:23: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:327:24: note: in expansion of macro ‘Min’
  327 | #define clamp_top(a,b) Min(a,b)
      |                        ^~~
./code/custom/4coder_events.cpp:41:17: note: in expansion of macro ‘clamp_top’
   41 |     i32 count = clamp_top(set->count, ArrayCount(dst->mods));
      |                 ^~~~~~~~~
./code/custom/4coder_events.cpp:41:32: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   41 |     i32 count = clamp_top(set->count, ArrayCount(dst->mods));
./code/custom/4coder_base_types.h:326:30: note: in definition of macro ‘Min’
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                              ^
./code/custom/4coder_events.cpp:41:17: note: in expansion of macro ‘clamp_top’
   41 |     i32 count = clamp_top(set->count, ArrayCount(dst->mods));
      |                 ^~~~~~~~~
In file included from ./code/4ed_app_target.cpp:73:
./code/custom/4coder_events.cpp:43:38: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   43 |     block_copy(dst->mods, set->mods, count*sizeof(*set->mods));
      |                                      ^~~~~
./code/custom/4coder_events.cpp: In function ‘void add_modifier(Input_Modifier_Set_Fixed*, Key_Code)’:
./code/custom/4coder_events.cpp:49:24: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
   49 |         if (set->count < ArrayCount(set->mods)){
./code/custom/4coder_events.cpp: In function ‘Input_Modifier_Set copy_modifier_set(Arena*, Input_Modifier_Set*)’:
./code/custom/4coder_events.cpp:85:64: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
./code/custom/4coder_base_types.cpp:3231:90: note: in definition of macro ‘push_array_write’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                          ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:85:23: note: in expansion of macro ‘push_array_write’
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:85:23: note: in expansion of macro ‘push_array_write’
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:85:23: note: in expansion of macro ‘push_array_write’
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:85:64: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
./code/custom/4coder_base_types.cpp:3231:136: note: in definition of macro ‘push_array_write’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                        ^
./code/custom/4coder_base_types.cpp:3231:143: warning: use of old-style cast to ‘Key_Code*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                               ^
./code/custom/4coder_events.cpp:85:23: note: in expansion of macro ‘push_array_write’
   85 |         result.mods = push_array_write(arena, Key_Code, result.count, set->mods);
      |                       ^~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp: In function ‘Input_Modifier_Set* get_modifiers(Input_Event*)’:
./code/custom/4coder_events.cpp:93:12: warning: switch missing default case [-Wswitch-default]
   93 |     switch (event->kind){
      |            ^
./code/custom/4coder_events.cpp: In function ‘Event_Property get_event_properties(Input_Event*)’:
./code/custom/4coder_events.cpp:238:20: warning: switch missing default case [-Wswitch-default]
  238 |             switch (event->core.code){
      |                    ^
./code/custom/4coder_events.cpp:197:12: warning: switch missing default case [-Wswitch-default]
  197 |     switch (event->kind){
      |            ^
./code/custom/4coder_events.cpp: In function ‘Input_Event* push_input_event(Arena*, Input_List*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:283:30: note: in expansion of macro ‘push_array_zero’
  283 |     Input_Event_Node *node = push_array_zero(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:283:30: note: in expansion of macro ‘push_array_zero’
  283 |     Input_Event_Node *node = push_array_zero(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:283:30: note: in expansion of macro ‘push_array_zero’
  283 |     Input_Event_Node *node = push_array_zero(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Input_Event_Node*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_events.cpp:283:30: note: in expansion of macro ‘push_array_zero’
  283 |     Input_Event_Node *node = push_array_zero(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp: In function ‘Input_Event* push_input_event(Arena*, Input_List*, Input_Event*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:291:30: note: in expansion of macro ‘push_array’
  291 |     Input_Event_Node *node = push_array(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:291:30: note: in expansion of macro ‘push_array’
  291 |     Input_Event_Node *node = push_array(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:291:30: note: in expansion of macro ‘push_array’
  291 |     Input_Event_Node *node = push_array(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Input_Event_Node*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_events.cpp:291:30: note: in expansion of macro ‘push_array’
  291 |     Input_Event_Node *node = push_array(arena, Input_Event_Node, 1);
      |                              ^~~~~~~~~~
./code/custom/4coder_events.cpp: In function ‘Input_Event copy_input_event(Arena*, Input_Event*)’:
./code/custom/4coder_events.cpp:331:20: warning: switch missing default case [-Wswitch-default]
  331 |             switch (result.core.code){
      |                    ^
./code/custom/4coder_events.cpp:301:12: warning: switch missing default case [-Wswitch-default]
  301 |     switch (result.kind){
      |            ^
./code/custom/4coder_events.cpp: In function ‘String_Const_u8 stringize_keyboard_event(Arena*, Input_Event*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:358:44: note: in expansion of macro ‘string_u8_litexpr’
  358 |             string_list_push(arena, &list, string_u8_litexpr("t"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:358:44: note: in expansion of macro ‘string_u8_litexpr’
  358 |             string_list_push(arena, &list, string_u8_litexpr("t"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:358:44: note: in expansion of macro ‘string_u8_litexpr’
  358 |             string_list_push(arena, &list, string_u8_litexpr("t"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:362:67: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  362 |                 string_list_pushf(arena, &list, "%02X", (i32)(*ptr));
      |                                                                   ^
      |                                                         -----------
      |                                                         static_cast<i32> ((*ptr))
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:364:44: note: in expansion of macro ‘string_u8_litexpr’
  364 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:364:44: note: in expansion of macro ‘string_u8_litexpr’
  364 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:364:44: note: in expansion of macro ‘string_u8_litexpr’
  364 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:372:48: note: in expansion of macro ‘string_u8_litexpr’
  372 |                 string_list_push(arena, &list, string_u8_litexpr("^"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:372:48: note: in expansion of macro ‘string_u8_litexpr’
  372 |                 string_list_push(arena, &list, string_u8_litexpr("^"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:372:48: note: in expansion of macro ‘string_u8_litexpr’
  372 |                 string_list_push(arena, &list, string_u8_litexpr("^"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:377:48: note: in expansion of macro ‘string_u8_litexpr’
  377 |                 string_list_push(arena, &list, string_u8_litexpr("m{"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:377:48: note: in expansion of macro ‘string_u8_litexpr’
  377 |                 string_list_push(arena, &list, string_u8_litexpr("m{"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:377:48: note: in expansion of macro ‘string_u8_litexpr’
  377 |                 string_list_push(arena, &list, string_u8_litexpr("m{"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:381:48: note: in expansion of macro ‘string_u8_litexpr’
  381 |                 string_list_push(arena, &list, string_u8_litexpr("}"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:381:48: note: in expansion of macro ‘string_u8_litexpr’
  381 |                 string_list_push(arena, &list, string_u8_litexpr("}"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:381:48: note: in expansion of macro ‘string_u8_litexpr’
  381 |                 string_list_push(arena, &list, string_u8_litexpr("}"));
      |                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_events.cpp:383:44: note: in expansion of macro ‘string_u8_litexpr’
  383 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_events.cpp:383:44: note: in expansion of macro ‘string_u8_litexpr’
  383 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_events.cpp:383:44: note: in expansion of macro ‘string_u8_litexpr’
  383 |             string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:355:12: warning: switch missing default case [-Wswitch-default]
  355 |     switch (event->kind){
      |            ^
./code/custom/4coder_events.cpp: In function ‘Input_Event parse_keyboard_event(Arena*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:401:34: note: in expansion of macro ‘push_array’
  401 |         result.text.string.str = push_array(arena, u8, max_size);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:401:34: note: in expansion of macro ‘push_array’
  401 |         result.text.string.str = push_array(arena, u8, max_size);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:401:34: note: in expansion of macro ‘push_array’
  401 |         result.text.string.str = push_array(arena, u8, max_size);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_events.cpp:401:34: note: in expansion of macro ‘push_array’
  401 |         result.text.string.str = push_array(arena, u8, max_size);
      |                                  ^~~~~~~~~~
./code/custom/4coder_events.cpp:406:101: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
  406 |                 result.text.string.str[result.text.string.size] = (u8)string_to_integer(byte_str, 16);
      |                                                                                                     ^
      |                                                                   ----
      |                                                                   static_cast<u8> (                  )
./code/custom/4coder_events.cpp:415:23: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  415 |         range.first = pos;
      |                       ^~~
./code/custom/4coder_events.cpp:417:31: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  417 |         range.one_past_last = pos;
      |                               ^~~
./code/custom/4coder_events.cpp:424:66: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
  424 |             result.key.code = (u32)string_to_integer(code_str, 16);
      |                                                                  ^
      |                               -----
      |                               static_cast<u32> (                  )
./code/custom/4coder_events.cpp:440:38: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  440 |                     for (;mods.count < ArrayCount(mods.mods);){
./code/custom/4coder_events.cpp:442:39: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  442 |                         range.first = pos;
      |                                       ^~~
./code/custom/4coder_events.cpp:444:47: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  444 |                         range.one_past_last = pos;
      |                                               ^~~
./code/custom/4coder_events.cpp:451:84: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
  451 |                         mods.mods[mods.count] = (u32)string_to_integer(code_str, 16);
      |                                                                                    ^
      |                                                 -----
      |                                                 static_cast<u32> (                  )
In file included from ./code/4ed_app_target.cpp:74:
./code/custom/4coder_system_helpers.cpp: In constructor ‘Mutex_Lock::Mutex_Lock(System_Mutex)’:
./code/custom/4coder_system_helpers.cpp:7:1: warning: ‘Mutex_Lock::mutex’ should be initialized in the member initialization list [-Weffc++]
    7 | Mutex_Lock::Mutex_Lock(System_Mutex m){
      | ^~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:75:
./code/custom/4coder_app_links_allocator.cpp: In constructor ‘Scratch_Block::Scratch_Block(Application_Links*)’:
./code/custom/4coder_app_links_allocator.cpp:7:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
    7 | Scratch_Block::Scratch_Block(Application_Links *app){
      | ^~~~~~~~~~~~~
./code/custom/4coder_app_links_allocator.cpp:7:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp:7:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp: In constructor ‘Scratch_Block::Scratch_Block(Application_Links*, Arena*)’:
./code/custom/4coder_app_links_allocator.cpp:13:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
   13 | Scratch_Block::Scratch_Block(Application_Links *app, Arena *a1){
      | ^~~~~~~~~~~~~
./code/custom/4coder_app_links_allocator.cpp:13:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp:13:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp: In constructor ‘Scratch_Block::Scratch_Block(Application_Links*, Arena*, Arena*)’:
./code/custom/4coder_app_links_allocator.cpp:19:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
   19 | Scratch_Block::Scratch_Block(Application_Links *app, Arena *a1, Arena *a2){
      | ^~~~~~~~~~~~~
./code/custom/4coder_app_links_allocator.cpp:19:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp:19:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp: In constructor ‘Scratch_Block::Scratch_Block(Application_Links*, Arena*, Arena*, Arena*)’:
./code/custom/4coder_app_links_allocator.cpp:25:1: warning: ‘Scratch_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
   25 | Scratch_Block::Scratch_Block(Application_Links *app, Arena *a1, Arena *a2, Arena *a3){
      | ^~~~~~~~~~~~~
./code/custom/4coder_app_links_allocator.cpp:25:1: warning: ‘Scratch_Block::arena’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_app_links_allocator.cpp:25:1: warning: ‘Scratch_Block::temp’ should be initialized in the member initialization list [-Weffc++]
In file included from ./code/4ed_app_target.cpp:76:
./code/custom/4coder_system_allocator.cpp: In function ‘void* base_reserve__system(void*, u64, u64*, String_Const_u8)’:
./code/custom/4coder_system_allocator.cpp:14:12: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   14 |     *(u64*)ptr = size;
      |            ^~~
      |      ---------
      |      static_cast<u64*> (ptr)
./code/custom/4coder_system_allocator.cpp:15:16: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
   15 |     ptr = (u8*)ptr + extra_size;
      |                ^~~
      |           --------
      |           static_cast<u8*> (ptr)
./code/custom/4coder_system_allocator.cpp:8:28: warning: unused parameter ‘user_data’ [-Wunused-parameter]
    8 | base_reserve__system(void *user_data, u64 size, u64 *size_out, String_Const_u8 location){
      |                      ~~~~~~^~~~~~~~~
./code/custom/4coder_system_allocator.cpp: In function ‘void base_free__system(void*, void*)’:
./code/custom/4coder_system_allocator.cpp:22:16: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
   22 |     ptr = (u8*)ptr - extra_size;
      |                ^~~
      |           --------
      |           static_cast<u8*> (ptr)
./code/custom/4coder_system_allocator.cpp:23:23: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   23 |     u64 size = *(u64*)ptr;
      |                       ^~~
      |                 ---------
      |                 static_cast<u64*> (ptr)
./code/custom/4coder_system_allocator.cpp:20:25: warning: unused parameter ‘user_data’ [-Wunused-parameter]
   20 | base_free__system(void *user_data, void *ptr){
      |                   ~~~~~~^~~~~~~~~
./code/custom/4coder_profile.cpp: In function ‘Profile_Thread* prof__get_thread(Profile_Global_List*, i32)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:26:18: note: in expansion of macro ‘push_array_zero’
   26 |         result = push_array_zero(&list->node_arena, Profile_Thread, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:26:18: note: in expansion of macro ‘push_array_zero’
   26 |         result = push_array_zero(&list->node_arena, Profile_Thread, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:26:18: note: in expansion of macro ‘push_array_zero’
   26 |         result = push_array_zero(&list->node_arena, Profile_Thread, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Profile_Thread*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_profile.cpp:26:18: note: in expansion of macro ‘push_array_zero’
   26 |         result = push_array_zero(&list->node_arena, Profile_Thread, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp: In function ‘void profile_thread_flush(Thread_Context*, Profile_Global_List*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:58:32: note: in expansion of macro ‘push_array’
   58 |             Arena_Node* node = push_array(&list->node_arena, Arena_Node, 1);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:58:32: note: in expansion of macro ‘push_array’
   58 |             Arena_Node* node = push_array(&list->node_arena, Arena_Node, 1);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:58:32: note: in expansion of macro ‘push_array’
   58 |             Arena_Node* node = push_array(&list->node_arena, Arena_Node, 1);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Arena_Node*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_profile.cpp:58:32: note: in expansion of macro ‘push_array’
   58 |             Arena_Node* node = push_array(&list->node_arena, Arena_Node, 1);
      |                                ^~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:77:
./code/custom/4coder_profile.cpp: In function ‘void profile_thread_set_name(Thread_Context*, Profile_Global_List*, String_Const_u8)’:
./code/custom/4coder_profile.cpp:85:41: warning: unused parameter ‘tctx’ [-Wunused-parameter]
   85 | profile_thread_set_name(Thread_Context *tctx, Profile_Global_List *list, String_Const_u8 name){
      |                         ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.cpp: In function ‘void thread_profile_record__inner(Thread_Context*, Profile_ID, u64, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:107:30: note: in expansion of macro ‘push_array_zero’
  107 |     Profile_Record *record = push_array_zero(&tctx->prof_arena, Profile_Record, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:107:30: note: in expansion of macro ‘push_array_zero’
  107 |     Profile_Record *record = push_array_zero(&tctx->prof_arena, Profile_Record, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:107:30: note: in expansion of macro ‘push_array_zero’
  107 |     Profile_Record *record = push_array_zero(&tctx->prof_arena, Profile_Record, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Profile_Record*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_profile.cpp:107:30: note: in expansion of macro ‘push_array_zero’
  107 |     Profile_Record *record = push_array_zero(&tctx->prof_arena, Profile_Record, 1);
      |                              ^~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp: In function ‘void thread_profile_record_pop(Thread_Context*, u64, Profile_ID)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_profile.cpp:126:5: note: in expansion of macro ‘Assert’
  126 |     Assert(tctx->prof_id_counter > 1);
      |     ^~~~~~
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Block::Profile_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:165:73: warning: declaration of ‘list’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                    ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:23:26: note: shadowed declaration is here
   23 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:165:46: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                              ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:22:21: note: shadowed declaration is here
   22 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp:165:1: warning: ‘Profile_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      | ^~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:165:1: warning: ‘Profile_Block::list’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:165:1: warning: ‘Profile_Block::is_closed’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:165:1: warning: ‘Profile_Block::id’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Block::Profile_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:165:73: warning: declaration of ‘list’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                    ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:23:26: note: shadowed declaration is here
   23 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:165:46: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                              ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:22:21: note: shadowed declaration is here
   22 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Block::Profile_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:165:73: warning: declaration of ‘list’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                    ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:23:26: note: shadowed declaration is here
   23 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:165:46: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Block’ [-Wshadow]
  165 | Profile_Block::Profile_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                              ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:22:21: note: shadowed declaration is here
   22 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Block::Profile_Block(Application_Links*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:169:1: warning: ‘Profile_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
  169 | Profile_Block::Profile_Block(Application_Links *app, String_Const_u8 name,
      | ^~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:169:1: warning: ‘Profile_Block::list’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:169:1: warning: ‘Profile_Block::is_closed’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:169:1: warning: ‘Profile_Block::id’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Scope_Block::Profile_Scope_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:188:85: warning: declaration of ‘list’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                                ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:36:26: note: shadowed declaration is here
   36 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:188:58: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                          ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:35:21: note: shadowed declaration is here
   35 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp:188:1: warning: ‘Profile_Scope_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:188:1: warning: ‘Profile_Scope_Block::list’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:188:1: warning: ‘Profile_Scope_Block::is_closed’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:188:1: warning: ‘Profile_Scope_Block::id’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Scope_Block::Profile_Scope_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:188:85: warning: declaration of ‘list’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                                ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:36:26: note: shadowed declaration is here
   36 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:188:58: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                          ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:35:21: note: shadowed declaration is here
   35 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Scope_Block::Profile_Scope_Block(Thread_Context*, Profile_Global_List*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:188:85: warning: declaration of ‘list’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                                                ~~~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:36:26: note: shadowed declaration is here
   36 |     Profile_Global_List *list;
      |                          ^~~~
./code/custom/4coder_profile.cpp:188:58: warning: declaration of ‘tctx’ shadows a member of ‘Profile_Scope_Block’ [-Wshadow]
  188 | Profile_Scope_Block::Profile_Scope_Block(Thread_Context *tctx, Profile_Global_List *list,
      |                                          ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_profile.h:35:21: note: shadowed declaration is here
   35 |     Thread_Context *tctx;
      |                     ^~~~
./code/custom/4coder_profile.cpp: In constructor ‘Profile_Scope_Block::Profile_Scope_Block(Application_Links*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_profile.cpp:192:1: warning: ‘Profile_Scope_Block::tctx’ should be initialized in the member initialization list [-Weffc++]
  192 | Profile_Scope_Block::Profile_Scope_Block(Application_Links *app, String_Const_u8 name,
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:192:1: warning: ‘Profile_Scope_Block::list’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:192:1: warning: ‘Profile_Scope_Block::is_closed’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp:192:1: warning: ‘Profile_Scope_Block::id’ should be initialized in the member initialization list [-Weffc++]
./code/custom/4coder_profile.cpp: At global scope:
./code/custom/4coder_profile.cpp:212:20: warning: no previous declaration for ‘void profile_enable(Application_Links*)’ [-Wmissing-declarations]
  212 | CUSTOM_COMMAND_SIG(profile_enable)
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_types.h:627:39: note: in definition of macro ‘CUSTOM_COMMAND_SIG’
  627 | #define CUSTOM_COMMAND_SIG(name) void name(struct Application_Links *app)
      |                                       ^~~~
./code/custom/4coder_profile.cpp:219:20: warning: no previous declaration for ‘void profile_disable(Application_Links*)’ [-Wmissing-declarations]
  219 | CUSTOM_COMMAND_SIG(profile_disable)
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:627:39: note: in definition of macro ‘CUSTOM_COMMAND_SIG’
  627 | #define CUSTOM_COMMAND_SIG(name) void name(struct Application_Links *app)
      |                                       ^~~~
./code/custom/4coder_profile.cpp:226:20: warning: no previous declaration for ‘void profile_clear(Application_Links*)’ [-Wmissing-declarations]
  226 | CUSTOM_COMMAND_SIG(profile_clear)
      |                    ^~~~~~~~~~~~~
./code/custom/4coder_types.h:627:39: note: in definition of macro ‘CUSTOM_COMMAND_SIG’
  627 | #define CUSTOM_COMMAND_SIG(name) void name(struct Application_Links *app)
      |                                       ^~~~
./code/custom/4coder_hash_functions.cpp: In function ‘u64 table_hash_u8(u8*, u64)’:
./code/custom/4coder_hash_functions.cpp:21:25: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
   21 |         k = ((u8)(k << 4)) | ((u8)(k >> 4));
      |                         ^
      |              ------------
      |              static_cast<u8> ((k << 4))
./code/custom/4coder_hash_functions.cpp:21:42: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
   21 |         k = ((u8)(k << 4)) | ((u8)(k >> 4));
      |                                          ^
      |                               ------------
      |                               static_cast<u8> ((k >> 4))
./code/custom/4coder_hash_functions.cpp: In function ‘u64 table_hash_u16(u16*, u64)’:
./code/custom/4coder_hash_functions.cpp:34:26: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
   34 |         k = ((u16)(k << 8)) | ((u16)(k >> 8));
      |                          ^
      |              -------------
      |              static_cast<u16> ((k << 8))
./code/custom/4coder_hash_functions.cpp:34:44: warning: use of old-style cast to ‘u16’ {aka ‘short unsigned int’} [-Wold-style-cast]
   34 |         k = ((u16)(k << 8)) | ((u16)(k >> 8));
      |                                            ^
      |                                -------------
      |                                static_cast<u16> ((k >> 8))
./code/custom/4coder_hash_functions.cpp: In function ‘u64 table_hash_u32(u32*, u64)’:
./code/custom/4coder_hash_functions.cpp:47:27: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
   47 |         k = ((u32)(k << 16)) | ((u32)(k >> 16));
      |                           ^
      |              --------------
      |              static_cast<u32> ((k << 16))
./code/custom/4coder_hash_functions.cpp:47:46: warning: use of old-style cast to ‘u32’ {aka ‘unsigned int’} [-Wold-style-cast]
   47 |         k = ((u32)(k << 16)) | ((u32)(k >> 16));
      |                                              ^
      |                                 --------------
      |                                 static_cast<u32> ((k >> 16))
./code/custom/4coder_hash_functions.cpp: In function ‘u64 table_hash_u64(u64*, u64)’:
./code/custom/4coder_hash_functions.cpp:60:27: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   60 |         k = ((u64)(k << 32)) | ((u64)(k >> 32));
      |                           ^
      |              --------------
      |              static_cast<u64> ((k << 32))
./code/custom/4coder_hash_functions.cpp:60:46: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   60 |         k = ((u64)(k << 32)) | ((u64)(k >> 32));
      |                                              ^
      |                                 --------------
      |                                 static_cast<u64> ((k >> 32))
./code/custom/4coder_hash_functions.cpp: In function ‘u64 table_hash(void*, i32, u64)’:
./code/custom/4coder_hash_functions.cpp:73:39: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
   73 |             hash = table_hash_u8((u8*)v, size);
      |                                       ^
      |                                  ------
      |                                  static_cast<u8*> (v)
./code/custom/4coder_hash_functions.cpp:77:41: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
   77 |             hash = table_hash_u16((u16*)v, size);
      |                                         ^
      |                                   -------
      |                                   static_cast<u16*> (v)
./code/custom/4coder_hash_functions.cpp:81:41: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
   81 |             hash = table_hash_u32((u32*)v, size);
      |                                         ^
      |                                   -------
      |                                   static_cast<u32*> (v)
./code/custom/4coder_hash_functions.cpp:85:41: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   85 |             hash = table_hash_u64((u64*)v, size);
      |                                         ^
      |                                   -------
      |                                   static_cast<u64*> (v)
./code/custom/4coder_hash_functions.cpp:89:39: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
   89 |             hash = table_hash_u8((u8*)v, it_size*size);
      |                                       ^
      |                                  ------
      |                                  static_cast<u8*> (v)
./code/custom/4coder_hash_functions.cpp:89:42: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   89 |             hash = table_hash_u8((u8*)v, it_size*size);
      |                                          ^~~~~~~
In file included from ./code/4ed_app_target.cpp:80:
./code/custom/4coder_table.cpp: In function ‘u64 table_hash(String_Const_u8)’:
./code/custom/4coder_table.cpp:9:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
    9 |     return(table_hash_u8((u8*)key.str, key.size) | bit_64);
      |                                   ^~~
      |                          ------------
      |                          const_cast<u8*> (key.str)
./code/custom/4coder_table.cpp: In function ‘Table_u64_u64 make_table_u64_u64__inner(Base_Allocator*, u32, String_Const_u8)’:
./code/custom/4coder_table.cpp:31:30: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   31 |     table.keys = (u64*)table.memory;
      |                              ^~~~~~
      |                  ------------------
      |                  static_cast<u64*> (table.memory)
./code/custom/4coder_table.cpp:32:48: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   32 |     table.vals = (u64*)(table.keys + slot_count);
      |                                                ^
      |                  ------
      |                  const_cast<u64*> (             )
./code/custom/4coder_table.cpp: In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
./code/custom/4coder_table.cpp:56:31: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
   56 |         u32 first_index = key % slot_count;
      |                           ~~~~^~~~~~~~~~~~
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_u64_u64*, Table_Lookup, u64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:111:5: note: in expansion of macro ‘Assert’
  111 |     Assert(lookup.found_empty_slot || lookup.found_erased_slot);
      |     ^~~~~~
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_u64_u64*, u64, u64)’:
./code/custom/4coder_table.cpp:146:45: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  146 |                 i32 new_slot_count = table->slot_count;
      |                                      ~~~~~~~^~~~~~~~~~
./code/custom/4coder_table.cpp:148:55: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  148 |                     new_slot_count = table->slot_count*4;
      |                                      ~~~~~~~~~~~~~~~~~^~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:150:43: note: in expansion of macro ‘make_table_u64_u64’
  150 |                 Table_u64_u64 new_table = make_table_u64_u64(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:150:43: note: in expansion of macro ‘make_table_u64_u64’
  150 |                 Table_u64_u64 new_table = make_table_u64_u64(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:150:43: note: in expansion of macro ‘make_table_u64_u64’
  150 |                 Table_u64_u64 new_table = make_table_u64_u64(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:150:80: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  150 |                 Table_u64_u64 new_table = make_table_u64_u64(table->allocator, new_slot_count);
      |                                                                                ^
./code/custom/4coder_table.cpp:39:64: note: in definition of macro ‘make_table_u64_u64’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                ^
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:155:17: note: in expansion of macro ‘Assert’
  155 |                 Assert(lookup.found_empty_slot);
      |                 ^~~~~~
./code/custom/4coder_table.cpp: In function ‘Table_u32_u16 make_table_u32_u16__inner(Base_Allocator*, u32, String_Const_u8)’:
./code/custom/4coder_table.cpp:198:30: warning: use of old-style cast to ‘u32*’ {aka ‘unsigned int*’} [-Wold-style-cast]
  198 |     table.keys = (u32*)table.memory;
      |                              ^~~~~~
      |                  ------------------
      |                  static_cast<u32*> (table.memory)
./code/custom/4coder_table.cpp:199:48: warning: use of old-style cast to ‘u16*’ {aka ‘short unsigned int*’} [-Wold-style-cast]
  199 |     table.vals = (u16*)(table.keys + slot_count);
      |                                                ^
      |                  ------
      |                  reinterpret_cast<u16*> (       )
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_u32_u16*, Table_Lookup, u32, u16)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:273:5: note: in expansion of macro ‘Assert’
  273 |     Assert(lookup.found_empty_slot || lookup.found_erased_slot);
      |     ^~~~~~
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_u32_u16*, u32, u16)’:
./code/custom/4coder_table.cpp:307:45: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  307 |                 i32 new_slot_count = table->slot_count;
      |                                      ~~~~~~~^~~~~~~~~~
./code/custom/4coder_table.cpp:309:55: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  309 |                     new_slot_count = table->slot_count*4;
      |                                      ~~~~~~~~~~~~~~~~~^~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:206:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
  206 | #define make_table_u32_u16(a,s) make_table_u32_u16__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:311:43: note: in expansion of macro ‘make_table_u32_u16’
  311 |                 Table_u32_u16 new_table = make_table_u32_u16(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:206:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
  206 | #define make_table_u32_u16(a,s) make_table_u32_u16__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:311:43: note: in expansion of macro ‘make_table_u32_u16’
  311 |                 Table_u32_u16 new_table = make_table_u32_u16(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:206:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
  206 | #define make_table_u32_u16(a,s) make_table_u32_u16__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:311:43: note: in expansion of macro ‘make_table_u32_u16’
  311 |                 Table_u32_u16 new_table = make_table_u32_u16(table->allocator, new_slot_count);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:311:80: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  311 |                 Table_u32_u16 new_table = make_table_u32_u16(table->allocator, new_slot_count);
      |                                                                                ^
./code/custom/4coder_table.cpp:206:64: note: in definition of macro ‘make_table_u32_u16’
  206 | #define make_table_u32_u16(a,s) make_table_u32_u16__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                ^
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:316:17: note: in expansion of macro ‘Assert’
  316 |                 Assert(lookup.found_empty_slot);
      |                 ^~~~~~
./code/custom/4coder_table.cpp: In function ‘Table_Data_u64 make_table_Data_u64__inner(Base_Allocator*, u32, String_Const_u8)’:
./code/custom/4coder_table.cpp:361:32: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
  361 |     table.hashes = (u64*)table.memory;
      |                                ^~~~~~
      |                    ------------------
      |                    static_cast<u64*> (table.memory)
./code/custom/4coder_table.cpp:362:62: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
  362 |     table.keys = (String_Const_u8*)(table.hashes + slot_count);
      |                                                              ^
      |                  -
      |                  reinterpret_cast<-
      |                                   > (                         )
./code/custom/4coder_table.cpp:363:48: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
  363 |     table.vals = (u64*)(table.keys + slot_count);
      |                                                ^
      |                  ------
      |                  reinterpret_cast<u64*> (       )
./code/custom/4coder_table.cpp: In function ‘Table_Lookup table_lookup(Table_Data_u64*, String_Const_u8)’:
./code/custom/4coder_table.cpp:387:32: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
  387 |         u32 first_index = hash % slot_count;
      |                           ~~~~~^~~~~~~~~~~~
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_Data_u64*, Table_Lookup, String_Const_u8, u64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:454:5: note: in expansion of macro ‘Assert’
  454 |     Assert(lookup.found_empty_slot || lookup.found_erased_slot);
      |     ^~~~~~
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_Data_u64*, String_Const_u8, u64)’:
./code/custom/4coder_table.cpp:489:45: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  489 |                 i32 new_slot_count = table->slot_count;
      |                                      ~~~~~~~^~~~~~~~~~
./code/custom/4coder_table.cpp:491:55: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  491 |                     new_slot_count = table->slot_count*4;
      |                                      ~~~~~~~~~~~~~~~~~^~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:493:44: note: in expansion of macro ‘make_table_Data_u64’
  493 |                 Table_Data_u64 new_table = make_table_Data_u64(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:493:44: note: in expansion of macro ‘make_table_Data_u64’
  493 |                 Table_Data_u64 new_table = make_table_Data_u64(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:493:44: note: in expansion of macro ‘make_table_Data_u64’
  493 |                 Table_Data_u64 new_table = make_table_Data_u64(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:493:82: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  493 |                 Table_Data_u64 new_table = make_table_Data_u64(table->allocator, new_slot_count);
      |                                                                                  ^
./code/custom/4coder_table.cpp:370:66: note: in definition of macro ‘make_table_Data_u64’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                  ^
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:498:17: note: in expansion of macro ‘Assert’
  498 |                 Assert(lookup.found_empty_slot);
      |                 ^~~~~~
./code/custom/4coder_table.cpp: In function ‘Table_u64_Data make_table_u64_Data__inner(Base_Allocator*, u32, String_Const_u8)’:
./code/custom/4coder_table.cpp:540:30: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
  540 |     table.keys = (u64*)table.memory;
      |                              ^~~~~~
      |                  ------------------
      |                  static_cast<u64*> (table.memory)
./code/custom/4coder_table.cpp:541:60: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
  541 |     table.vals = (String_Const_u8*)(table.keys + slot_count);
      |                                                            ^
      |                  -
      |                  reinterpret_cast<-
      |                                   > (                       )
./code/custom/4coder_table.cpp: In function ‘Table_Lookup table_lookup(Table_u64_Data*, u64)’:
./code/custom/4coder_table.cpp:565:31: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
  565 |         u32 first_index = key % slot_count;
      |                           ~~~~^~~~~~~~~~~~
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_u64_Data*, Table_Lookup, String_Const_u8)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:620:5: note: in expansion of macro ‘Assert’
  620 |     Assert(lookup.found_empty_slot || lookup.found_erased_slot);
      |     ^~~~~~
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_u64_Data*, u64, String_Const_u8)’:
./code/custom/4coder_table.cpp:655:45: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  655 |                 i32 new_slot_count = table->slot_count;
      |                                      ~~~~~~~^~~~~~~~~~
./code/custom/4coder_table.cpp:657:55: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  657 |                     new_slot_count = table->slot_count*4;
      |                                      ~~~~~~~~~~~~~~~~~^~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:659:44: note: in expansion of macro ‘make_table_u64_Data’
  659 |                 Table_u64_Data new_table = make_table_u64_Data(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:659:44: note: in expansion of macro ‘make_table_u64_Data’
  659 |                 Table_u64_Data new_table = make_table_u64_Data(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:659:44: note: in expansion of macro ‘make_table_u64_Data’
  659 |                 Table_u64_Data new_table = make_table_u64_Data(table->allocator, new_slot_count);
      |                                            ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:659:82: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  659 |                 Table_u64_Data new_table = make_table_u64_Data(table->allocator, new_slot_count);
      |                                                                                  ^
./code/custom/4coder_table.cpp:548:66: note: in definition of macro ‘make_table_u64_Data’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                  ^
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:664:17: note: in expansion of macro ‘Assert’
  664 |                 Assert(lookup.found_empty_slot);
      |                 ^~~~~~
./code/custom/4coder_table.cpp: In function ‘Table_Data_Data make_table_Data_Data__inner(Base_Allocator*, u32, String_Const_u8)’:
./code/custom/4coder_table.cpp:709:32: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
  709 |     table.hashes = (u64*)table.memory;
      |                                ^~~~~~
      |                    ------------------
      |                    static_cast<u64*> (table.memory)
./code/custom/4coder_table.cpp:710:62: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
  710 |     table.keys = (String_Const_u8*)(table.hashes + slot_count);
      |                                                              ^
      |                  -
      |                  reinterpret_cast<-
      |                                   > (                         )
./code/custom/4coder_table.cpp:711:60: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
  711 |     table.vals = (String_Const_u8*)(table.keys + slot_count);
      |                                                            ^
      |                  -
      |                  const_cast<      -
      |                                   > (                       )
./code/custom/4coder_table.cpp: In function ‘Table_Lookup table_lookup(Table_Data_Data*, String_Const_u8)’:
./code/custom/4coder_table.cpp:735:32: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
  735 |         u32 first_index = hash % slot_count;
      |                           ~~~~~^~~~~~~~~~~~
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_Data_Data*, Table_Lookup, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:800:5: note: in expansion of macro ‘Assert’
  800 |     Assert(lookup.found_empty_slot || lookup.found_erased_slot);
      |     ^~~~~~
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_Data_Data*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_table.cpp:835:45: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  835 |                 i32 new_slot_count = table->slot_count;
      |                                      ~~~~~~~^~~~~~~~~~
./code/custom/4coder_table.cpp:837:55: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  837 |                     new_slot_count = table->slot_count*4;
      |                                      ~~~~~~~~~~~~~~~~~^~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:718:71: note: in expansion of macro ‘file_name_line_number_lit_u8’
  718 | #define make_table_Data_Data(a,s) make_table_Data_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:839:45: note: in expansion of macro ‘make_table_Data_Data’
  839 |                 Table_Data_Data new_table = make_table_Data_Data(table->allocator, new_slot_count);
      |                                             ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:718:71: note: in expansion of macro ‘file_name_line_number_lit_u8’
  718 | #define make_table_Data_Data(a,s) make_table_Data_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:839:45: note: in expansion of macro ‘make_table_Data_Data’
  839 |                 Table_Data_Data new_table = make_table_Data_Data(table->allocator, new_slot_count);
      |                                             ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:718:71: note: in expansion of macro ‘file_name_line_number_lit_u8’
  718 | #define make_table_Data_Data(a,s) make_table_Data_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:839:45: note: in expansion of macro ‘make_table_Data_Data’
  839 |                 Table_Data_Data new_table = make_table_Data_Data(table->allocator, new_slot_count);
      |                                             ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:839:84: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  839 |                 Table_Data_Data new_table = make_table_Data_Data(table->allocator, new_slot_count);
      |                                                                                    ^
./code/custom/4coder_table.cpp:718:68: note: in definition of macro ‘make_table_Data_Data’
  718 | #define make_table_Data_Data(a,s) make_table_Data_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                    ^
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:844:17: note: in expansion of macro ‘Assert’
  844 |                 Assert(lookup.found_empty_slot);
      |                 ^~~~~~
./code/custom/4coder_log.cpp: In function ‘String_Const_u8 log_event(Arena*, String_Const_u8, String_Const_u8, i32, i32, i32, i32)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_log.cpp:19:23: note: in expansion of macro ‘string_expand’
   19 |                       string_expand(src_name), line_number, string_expand(event_name));
      |                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_log.cpp:19:23: note: in expansion of macro ‘string_expand’
   19 |                       string_expand(src_name), line_number, string_expand(event_name));
      |                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_log.cpp:19:61: note: in expansion of macro ‘string_expand’
   19 |                       string_expand(src_name), line_number, string_expand(event_name));
      |                                                             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_log.cpp:19:61: note: in expansion of macro ‘string_expand’
   19 |                       string_expand(src_name), line_number, string_expand(event_name));
      |                                                             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_log.cpp:29:36: note: in expansion of macro ‘string_u8_litexpr’
   29 |     string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_log.cpp:29:36: note: in expansion of macro ‘string_u8_litexpr’
   29 |     string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_log.cpp:29:36: note: in expansion of macro ‘string_u8_litexpr’
   29 |     string_list_push(arena, &list, string_u8_litexpr("\n"));
      |                                    ^~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:83:
./code/custom/4coder_command_map.cpp: In function ‘u64 mapping__key(Input_Event_Kind, u32)’:
./code/custom/4coder_command_map.cpp:35:19: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   35 |     return((((u64)kind) << 32) | sub_code);
      |                   ^~~~
      |              ---------
      |              static_cast<u64> (kind)
./code/custom/4coder_command_map.cpp: In function ‘Command_Map* mapping__alloc_map(Mapping*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘mapping->Mapping::free_maps’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:42:9: note: in expansion of macro ‘sll_stack_pop’
   42 |         sll_stack_pop(mapping->free_maps);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:45:18: note: in expansion of macro ‘push_array’
   45 |         result = push_array(&mapping->node_arena, Command_Map, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:45:18: note: in expansion of macro ‘push_array’
   45 |         result = push_array(&mapping->node_arena, Command_Map, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:45:18: note: in expansion of macro ‘push_array’
   45 |         result = push_array(&mapping->node_arena, Command_Map, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Command_Map*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_command_map.cpp:45:18: note: in expansion of macro ‘push_array’
   45 |         result = push_array(&mapping->node_arena, Command_Map, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Modified_Binding* mapping__alloc_modified_binding(Mapping*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘mapping->Mapping::free_bindings’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:61:9: note: in expansion of macro ‘sll_stack_pop’
   61 |         sll_stack_pop(mapping->free_bindings);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:64:18: note: in expansion of macro ‘push_array’
   64 |         result = push_array(&mapping->node_arena, Command_Modified_Binding, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:64:18: note: in expansion of macro ‘push_array’
   64 |         result = push_array(&mapping->node_arena, Command_Modified_Binding, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:64:18: note: in expansion of macro ‘push_array’
   64 |         result = push_array(&mapping->node_arena, Command_Modified_Binding, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_command_map.cpp:64:18: note: in expansion of macro ‘push_array’
   64 |         result = push_array(&mapping->node_arena, Command_Modified_Binding, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Binding_List* mapping__alloc_binding_list(Mapping*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘mapping->Mapping::free_lists’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:78:9: note: in expansion of macro ‘sll_stack_pop’
   78 |         sll_stack_pop(mapping->free_lists);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:81:18: note: in expansion of macro ‘push_array’
   81 |         result = push_array(&mapping->node_arena, Command_Binding_List, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:81:18: note: in expansion of macro ‘push_array’
   81 |         result = push_array(&mapping->node_arena, Command_Binding_List, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:81:18: note: in expansion of macro ‘push_array’
   81 |         result = push_array(&mapping->node_arena, Command_Binding_List, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Command_Binding_List*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_command_map.cpp:81:18: note: in expansion of macro ‘push_array’
   81 |         result = push_array(&mapping->node_arena, Command_Binding_List, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Binding_List* map__get_list(Command_Map*, u64)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/custom/4coder_command_map.cpp:98:41: note: in expansion of macro ‘IntAsPtr’
   98 |         result = (Command_Binding_List*)IntAsPtr(val);
      |                                         ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:98:41: note: in expansion of macro ‘IntAsPtr’
   98 |         result = (Command_Binding_List*)IntAsPtr(val);
      |                                         ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Command_Binding_List*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:98:41: note: in expansion of macro ‘IntAsPtr’
   98 |         result = (Command_Binding_List*)IntAsPtr(val);
      |                                         ^~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Binding_List* map__get_or_make_list(Mapping*, Command_Map*, u64)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:110:66: note: in expansion of macro ‘PtrAsInt’
  110 |         table_insert(&map->event_code_to_binding_list, key, (u64)PtrAsInt(result));
      |                                                                  ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:110:66: note: in expansion of macro ‘PtrAsInt’
  110 |         table_insert(&map->event_code_to_binding_list, key, (u64)PtrAsInt(result));
      |                                                                  ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:110:66: note: in expansion of macro ‘PtrAsInt’
  110 |         table_insert(&map->event_code_to_binding_list, key, (u64)PtrAsInt(result));
      |                                                                  ^~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void mapping_init(Thread_Context*, Mapping*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:123:26: note: in expansion of macro ‘make_table_u64_u64’
  123 |     mapping->id_to_map = make_table_u64_u64(tctx->allocator, 10);
      |                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:123:26: note: in expansion of macro ‘make_table_u64_u64’
  123 |     mapping->id_to_map = make_table_u64_u64(tctx->allocator, 10);
      |                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:123:26: note: in expansion of macro ‘make_table_u64_u64’
  123 |     mapping->id_to_map = make_table_u64_u64(tctx->allocator, 10);
      |                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void mapping_release(Thread_Context*, Mapping*)’:
./code/custom/4coder_command_map.cpp:128:33: warning: unused parameter ‘tctx’ [-Wunused-parameter]
  128 | mapping_release(Thread_Context *tctx, Mapping *mapping){
      |                 ~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_command_map.cpp: In function ‘void map__init(Mapping*, Command_Map*, Command_Map_ID)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:138:39: note: in expansion of macro ‘make_table_u64_u64’
  138 |     map->event_code_to_binding_list = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                       ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:138:39: note: in expansion of macro ‘make_table_u64_u64’
  138 |     map->event_code_to_binding_list = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                       ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:138:39: note: in expansion of macro ‘make_table_u64_u64’
  138 |     map->event_code_to_binding_list = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                       ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:139:35: note: in expansion of macro ‘make_table_u64_u64’
  139 |     map->cmd_to_binding_trigger = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:139:35: note: in expansion of macro ‘make_table_u64_u64’
  139 |     map->cmd_to_binding_trigger = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:139:35: note: in expansion of macro ‘make_table_u64_u64’
  139 |     map->cmd_to_binding_trigger = make_table_u64_u64(&mapping->heap_wrapper, 100);
      |                                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Map* mapping_get_map(Mapping*, Command_Map_ID)’:
./code/custom/4coder_command_map.cpp:145:61: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Command_Map_ID’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  145 |     Table_Lookup lookup = table_lookup(&mapping->id_to_map, id);
      |                                                             ^~
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/custom/4coder_command_map.cpp:149:32: note: in expansion of macro ‘IntAsPtr’
  149 |         result = (Command_Map*)IntAsPtr(val);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:149:32: note: in expansion of macro ‘IntAsPtr’
  149 |         result = (Command_Map*)IntAsPtr(val);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Command_Map*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:149:32: note: in expansion of macro ‘IntAsPtr’
  149 |         result = (Command_Map*)IntAsPtr(val);
      |                                ^~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Map_ID mapping_validate_id(Mapping*, Command_Map_ID)’:
./code/custom/4coder_command_map.cpp:156:61: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Command_Map_ID’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  156 |     Table_Lookup lookup = table_lookup(&mapping->id_to_map, id);
      |                                                             ^~
./code/custom/4coder_command_map.cpp: In function ‘Command_Map* mapping_get_or_make_map(Mapping*, Command_Map_ID)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:169:52: note: in expansion of macro ‘PtrAsInt’
  169 |         table_insert(&mapping->id_to_map, id, (u64)PtrAsInt(result));
      |                                                    ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:169:52: note: in expansion of macro ‘PtrAsInt’
  169 |         table_insert(&mapping->id_to_map, id, (u64)PtrAsInt(result));
      |                                                    ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:169:52: note: in expansion of macro ‘PtrAsInt’
  169 |         table_insert(&mapping->id_to_map, id, (u64)PtrAsInt(result));
      |                                                    ^~~~~~~~
./code/custom/4coder_command_map.cpp:169:43: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Command_Map_ID’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  169 |         table_insert(&mapping->id_to_map, id, (u64)PtrAsInt(result));
      |                                           ^~
./code/custom/4coder_command_map.cpp: In function ‘void mapping_release_map(Mapping*, Command_Map*)’:
./code/custom/4coder_command_map.cpp:176:43: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Command_Map_ID’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  176 |     table_erase(&mapping->id_to_map, map->id);
      |                                      ~~~~~^~
./code/custom/4coder_command_map.cpp: In function ‘Map_Event_Breakdown map_get_event_breakdown(Input_Event*)’:
./code/custom/4coder_command_map.cpp:231:12: warning: switch missing default case [-Wswitch-default]
  231 |     switch (event->kind){
      |            ^
./code/custom/4coder_command_map.cpp: In function ‘Command_Binding map_get_binding_non_recursive(Command_Map*, Input_Event*, Binding_Match_Rule)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/custom/4coder_command_map.cpp:283:69: note: in expansion of macro ‘IntAsPtr’
  283 |                 Command_Binding_List *list = (Command_Binding_List*)IntAsPtr(val);
      |                                                                     ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:283:69: note: in expansion of macro ‘IntAsPtr’
  283 |                 Command_Binding_List *list = (Command_Binding_List*)IntAsPtr(val);
      |                                                                     ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Command_Binding_List*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:283:69: note: in expansion of macro ‘IntAsPtr’
  283 |                 Command_Binding_List *list = (Command_Binding_List*)IntAsPtr(val);
      |                                                                     ^~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_command_map.cpp:291:73: note: in expansion of macro ‘CastFromMember’
  291 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:291:73: note: in expansion of macro ‘CastFromMember’
  291 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:291:73: note: in expansion of macro ‘CastFromMember’
  291 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:291:73: note: in expansion of macro ‘CastFromMember’
  291 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_command_map.cpp:291:73: note: in expansion of macro ‘CastFromMember’
  291 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_command_map.cpp:305:73: note: in expansion of macro ‘CastFromMember’
  305 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:305:73: note: in expansion of macro ‘CastFromMember’
  305 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:305:73: note: in expansion of macro ‘CastFromMember’
  305 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:305:73: note: in expansion of macro ‘CastFromMember’
  305 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_command_map.cpp:305:73: note: in expansion of macro ‘CastFromMember’
  305 |                                 Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, node);
      |                                                                         ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:285:28: warning: switch missing default case [-Wswitch-default]
  285 |                     switch (rule){
      |                            ^
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/custom/4coder_command_map.cpp:317:61: note: in expansion of macro ‘CastFromMember’
  317 |                     Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, list->first);
      |                                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:317:61: note: in expansion of macro ‘CastFromMember’
  317 |                     Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, list->first);
      |                                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:317:61: note: in expansion of macro ‘CastFromMember’
  317 |                     Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, list->first);
      |                                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:317:61: note: in expansion of macro ‘CastFromMember’
  317 |                     Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, list->first);
      |                                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Command_Modified_Binding*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/custom/4coder_command_map.cpp:317:61: note: in expansion of macro ‘CastFromMember’
  317 |                     Command_Modified_Binding *mod_binding = CastFromMember(Command_Modified_Binding, order_node, list->first);
      |                                                             ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void map__command_add_trigger(Command_Map*, Command_Binding, Command_Trigger*)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:375:25: note: in expansion of macro ‘PtrAsInt’
  375 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                         ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:375:25: note: in expansion of macro ‘PtrAsInt’
  375 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                         ^~~~~~~~
./code/custom/4coder_command_map.cpp:375:57: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  375 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                                                         ^
      |                   -----
      |                   static_cast<u64> (                     )
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:379:20: note: in expansion of macro ‘push_array_zero’
  379 |             list = push_array_zero(&map->node_arena, Command_Trigger_List, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:379:20: note: in expansion of macro ‘push_array_zero’
  379 |             list = push_array_zero(&map->node_arena, Command_Trigger_List, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:379:20: note: in expansion of macro ‘push_array_zero’
  379 |             list = push_array_zero(&map->node_arena, Command_Trigger_List, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Command_Trigger_List*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_command_map.cpp:379:20: note: in expansion of macro ‘push_array_zero’
  379 |             list = push_array_zero(&map->node_arena, Command_Trigger_List, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:380:67: note: in expansion of macro ‘PtrAsInt’
  380 |             table_insert(&map->cmd_to_binding_trigger, key, (u64)(PtrAsInt(list)));
      |                                                                   ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:380:67: note: in expansion of macro ‘PtrAsInt’
  380 |             table_insert(&map->cmd_to_binding_trigger, key, (u64)(PtrAsInt(list)));
      |                                                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:380:81: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  380 |             table_insert(&map->cmd_to_binding_trigger, key, (u64)(PtrAsInt(list)));
      |                                                                                 ^
      |                                                             -----
      |                                                             static_cast<u64> (   )
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/custom/4coder_command_map.cpp:385:43: note: in expansion of macro ‘IntAsPtr’
  385 |             list = (Command_Trigger_List*)IntAsPtr(val);
      |                                           ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:385:43: note: in expansion of macro ‘IntAsPtr’
  385 |             list = (Command_Trigger_List*)IntAsPtr(val);
      |                                           ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Command_Trigger_List*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:385:43: note: in expansion of macro ‘IntAsPtr’
  385 |             list = (Command_Trigger_List*)IntAsPtr(val);
      |                                           ^~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:387:40: note: in expansion of macro ‘push_array’
  387 |         Command_Trigger *trigger_ptr = push_array(&map->node_arena, Command_Trigger, 1);
      |                                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:387:40: note: in expansion of macro ‘push_array’
  387 |         Command_Trigger *trigger_ptr = push_array(&map->node_arena, Command_Trigger, 1);
      |                                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:387:40: note: in expansion of macro ‘push_array’
  387 |         Command_Trigger *trigger_ptr = push_array(&map->node_arena, Command_Trigger, 1);
      |                                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Command_Trigger*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_command_map.cpp:387:40: note: in expansion of macro ‘push_array’
  387 |         Command_Trigger *trigger_ptr = push_array(&map->node_arena, Command_Trigger, 1);
      |                                        ^~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Input_Event map_trigger_as_event(Command_Trigger*)’:
./code/custom/4coder_command_map.cpp:397:12: warning: switch missing default case [-Wswitch-default]
  397 |     switch (result.kind){
      |            ^
./code/custom/4coder_command_map.cpp: In function ‘Command_Trigger_List map_get_triggers_non_recursive(Mapping*, Command_Map*, Command_Binding)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:437:25: note: in expansion of macro ‘PtrAsInt’
  437 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                         ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_command_map.cpp:437:25: note: in expansion of macro ‘PtrAsInt’
  437 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                         ^~~~~~~~
./code/custom/4coder_command_map.cpp:437:57: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  437 |         u64 key = (u64)(PtrAsInt(BindingGetPtr(binding)));
      |                                                         ^
      |                   -----
      |                   static_cast<u64> (                     )
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/custom/4coder_command_map.cpp:442:49: note: in expansion of macro ‘IntAsPtr’
  442 |             result_ptr = (Command_Trigger_List*)IntAsPtr(val);
      |                                                 ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:442:49: note: in expansion of macro ‘IntAsPtr’
  442 |             result_ptr = (Command_Trigger_List*)IntAsPtr(val);
      |                                                 ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Command_Trigger_List*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/custom/4coder_command_map.cpp:442:49: note: in expansion of macro ‘IntAsPtr’
  442 |             result_ptr = (Command_Trigger_List*)IntAsPtr(val);
      |                                                 ^~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘Command_Trigger_List map_get_triggers_recursive(Arena*, Mapping*, Command_Map*, Command_Binding)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:489:42: note: in expansion of macro ‘push_array_write’
  489 |                 Command_Trigger *nnode = push_array_write(arena, Command_Trigger, 1, node);
      |                                          ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:489:42: note: in expansion of macro ‘push_array_write’
  489 |                 Command_Trigger *nnode = push_array_write(arena, Command_Trigger, 1, node);
      |                                          ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:94: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                              ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:489:42: note: in expansion of macro ‘push_array_write’
  489 |                 Command_Trigger *nnode = push_array_write(arena, Command_Trigger, 1, node);
      |                                          ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3231:143: warning: use of old-style cast to ‘struct Command_Trigger*’ [-Wold-style-cast]
 3231 | #define push_array_write(a,T,c,s) ((T*)linalloc_wrap_write(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8), sizeof(T)*(c), (s)))
      |                                                                                                                                               ^
./code/custom/4coder_command_map.cpp:489:42: note: in expansion of macro ‘push_array_write’
  489 |                 Command_Trigger *nnode = push_array_write(arena, Command_Trigger, 1, node);
      |                                          ^~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void command_trigger_stringize_mods(Arena*, List_String_Const_u8*, Input_Modifier_Set*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:672:39: note: in expansion of macro ‘string_u8_litexpr’
  672 |         string_list_push(arena, list, string_u8_litexpr(" holding:"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:672:39: note: in expansion of macro ‘string_u8_litexpr’
  672 |         string_list_push(arena, list, string_u8_litexpr(" holding:"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:672:39: note: in expansion of macro ‘string_u8_litexpr’
  672 |         string_list_push(arena, list, string_u8_litexpr(" holding:"));
      |                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void command_trigger_stringize(Arena*, List_String_Const_u8*, Command_Trigger*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:683:35: note: in expansion of macro ‘string_u8_litexpr’
  683 |     string_list_push(arena, list, string_u8_litexpr("<"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:683:35: note: in expansion of macro ‘string_u8_litexpr’
  683 |     string_list_push(arena, list, string_u8_litexpr("<"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:683:35: note: in expansion of macro ‘string_u8_litexpr’
  683 |     string_list_push(arena, list, string_u8_litexpr("<"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:687:43: note: in expansion of macro ‘string_u8_litexpr’
  687 |             string_list_push(arena, list, string_u8_litexpr("TextInsert"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:687:43: note: in expansion of macro ‘string_u8_litexpr’
  687 |             string_list_push(arena, list, string_u8_litexpr("TextInsert"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:687:43: note: in expansion of macro ‘string_u8_litexpr’
  687 |             string_list_push(arena, list, string_u8_litexpr("TextInsert"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:717:43: note: in expansion of macro ‘string_u8_litexpr’
  717 |             string_list_push(arena, list, string_u8_litexpr("MouseWheel"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:717:43: note: in expansion of macro ‘string_u8_litexpr’
  717 |             string_list_push(arena, list, string_u8_litexpr("MouseWheel"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:717:43: note: in expansion of macro ‘string_u8_litexpr’
  717 |             string_list_push(arena, list, string_u8_litexpr("MouseWheel"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:723:43: note: in expansion of macro ‘string_u8_litexpr’
  723 |             string_list_push(arena, list, string_u8_litexpr("MouseMove"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:723:43: note: in expansion of macro ‘string_u8_litexpr’
  723 |             string_list_push(arena, list, string_u8_litexpr("MouseMove"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:723:43: note: in expansion of macro ‘string_u8_litexpr’
  723 |             string_list_push(arena, list, string_u8_litexpr("MouseMove"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:734:43: note: in expansion of macro ‘string_u8_litexpr’
  734 |             string_list_push(arena, list, string_u8_litexpr("ERROR unexpected trigger kind"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:734:43: note: in expansion of macro ‘string_u8_litexpr’
  734 |             string_list_push(arena, list, string_u8_litexpr("ERROR unexpected trigger kind"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:734:43: note: in expansion of macro ‘string_u8_litexpr’
  734 |             string_list_push(arena, list, string_u8_litexpr("ERROR unexpected trigger kind"));
      |                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_command_map.cpp:737:35: note: in expansion of macro ‘string_u8_litexpr’
  737 |     string_list_push(arena, list, string_u8_litexpr(">"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_command_map.cpp:737:35: note: in expansion of macro ‘string_u8_litexpr’
  737 |     string_list_push(arena, list, string_u8_litexpr(">"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_command_map.cpp:737:35: note: in expansion of macro ‘string_u8_litexpr’
  737 |     string_list_push(arena, list, string_u8_litexpr(">"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp: In function ‘void map_set_binding_lv(Mapping*, Command_Map*, Command_Binding, u32, u32, __va_list_tag*)’:
./code/custom/4coder_command_map.cpp:748:22: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  748 |     for (;mods.count < ArrayCount(mods_array);){
./code/custom/4coder_command_map.cpp:753:33: warning: conversion to ‘Key_Code’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  753 |         mods.mods[mods.count] = v;
      |                                 ^
In file included from ./code/4ed_app_target.cpp:84:
./code/custom/4coder_codepoint_map.cpp: In function ‘f32 font_get_average_glyph_advance_range(Face_Advance_Map*, Face_Metrics*, u32, u32, f32)’:
./code/custom/4coder_codepoint_map.cpp:67:57: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   67 |     result /= (f32)(codepoint_last - codepoint_first + 1);
      |                                                         ^
      |               -----
      |               static_cast<f32> (                         )
In file included from ./code/4ed_app_target.cpp:94:
./code/custom/4coder_token.cpp: In function ‘void token_list_push(Arena*, Token_List*, Token*)’:
./code/custom/4coder_token.cpp:15:49: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
   15 |     if (block == 0 || block->count + 1 > block->max){
      |                                                 ^~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:16:17: note: in expansion of macro ‘push_array’
   16 |         block = push_array(arena, Token_Block, 1);
      |                 ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:16:17: note: in expansion of macro ‘push_array’
   16 |         block = push_array(arena, Token_Block, 1);
      |                 ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:16:17: note: in expansion of macro ‘push_array’
   16 |         block = push_array(arena, Token_Block, 1);
      |                 ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Token_Block*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_token.cpp:16:17: note: in expansion of macro ‘push_array’
   16 |         block = push_array(arena, Token_Block, 1);
      |                 ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:20:25: note: in expansion of macro ‘push_array’
   20 |         block->tokens = push_array(arena, Token, new_max);
      |                         ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:20:25: note: in expansion of macro ‘push_array’
   20 |         block->tokens = push_array(arena, Token, new_max);
      |                         ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:20:25: note: in expansion of macro ‘push_array’
   20 |         block->tokens = push_array(arena, Token, new_max);
      |                         ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Token*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_token.cpp:20:25: note: in expansion of macro ‘push_array’
   20 |         block->tokens = push_array(arena, Token, new_max);
      |                         ^~~~~~~~~~
./code/custom/4coder_token.cpp: In function ‘void token_fill_memory_from_list(Token*, Token_List*, i64)’:
./code/custom/4coder_token.cpp:38:53: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
   38 |         block_copy_dynamic_array(ptr, node->tokens, write_count);
./code/custom/4coder_base_types.cpp:267:76: note: in definition of macro ‘block_copy_dynamic_array’
  267 | #define block_copy_dynamic_array(d,s,c) block_copy((d), (s), sizeof(*(d))*(c))
      |                                                                            ^
./code/custom/4coder_token.cpp: In function ‘Token_Array token_array_from_list_always_copy(Arena*, Token_List*)’:
./code/custom/4coder_token.cpp:53:55: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
   53 |         array.tokens = push_array(arena, Token, list->total_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:53:24: note: in expansion of macro ‘push_array’
   53 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:53:24: note: in expansion of macro ‘push_array’
   53 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:53:24: note: in expansion of macro ‘push_array’
   53 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Token*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_token.cpp:53:24: note: in expansion of macro ‘push_array’
   53 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_token.cpp: In function ‘Token_Array token_array_from_list(Arena*, Token_List*)’:
./code/custom/4coder_token.cpp:65:55: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
   65 |         array.tokens = push_array(arena, Token, list->total_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:65:24: note: in expansion of macro ‘push_array’
   65 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:65:24: note: in expansion of macro ‘push_array’
   65 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:65:24: note: in expansion of macro ‘push_array’
   65 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Token*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/custom/4coder_token.cpp:65:24: note: in expansion of macro ‘push_array’
   65 |         array.tokens = push_array(arena, Token, list->total_count);
      |                        ^~~~~~~~~~
./code/custom/4coder_token.cpp: In function ‘i64 token_index_from_pos(Token_Array*, u64)’:
./code/custom/4coder_token.cpp:112:64: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  112 |     return(token_index_from_pos(tokens->tokens, tokens->count, pos));
      |                                                                ^~~
./code/custom/4coder_token.cpp: In function ‘Token_Iterator_Array token_iterator(u64, Token*, i64, Token*)’:
./code/custom/4coder_token.cpp:148:77: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  148 |     return(token_iterator_index(user_id, tokens, count, (i64)(token - tokens)));
      |                                                                             ^
      |                                                         -----
      |                                                         static_cast<i64> (   )
./code/custom/4coder_token.cpp: In function ‘Token_Iterator_Array token_iterator(u64, Token_Array*, Token*)’:
./code/custom/4coder_token.cpp:153:101: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  153 |     return(token_iterator_index(user_id, tokens->tokens, tokens->count, (i64)(token - tokens->tokens)));
      |                                                                                                     ^
      |                                                                         -----
      |                                                                         static_cast<i64> (           )
./code/custom/4coder_token.cpp: In function ‘i64 token_it_index(Token_Iterator_Array*)’:
./code/custom/4coder_token.cpp:189:38: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  189 |     return((i64)(it->ptr - it->tokens));
      |                                      ^
      |            -----
      |            static_cast<i64> (         )
./code/custom/4coder_token.cpp: In function ‘Token_Iterator_List token_iterator_index(u64, Token_List*, i64)’:
./code/custom/4coder_base_types.h:329:37: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
  329 | #define clamp_(a,x,b) ((a>x)?a:((b<x)?b:x))
      |                                     ^
./code/custom/4coder_base_types.h:330:22: note: in expansion of macro ‘clamp_’
  330 | #define clamp(a,x,b) clamp_((a),(x),(b))
      |                      ^~~~~~
./code/custom/4coder_token.cpp:278:17: note: in expansion of macro ‘clamp’
  278 |         index = clamp(0, index, list->total_count - 1);
      |                 ^~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_token.cpp:290:9: note: in expansion of macro ‘Assert’
  290 |         Assert(block != 0);
      |         ^~~~~~
./code/custom/4coder_token.cpp:301:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
  301 | }
      | ^
./code/custom/4coder_token.cpp: In function ‘Token_Iterator_List token_iterator_pos(u64, Token_List*, i64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_token.cpp:330:9: note: in expansion of macro ‘Assert’
  330 |         Assert(block != 0);
      |         ^~~~~~
./code/custom/4coder_token.cpp: In function ‘b32 token_it_inc_all(Token_Iterator_List*)’:
./code/custom/4coder_token.cpp:362:58: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  362 |         i64 sub_index = (i64)(it->ptr - it->block->tokens);
      |                                                          ^
      |                         -----
      |                         static_cast<i64> (                )
./code/custom/4coder_token.cpp: In function ‘b32 token_it_dec_all(Token_Iterator_List*)’:
./code/custom/4coder_token.cpp:384:58: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  384 |         i64 sub_index = (i64)(it->ptr - it->block->tokens);
      |                                                          ^
      |                         -----
      |                         static_cast<i64> (                )
./code/custom/4coder_token.cpp: In function ‘Token* token_it_read(Token_Iterator*)’:
./code/custom/4coder_token.cpp:478:12: warning: switch missing default case [-Wswitch-default]
  478 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘i64 token_it_index(Token_Iterator*)’:
./code/custom/4coder_token.cpp:493:12: warning: switch missing default case [-Wswitch-default]
  493 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_inc_all(Token_Iterator*)’:
./code/custom/4coder_token.cpp:508:12: warning: switch missing default case [-Wswitch-default]
  508 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_dec_all(Token_Iterator*)’:
./code/custom/4coder_token.cpp:523:12: warning: switch missing default case [-Wswitch-default]
  523 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_inc_non_whitespace(Token_Iterator*)’:
./code/custom/4coder_token.cpp:538:12: warning: switch missing default case [-Wswitch-default]
  538 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_dec_non_whitespace(Token_Iterator*)’:
./code/custom/4coder_token.cpp:553:12: warning: switch missing default case [-Wswitch-default]
  553 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_inc(Token_Iterator*)’:
./code/custom/4coder_token.cpp:568:12: warning: switch missing default case [-Wswitch-default]
  568 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘b32 token_it_dec(Token_Iterator*)’:
./code/custom/4coder_token.cpp:583:12: warning: switch missing default case [-Wswitch-default]
  583 |     switch (it->kind){
      |            ^
./code/custom/4coder_token.cpp: In function ‘Token_Relex token_relex(Token_List, i64, Token*, i64, i64)’:
./code/custom/4coder_token.cpp:661:89: warning: missing initializer for member ‘Token_Array::max’ [-Wmissing-field-initializers]
  661 |         Token_Array relexed_tokens = {tokens + relex_first, relex_last - relex_first + 1};
      |                                                                                         ^
./code/custom/4coder_token.cpp:666:73: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  666 |             i64 old_token_index = token_index_from_pos(&relexed_tokens, new_pos_rebased);
      |                                                                         ^~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:95:
./code/custom/generated/lexer_cpp.cpp: In function ‘Lexeme_Table_Lookup lexeme_table_lookup(u64*, String_Const_u8*, Lexeme_Table_Value*, i32, u64, u8*, u64)’:
./code/custom/generated/lexer_cpp.cpp:20:31: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   20 |     i32 first_index = (hash % slot_count);
      |                               ^~~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:20:29: warning: conversion from ‘u64’ {aka ‘long unsigned int’} to ‘i32’ {aka ‘int’} may change value [-Wconversion]
   20 |     i32 first_index = (hash % slot_count);
      |                       ~~~~~~^~~~~~~~~~~~~
./code/custom/generated/lexer_cpp.cpp: At global scope:
./code/custom/generated/lexer_cpp.cpp:491:5: warning: padding struct to align ‘Lex_State_Cpp::base’ [-Wpadded]
  491 | u8 *base;
      |     ^~~~
./code/custom/generated/lexer_cpp.cpp: In function ‘b32 lex_full_input_cpp_breaks(Arena*, Token_List*, Lex_State_Cpp*, u64)’:
./code/custom/generated/lexer_cpp.cpp:522:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  522 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:523:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  523 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:548:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  548 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:549:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  549 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:577:17: warning: unsigned conversion from ‘int’ to ‘u16’ {aka ‘short unsigned int’} changes the value of ‘-2’ [-Wsign-conversion]
  577 | state.flags_KB0 &= ~(0x1);
      | ~~~~~~~~~~~~~~~~^~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:578:20: warning: unsigned conversion from ‘int’ to ‘u32’ {aka ‘unsigned int’} changes value from ‘-2’ to ‘4294967294’ [-Wsign-conversion]
  578 | state.flags_KF0 &= ~(0x1);
      |                    ^~~~~~
./code/custom/generated/lexer_cpp.cpp:579:20: warning: unsigned conversion from ‘int’ to ‘u32’ {aka ‘unsigned int’} changes value from ‘-3’ to ‘4294967293’ [-Wsign-conversion]
  579 | state.flags_KF0 &= ~(0x2);
      |                    ^~~~~~
./code/custom/generated/lexer_cpp.cpp:631:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  631 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:632:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  632 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:653:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  653 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:654:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  654 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:685:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  685 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:686:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  686 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:738:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  738 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:739:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  739 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:779:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  779 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:780:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  780 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:818:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  818 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:819:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  819 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:845:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  845 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:846:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  846 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:867:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  867 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:868:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  868 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:895:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  895 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:896:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  896 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:922:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  922 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:923:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  923 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:944:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  944 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:945:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  945 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:969:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  969 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:970:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  970 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:974:186: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  974 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_pp_keys_hash_array, cpp_pp_keys_key_array, cpp_pp_keys_value_array, cpp_pp_keys_slot_count, cpp_pp_keys_seed, state.emit_ptr, token.size);
      |                                                                                                                                                                                    ~~~~~~^~~~
./code/custom/generated/lexer_cpp.cpp:977:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
  977 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:981:196: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  981 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_main_keys_hash_array, cpp_main_keys_key_array, cpp_main_keys_value_array, cpp_main_keys_slot_count, cpp_main_keys_seed, state.emit_ptr, token.size);
      |                                                                                                                                                                                              ~~~~~~^~~~
./code/custom/generated/lexer_cpp.cpp:984:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
  984 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:1012:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1012 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1013:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1013 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1017:186: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 1017 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_pp_keys_hash_array, cpp_pp_keys_key_array, cpp_pp_keys_value_array, cpp_pp_keys_slot_count, cpp_pp_keys_seed, state.emit_ptr, token.size);
      |                                                                                                                                                                                    ~~~~~~^~~~
./code/custom/generated/lexer_cpp.cpp:1020:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
 1020 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:1024:196: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 1024 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_main_keys_hash_array, cpp_main_keys_key_array, cpp_main_keys_value_array, cpp_main_keys_slot_count, cpp_main_keys_seed, state.emit_ptr, token.size);
      |                                                                                                                                                                                              ~~~~~~^~~~
./code/custom/generated/lexer_cpp.cpp:1027:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
 1027 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:1056:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1056 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1057:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1057 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1076:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1076 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1077:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1077 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1101:17: warning: unsigned conversion from ‘int’ to ‘u16’ {aka ‘short unsigned int’} changes the value of ‘-2’ [-Wsign-conversion]
 1101 | state.flags_KB0 &= ~(0x1);
      | ~~~~~~~~~~~~~~~~^~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:1102:20: warning: unsigned conversion from ‘int’ to ‘u32’ {aka ‘unsigned int’} changes value from ‘-2’ to ‘4294967294’ [-Wsign-conversion]
 1102 | state.flags_KF0 &= ~(0x1);
      |                    ^~~~~~
./code/custom/generated/lexer_cpp.cpp:1103:20: warning: unsigned conversion from ‘int’ to ‘u32’ {aka ‘unsigned int’} changes value from ‘-3’ to ‘4294967293’ [-Wsign-conversion]
 1103 | state.flags_KF0 &= ~(0x2);
      |                    ^~~~~~
./code/custom/generated/lexer_cpp.cpp:1114:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1114 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1115:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1115 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1139:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1139 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1140:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1140 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1164:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1164 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1165:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1165 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1184:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1184 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1185:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1185 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1206:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1206 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1207:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1207 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1236:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1236 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1237:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1237 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1256:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1256 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1257:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1257 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1278:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1278 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1279:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1279 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1314:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1314 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1315:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1315 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1334:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1334 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1335:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1335 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1366:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1366 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1367:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1367 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1391:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1391 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1392:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1392 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1411:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1411 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1412:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1412 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1467:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1467 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1468:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1468 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1487:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1487 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1488:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1488 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1550:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1550 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1551:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1551 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1570:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1570 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1571:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1571 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1603:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1603 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1604:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1604 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1625:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1625 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1626:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1626 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1650:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1650 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1651:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1651 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1670:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1670 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1671:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1671 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1703:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1703 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1704:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1704 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1725:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1725 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1726:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1726 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1750:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1750 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1751:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1751 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1770:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1770 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1771:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1771 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1798:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1798 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1799:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1799 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1820:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1820 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1821:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1821 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1845:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1845 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1846:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1846 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1865:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1865 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1866:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1866 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1893:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1893 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1894:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1894 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1915:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1915 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1916:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1916 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1940:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1940 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1941:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1941 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1960:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1960 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1961:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1961 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:1993:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1993 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:1994:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 1994 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2013:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2013 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2014:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2014 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2061:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2061 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2062:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2062 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2081:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2081 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2082:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2082 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2128:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2128 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2129:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2129 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2158:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2158 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2159:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2159 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2203:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2203 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2204:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2204 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2233:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2233 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2234:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2234 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2270:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2270 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2271:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2271 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2305:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2305 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2306:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2306 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2335:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2335 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2336:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2336 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2367:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2367 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2368:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2368 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2402:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2402 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2403:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2403 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2432:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2432 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2433:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2433 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2464:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2464 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2465:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2465 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2504:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2504 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2505:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2505 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2534:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2534 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2535:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2535 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2566:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2566 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2567:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2567 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2601:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2601 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2602:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2602 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2631:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2631 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2632:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2632 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2663:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2663 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2664:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2664 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2698:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2698 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2699:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2699 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2718:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2718 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2719:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2719 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2764:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2764 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2765:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2765 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2768:240: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘long int’ may change the sign of the result [-Wsign-conversion]
 2768 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_pp_directives_hash_array, cpp_pp_directives_key_array, cpp_pp_directives_value_array, cpp_pp_directives_slot_count, cpp_pp_directives_seed, state.delim_first, (state.delim_one_past_last - state.delim_first));
      |                                                                                                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:2771:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
 2771 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:2777:8: warning: switch missing default case [-Wswitch-default]
 2777 | switch (token.sub_kind){
      |        ^
./code/custom/generated/lexer_cpp.cpp:2801:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2801 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2802:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2802 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2805:240: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘long int’ may change the sign of the result [-Wsign-conversion]
 2805 | Lexeme_Table_Lookup lookup = lexeme_table_lookup(cpp_pp_directives_hash_array, cpp_pp_directives_key_array, cpp_pp_directives_value_array, cpp_pp_directives_slot_count, cpp_pp_directives_seed, state.delim_first, (state.delim_one_past_last - state.delim_first));
      |                                                                                                                                                                                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:2808:25: warning: conversion to ‘i16’ {aka ‘short int’} from ‘u16’ {aka ‘short unsigned int’} may change the sign of the result [-Wsign-conversion]
 2808 | token.sub_kind = lookup.sub_kind;
      |                  ~~~~~~~^~~~~~~~
./code/custom/generated/lexer_cpp.cpp:2814:8: warning: switch missing default case [-Wswitch-default]
 2814 | switch (token.sub_kind){
      |        ^
./code/custom/generated/lexer_cpp.cpp:2855:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2855 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2856:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2856 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2875:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2875 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2876:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2876 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2914:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2914 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2915:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2915 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2939:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2939 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2940:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2940 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2959:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2959 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:2960:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2960 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:2999:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 2999 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3000:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3000 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3146:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3146 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3147:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3147 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3171:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3171 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3172:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3172 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3194:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3194 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3195:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3195 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3240:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3240 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3241:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3241 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3293:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3293 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3294:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3294 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3307:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3307 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3308:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3308 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3596:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3596 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3597:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3597 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3610:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3610 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3611:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3611 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3637:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3637 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3638:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3638 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3668:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3668 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3669:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3669 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3682:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3682 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3683:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3683 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3713:46: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘long int’ may change the sign of the result [-Wsign-conversion]
 3713 | u64 delim_length = state.delim_one_past_last - state.delim_first;
      |                    ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:3748:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3748 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3749:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3749 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3793:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3793 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3794:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3794 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3807:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3807 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3808:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3808 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3832:17: warning: unsigned conversion from ‘int’ to ‘u16’ {aka ‘short unsigned int’} changes the value of ‘-2’ [-Wsign-conversion]
 3832 | state.flags_KB0 &= ~(0x1);
      | ~~~~~~~~~~~~~~~~^~~~~~~~~
./code/custom/generated/lexer_cpp.cpp:3833:20: warning: unsigned conversion from ‘int’ to ‘u32’ {aka ‘unsigned int’} changes value from ‘-2’ to ‘4294967294’ [-Wsign-conversion]
 3833 | state.flags_KF0 &= ~(0x1);
      |                    ^~~~~~
./code/custom/generated/lexer_cpp.cpp:3849:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3849 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3850:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3850 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3863:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3863 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3864:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3864 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3895:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3895 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3896:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3896 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3920:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3920 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3921:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3921 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3945:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3945 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3946:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3946 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:3996:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3996 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:3997:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 3997 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4016:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4016 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4017:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4017 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4038:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4038 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4039:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4039 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4063:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4063 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4064:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4064 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4083:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4083 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4084:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4084 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4105:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4105 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4106:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4106 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4127:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4127 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4128:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4128 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4152:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4152 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4153:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4153 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4172:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4172 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4173:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4173 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4194:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4194 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4195:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4195 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4216:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4216 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4217:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4217 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4246:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4246 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4247:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4247 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4266:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4266 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4267:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4267 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4288:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4288 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4289:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4289 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4313:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4313 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4314:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4314 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4333:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4333 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4334:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4334 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4368:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4368 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4369:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4369 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4388:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4388 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4389:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4389 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4410:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4410 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4411:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4411 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4440:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4440 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4441:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4441 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4460:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4460 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4461:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4461 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4482:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4482 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4483:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4483 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4507:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4507 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4508:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4508 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4527:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4527 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4528:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4528 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4549:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4549 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4550:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4550 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4574:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4574 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4575:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4575 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4594:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4594 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4595:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4595 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4616:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4616 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4617:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4617 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4641:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4641 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4642:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4642 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4661:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4661 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4662:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4662 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4683:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4683 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4684:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4684 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4708:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4708 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4709:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4709 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4728:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4728 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4729:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4729 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4750:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4750 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4751:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4751 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4775:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4775 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4776:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4776 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4795:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4795 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4796:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4796 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4817:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4817 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4818:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4818 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4842:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4842 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4843:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4843 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4862:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4862 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4863:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4863 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4884:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4884 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4885:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4885 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4909:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4909 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4910:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4910 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4929:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4929 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4930:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4930 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4951:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4951 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4952:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4952 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4976:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4976 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4977:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4977 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:4996:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4996 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:4997:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 4997 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5018:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5018 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5019:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5019 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5043:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5043 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5044:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5044 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5063:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5063 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5064:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5064 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5085:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5085 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5086:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5086 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5110:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5110 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5111:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5111 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5130:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5130 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5131:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5131 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/custom/generated/lexer_cpp.cpp:5152:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5152 | token.pos = (i64)(state.emit_ptr - state.base);
      |                                              ^
      |             -----
      |             static_cast<i64> (                )
./code/custom/generated/lexer_cpp.cpp:5153:46: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
 5153 | token.size = (i64)(state.ptr - state.emit_ptr);
      |                                              ^
      |              -----
      |              static_cast<i64> (               )
./code/4ed_api_definition.cpp: In function ‘API_Definition* begin_api(Arena*, char*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:14:27: note: in expansion of macro ‘push_array_zero’
   14 |     API_Definition *api = push_array_zero(arena, API_Definition, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:14:27: note: in expansion of macro ‘push_array_zero’
   14 |     API_Definition *api = push_array_zero(arena, API_Definition, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:14:27: note: in expansion of macro ‘push_array_zero’
   14 |     API_Definition *api = push_array_zero(arena, API_Definition, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct API_Definition*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_definition.cpp:14:27: note: in expansion of macro ‘push_array_zero’
   14 |     API_Definition *api = push_array_zero(arena, API_Definition, 1);
      |                           ^~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘API_Call* api_call_with_location(Arena*, API_Definition*, String_Const_u8, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:21:22: note: in expansion of macro ‘push_array_zero’
   21 |     API_Call *call = push_array_zero(arena, API_Call, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:21:22: note: in expansion of macro ‘push_array_zero’
   21 |     API_Call *call = push_array_zero(arena, API_Call, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:21:22: note: in expansion of macro ‘push_array_zero’
   21 |     API_Call *call = push_array_zero(arena, API_Call, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct API_Call*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_definition.cpp:21:22: note: in expansion of macro ‘push_array_zero’
   21 |     API_Call *call = push_array_zero(arena, API_Call, 1);
      |                      ^~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘API_Type* api_type_structure_with_location(Arena*, API_Definition*, API_Type_Structure_Kind, String_Const_u8, List_String_Const_u8, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:37:22: note: in expansion of macro ‘push_array_zero’
   37 |     API_Type *type = push_array_zero(arena, API_Type, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:37:22: note: in expansion of macro ‘push_array_zero’
   37 |     API_Type *type = push_array_zero(arena, API_Type, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:37:22: note: in expansion of macro ‘push_array_zero’
   37 |     API_Type *type = push_array_zero(arena, API_Type, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct API_Type*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_definition.cpp:37:22: note: in expansion of macro ‘push_array_zero’
   37 |     API_Type *type = push_array_zero(arena, API_Type, 1);
      |                      ^~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘API_Param* api_param(Arena*, API_Call*, char*, char*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:59:24: note: in expansion of macro ‘push_array_zero’
   59 |     API_Param *param = push_array_zero(arena, API_Param, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:59:24: note: in expansion of macro ‘push_array_zero’
   59 |     API_Param *param = push_array_zero(arena, API_Param, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:59:24: note: in expansion of macro ‘push_array_zero’
   59 |     API_Param *param = push_array_zero(arena, API_Param, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct API_Param*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_definition.cpp:59:24: note: in expansion of macro ‘push_array_zero’
   59 |     API_Param *param = push_array_zero(arena, API_Param, 1);
      |                        ^~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘API_Definition* api_get_api(Arena*, API_Definition_List*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:90:18: note: in expansion of macro ‘push_array_zero’
   90 |         result = push_array_zero(arena, API_Definition, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:90:18: note: in expansion of macro ‘push_array_zero’
   90 |         result = push_array_zero(arena, API_Definition, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:90:18: note: in expansion of macro ‘push_array_zero’
   90 |         result = push_array_zero(arena, API_Definition, 1);
      |                  ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct API_Definition*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_definition.cpp:90:18: note: in expansion of macro ‘push_array_zero’
   90 |         result = push_array_zero(arena, API_Definition, 1);
      |                  ^~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:97:
./code/4ed_api_definition.cpp: In function ‘b32 api_type_match(API_Type*, API_Type*)’:
./code/4ed_api_definition.cpp:149:16: warning: switch missing default case [-Wswitch-default]
  149 |         switch (a->kind){
      |                ^
./code/4ed_api_definition.cpp: In function ‘String_Const_u8 api_get_callable_name(Arena*, String_Const_u8, String_Const_u8, API_Generation_Flag)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:198:49: note: in expansion of macro ‘string_expand’
  198 |         result = push_u8_stringf(arena, "%.*s", string_expand(name));
      |                                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:198:49: note: in expansion of macro ‘string_expand’
  198 |         result = push_u8_stringf(arena, "%.*s", string_expand(name));
      |                                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:202:34: note: in expansion of macro ‘string_expand’
  202 |                                  string_expand(api_name),
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:202:34: note: in expansion of macro ‘string_expand’
  202 |                                  string_expand(api_name),
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:203:34: note: in expansion of macro ‘string_expand’
  203 |                                  string_expand(name));
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:203:34: note: in expansion of macro ‘string_expand’
  203 |                                  string_expand(name));
      |                                  ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘void generate_api_master_list(Arena*, API_Definition*, API_Generation_Flag, FILE*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:216:17: note: in expansion of macro ‘string_expand’
  216 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:216:17: note: in expansion of macro ‘string_expand’
  216 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:217:17: note: in expansion of macro ‘string_expand’
  217 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:217:17: note: in expansion of macro ‘string_expand’
  217 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:218:17: note: in expansion of macro ‘string_expand’
  218 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:218:17: note: in expansion of macro ‘string_expand’
  218 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:227:25: note: in expansion of macro ‘string_expand’
  227 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:227:25: note: in expansion of macro ‘string_expand’
  227 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:228:25: note: in expansion of macro ‘string_expand’
  228 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:228:25: note: in expansion of macro ‘string_expand’
  228 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp:211:33: warning: unused parameter ‘scratch’ [-Wunused-parameter]
  211 | generate_api_master_list(Arena *scratch, API_Definition *api, API_Generation_Flag flags, FILE *out){
      |                          ~~~~~~~^~~~~~~
./code/4ed_api_definition.cpp:211:83: warning: unused parameter ‘flags’ [-Wunused-parameter]
  211 | generate_api_master_list(Arena *scratch, API_Definition *api, API_Generation_Flag flags, FILE *out){
      |                                                               ~~~~~~~~~~~~~~~~~~~~^~~~~
./code/4ed_api_definition.cpp: In function ‘void generate_header(Arena*, API_Definition*, API_Generation_Flag, FILE*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:244:17: note: in expansion of macro ‘string_expand’
  244 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:244:17: note: in expansion of macro ‘string_expand’
  244 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:245:17: note: in expansion of macro ‘string_expand’
  245 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:245:17: note: in expansion of macro ‘string_expand’
  245 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:246:17: note: in expansion of macro ‘string_expand’
  246 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:246:17: note: in expansion of macro ‘string_expand’
  246 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:247:17: note: in expansion of macro ‘string_expand’
  247 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:247:17: note: in expansion of macro ‘string_expand’
  247 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:248:17: note: in expansion of macro ‘string_expand’
  248 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:248:17: note: in expansion of macro ‘string_expand’
  248 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:257:25: note: in expansion of macro ‘string_expand’
  257 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:257:25: note: in expansion of macro ‘string_expand’
  257 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:258:25: note: in expansion of macro ‘string_expand’
  258 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:258:25: note: in expansion of macro ‘string_expand’
  258 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:271:17: note: in expansion of macro ‘string_expand’
  271 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:271:17: note: in expansion of macro ‘string_expand’
  271 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:272:17: note: in expansion of macro ‘string_expand’
  272 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:272:17: note: in expansion of macro ‘string_expand’
  272 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:273:17: note: in expansion of macro ‘string_expand’
  273 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:273:17: note: in expansion of macro ‘string_expand’
  273 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:282:25: note: in expansion of macro ‘string_expand’
  282 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:282:25: note: in expansion of macro ‘string_expand’
  282 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:283:25: note: in expansion of macro ‘string_expand’
  283 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:283:25: note: in expansion of macro ‘string_expand’
  283 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:292:47: note: in expansion of macro ‘string_expand’
  292 |     fprintf(out, "struct API_VTable_%.*s{\n", string_expand(api->name));
      |                                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:292:47: note: in expansion of macro ‘string_expand’
  292 |     fprintf(out, "struct API_VTable_%.*s{\n", string_expand(api->name));
      |                                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:297:17: note: in expansion of macro ‘string_expand’
  297 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:297:17: note: in expansion of macro ‘string_expand’
  297 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:298:17: note: in expansion of macro ‘string_expand’
  298 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:298:17: note: in expansion of macro ‘string_expand’
  298 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:300:17: note: in expansion of macro ‘string_expand’
  300 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:300:17: note: in expansion of macro ‘string_expand’
  300 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:311:17: note: in expansion of macro ‘string_expand’
  311 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:311:17: note: in expansion of macro ‘string_expand’
  311 |                 string_expand(call->return_type),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:312:17: note: in expansion of macro ‘string_expand’
  312 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:312:17: note: in expansion of macro ‘string_expand’
  312 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:321:25: note: in expansion of macro ‘string_expand’
  321 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:321:25: note: in expansion of macro ‘string_expand’
  321 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:322:25: note: in expansion of macro ‘string_expand’
  322 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:322:25: note: in expansion of macro ‘string_expand’
  322 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:337:17: note: in expansion of macro ‘string_expand’
  337 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:337:17: note: in expansion of macro ‘string_expand’
  337 |                 string_expand(api->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:338:17: note: in expansion of macro ‘string_expand’
  338 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:338:17: note: in expansion of macro ‘string_expand’
  338 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:339:17: note: in expansion of macro ‘string_expand’
  339 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:339:17: note: in expansion of macro ‘string_expand’
  339 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘void generate_cpp(Arena*, API_Definition*, API_Generation_Flag, FILE*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:349:13: note: in expansion of macro ‘string_expand’
  349 |             string_expand(api->name),
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:349:13: note: in expansion of macro ‘string_expand’
  349 |             string_expand(api->name),
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:350:13: note: in expansion of macro ‘string_expand’
  350 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:350:13: note: in expansion of macro ‘string_expand’
  350 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:356:17: note: in expansion of macro ‘string_expand’
  356 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:356:17: note: in expansion of macro ‘string_expand’
  356 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:357:17: note: in expansion of macro ‘string_expand’
  357 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:357:17: note: in expansion of macro ‘string_expand’
  357 |                 string_expand(callable_name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:364:13: note: in expansion of macro ‘string_expand’
  364 |             string_expand(api->name),
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:364:13: note: in expansion of macro ‘string_expand’
  364 |             string_expand(api->name),
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:365:13: note: in expansion of macro ‘string_expand’
  365 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:365:13: note: in expansion of macro ‘string_expand’
  365 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:371:17: note: in expansion of macro ‘string_expand’
  371 |                 string_expand(callable_name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:371:17: note: in expansion of macro ‘string_expand’
  371 |                 string_expand(callable_name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:372:17: note: in expansion of macro ‘string_expand’
  372 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:372:17: note: in expansion of macro ‘string_expand’
  372 |                 string_expand(call->name));
      |                 ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘void generate_constructor(Arena*, API_Definition*, API_Generation_Flag, FILE*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:383:13: note: in expansion of macro ‘string_expand’
  383 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:383:13: note: in expansion of macro ‘string_expand’
  383 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:385:13: note: in expansion of macro ‘string_expand’
  385 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:385:13: note: in expansion of macro ‘string_expand’
  385 |             string_expand(api->name));
      |             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:395:17: note: in expansion of macro ‘string_expand’
  395 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:395:17: note: in expansion of macro ‘string_expand’
  395 |                 string_expand(call->name),
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:396:17: note: in expansion of macro ‘string_expand’
  396 |                 string_expand(call->return_type));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:396:17: note: in expansion of macro ‘string_expand’
  396 |                 string_expand(call->return_type));
      |                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:406:25: note: in expansion of macro ‘string_expand’
  406 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:406:25: note: in expansion of macro ‘string_expand’
  406 |                         string_expand(param->type_name),
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:407:25: note: in expansion of macro ‘string_expand’
  407 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:407:25: note: in expansion of macro ‘string_expand’
  407 |                         string_expand(param->name));
      |                         ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp:380:29: warning: unused parameter ‘scratch’ [-Wunused-parameter]
  380 | generate_constructor(Arena *scratch, API_Definition *api, API_Generation_Flag flags, FILE *out){
      |                      ~~~~~~~^~~~~~~
./code/4ed_api_definition.cpp:380:79: warning: unused parameter ‘flags’ [-Wunused-parameter]
  380 | generate_constructor(Arena *scratch, API_Definition *api, API_Generation_Flag flags, FILE *out){
      |                                                           ~~~~~~~~~~~~~~~~~~~~^~~~~
./code/4ed_api_definition.cpp: In function ‘b32 api_definition_generate_api_includes(Arena*, API_Definition*, Generated_Group, API_Generation_Flag)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_definition.cpp:424:36: note: in expansion of macro ‘string_u8_litexpr’
  424 |     String_Const_u8 path_to_self = string_u8_litexpr(__FILE__);
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_definition.cpp:424:36: note: in expansion of macro ‘string_u8_litexpr’
  424 |     String_Const_u8 path_to_self = string_u8_litexpr(__FILE__);
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_definition.cpp:424:36: note: in expansion of macro ‘string_u8_litexpr’
  424 |     String_Const_u8 path_to_self = string_u8_litexpr(__FILE__);
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_definition.cpp:436:20: note: in expansion of macro ‘string_u8_litexpr’
  436 |             root = string_u8_litexpr("generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_definition.cpp:436:20: note: in expansion of macro ‘string_u8_litexpr’
  436 |             root = string_u8_litexpr("generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_definition.cpp:436:20: note: in expansion of macro ‘string_u8_litexpr’
  436 |             root = string_u8_litexpr("generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_definition.cpp:440:20: note: in expansion of macro ‘string_u8_litexpr’
  440 |             root = string_u8_litexpr("custom/generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_definition.cpp:440:20: note: in expansion of macro ‘string_u8_litexpr’
  440 |             root = string_u8_litexpr("custom/generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_definition.cpp:440:20: note: in expansion of macro ‘string_u8_litexpr’
  440 |             root = string_u8_litexpr("custom/generated/");
      |                    ^~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:433:12: warning: switch missing default case [-Wswitch-default]
  433 |     switch (group){
      |            ^
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:445:32: note: in expansion of macro ‘string_expand’
  445 |                                string_expand(path_to_self),
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:445:32: note: in expansion of macro ‘string_expand’
  445 |                                string_expand(path_to_self),
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:446:32: note: in expansion of macro ‘string_expand’
  446 |                                string_expand(root),
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:446:32: note: in expansion of macro ‘string_expand’
  446 |                                string_expand(root),
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:447:32: note: in expansion of macro ‘string_expand’
  447 |                                string_expand(api->name));
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:447:32: note: in expansion of macro ‘string_expand’
  447 |                                string_expand(api->name));
      |                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:450:31: note: in expansion of macro ‘string_expand’
  450 |                               string_expand(path_to_self),
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:450:31: note: in expansion of macro ‘string_expand’
  450 |                               string_expand(path_to_self),
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:451:31: note: in expansion of macro ‘string_expand’
  451 |                               string_expand(root),
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:451:31: note: in expansion of macro ‘string_expand’
  451 |                               string_expand(root),
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:452:31: note: in expansion of macro ‘string_expand’
  452 |                               string_expand(api->name));
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:452:31: note: in expansion of macro ‘string_expand’
  452 |                               string_expand(api->name));
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:455:33: note: in expansion of macro ‘string_expand’
  455 |                                 string_expand(path_to_self),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:455:33: note: in expansion of macro ‘string_expand’
  455 |                                 string_expand(path_to_self),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:456:33: note: in expansion of macro ‘string_expand’
  456 |                                 string_expand(root),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:456:33: note: in expansion of macro ‘string_expand’
  456 |                                 string_expand(root),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:457:33: note: in expansion of macro ‘string_expand’
  457 |                                 string_expand(api->name));
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:457:33: note: in expansion of macro ‘string_expand’
  457 |                                 string_expand(api->name));
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:460:33: note: in expansion of macro ‘string_expand’
  460 |                                 string_expand(path_to_self),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:460:33: note: in expansion of macro ‘string_expand’
  460 |                                 string_expand(path_to_self),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:461:33: note: in expansion of macro ‘string_expand’
  461 |                                 string_expand(root),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:461:33: note: in expansion of macro ‘string_expand’
  461 |                                 string_expand(root),
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:462:33: note: in expansion of macro ‘string_expand’
  462 |                                 string_expand(api->name));
      |                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:462:33: note: in expansion of macro ‘string_expand’
  462 |                                 string_expand(api->name));
      |                                 ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp:464:47: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  464 |     FILE *out_file_ml = fopen((char*)fname_ml.str, "wb");
      |                                               ^~~
      |                               -------------------
      |                               reinterpret_cast<char*> (fname_ml.str)
./code/4ed_api_definition.cpp:470:45: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  470 |     FILE *out_file_h = fopen((char*)fname_h.str, "wb");
      |                                             ^~~
      |                              ------------------
      |                              reinterpret_cast<char*> (fname_h.str)
./code/4ed_api_definition.cpp:476:49: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  476 |     FILE *out_file_cpp = fopen((char*)fname_cpp.str, "wb");
      |                                                 ^~~
      |                                --------------------
      |                                reinterpret_cast<char*> (fname_cpp.str)
./code/4ed_api_definition.cpp:482:49: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  482 |     FILE *out_file_con = fopen((char*)fname_con.str, "wb");
      |                                                 ^~~
      |                                --------------------
      |                                reinterpret_cast<char*> (fname_con.str)
./code/4ed_api_definition.cpp: In function ‘void api_definition_error(Arena*, List_String_Const_u8*, char*, API_Call*, char*, API_Call*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_definition.cpp:515:5: note: in expansion of macro ‘Assert’
  515 |     Assert(e1 != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_definition.cpp:516:5: note: in expansion of macro ‘Assert’
  516 |     Assert(c1 != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:519:23: note: in expansion of macro ‘string_expand’
  519 |                       string_expand(c1->location_string),
      |                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:519:23: note: in expansion of macro ‘string_expand’
  519 |                       string_expand(c1->location_string),
      |                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:520:27: note: in expansion of macro ‘string_expand’
  520 |                       e1, string_expand(c1->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:520:27: note: in expansion of macro ‘string_expand’
  520 |                       e1, string_expand(c1->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:524:55: note: in expansion of macro ‘string_expand’
  524 |             string_list_pushf(arena, list, " '%.*s'", string_expand(c2->name));
      |                                                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:524:55: note: in expansion of macro ‘string_expand’
  524 |             string_list_pushf(arena, list, " '%.*s'", string_expand(c2->name));
      |                                                       ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_definition.cpp:527:35: note: in expansion of macro ‘string_u8_litexpr’
  527 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_definition.cpp:527:35: note: in expansion of macro ‘string_u8_litexpr’
  527 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_definition.cpp:527:35: note: in expansion of macro ‘string_u8_litexpr’
  527 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:530:78: note: in expansion of macro ‘string_expand’
  530 |         string_list_pushf(arena, list, " note: see declaration of '%.*s'\n", string_expand(c2->name));
      |                                                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:530:78: note: in expansion of macro ‘string_expand’
  530 |         string_list_pushf(arena, list, " note: see declaration of '%.*s'\n", string_expand(c2->name));
      |                                                                              ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘void api_definition_error(Arena*, List_String_Const_u8*, char*, API_Definition*, char*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_definition.cpp:549:5: note: in expansion of macro ‘Assert’
  549 |     Assert(e1 != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_definition.cpp:550:5: note: in expansion of macro ‘Assert’
  550 |     Assert(api1 != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_definition.cpp:552:27: note: in expansion of macro ‘string_expand’
  552 |                       e1, string_expand(api1->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_definition.cpp:552:27: note: in expansion of macro ‘string_expand’
  552 |                       e1, string_expand(api1->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_definition.cpp:556:35: note: in expansion of macro ‘string_u8_litexpr’
  556 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_definition.cpp:556:35: note: in expansion of macro ‘string_u8_litexpr’
  556 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_definition.cpp:556:35: note: in expansion of macro ‘string_u8_litexpr’
  556 |     string_list_push(arena, list, string_u8_litexpr("\n"));
      |                                   ^~~~~~~~~~~~~~~~~
./code/custom/generated/custom_api_constructor.cpp: In function ‘API_Definition* custom_api_construct(Arena*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:5:56: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:5:56: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:5:56: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:5:97: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:5:97: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:5:97: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:5:123: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:5:123: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:5:123: note: in expansion of macro ‘string_u8_litexpr’
    5 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:11:56: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:11:56: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:11:56: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:11:106: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:11:106: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:11:106: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:11:137: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:11:137: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:11:137: note: in expansion of macro ‘string_u8_litexpr’
   11 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_get_screen_rectangle"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:15:56: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:15:56: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:15:56: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:15:97: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:15:97: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:15:97: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:15:135: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:15:135: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:15:135: note: in expansion of macro ‘string_u8_litexpr’
   15 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_thread_context"), string_u8_litexpr("Thread_Context*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:19:56: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:19:56: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:19:56: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:19:99: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:19:99: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:19:99: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:19:138: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:19:138: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:19:138: note: in expansion of macro ‘string_u8_litexpr’
   19 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:25:56: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:25:56: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:25:56: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:25:110: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:25:110: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:25:110: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:25:136: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:25:136: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:25:136: note: in expansion of macro ‘string_u8_litexpr’
   25 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_set_target_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:32:56: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:32:56: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:32:56: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:32:112: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:32:112: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:32:112: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:32:151: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:32:151: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:32:151: note: in expansion of macro ‘string_u8_litexpr’
   32 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_attached_child_process"), string_u8_litexpr("Child_Process_ID"), string_u8_litexpr(""));
      |                                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:37:56: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:37:56: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:37:56: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:37:112: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:37:112: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:37:112: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:37:144: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:37:144: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:37:144: note: in expansion of macro ‘string_u8_litexpr’
   37 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_attached_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:42:56: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:42:56: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:42:56: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:42:102: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:42:102: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:42:102: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:42:138: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:42:138: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:42:138: note: in expansion of macro ‘string_u8_litexpr’
   42 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("child_process_get_state"), string_u8_litexpr("Process_State"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:47:56: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:47:56: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:47:56: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:47:100: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:47:100: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:47:100: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:47:126: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:47:126: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:47:126: note: in expansion of macro ‘string_u8_litexpr’
   47 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("enqueue_virtual_event"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:52:56: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:52:56: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:52:56: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:52:95: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:52:95: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:52:95: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:52:121: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:52:121: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:52:121: note: in expansion of macro ‘string_u8_litexpr’
   52 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_count"), string_u8_litexpr("i32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:56:56: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:56:56: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:56:56: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:56:94: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:56:94: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:56:94: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:56:126: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:56:126: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:56:126: note: in expansion of macro ‘string_u8_litexpr’
   56 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_next"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:62:56: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:62:56: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:62:56: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:62:97: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:62:97: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:62:97: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:62:129: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:62:129: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:62:129: note: in expansion of macro ‘string_u8_litexpr’
   62 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:68:56: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:68:56: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:68:56: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:68:102: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:68:102: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:68:102: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:68:134: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:68:134: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:68:134: note: in expansion of macro ‘string_u8_litexpr’
   68 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_buffer_by_file_name"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:74:56: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:74:56: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:74:56: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:74:96: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:74:96: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:74:96: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:74:122: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:74:122: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:74:122: note: in expansion of macro ‘string_u8_litexpr’
   74 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_read_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:81:56: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:81:56: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:81:56: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:81:99: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:81:99: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:81:99: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:81:125: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:81:125: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:81:125: note: in expansion of macro ‘string_u8_litexpr’
   81 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_replace_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:88:56: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:88:56: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:88:56: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:88:96: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:88:96: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:88:96: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:88:122: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:88:122: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:88:122: note: in expansion of macro ‘string_u8_litexpr’
   88 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_batch_edit"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:94:56: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:94:56: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:94:56: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:94:97: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:94:97: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:94:97: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:94:132: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:94:132: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:94:132: note: in expansion of macro ‘string_u8_litexpr’
   94 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_string"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:102:56: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:102:56: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:102:56: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:102:106: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:102:106: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:102:106: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:102:141: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:102:141: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:102:141: note: in expansion of macro ‘string_u8_litexpr’
  102 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_seek_character_class"), string_u8_litexpr("String_Match"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:110:56: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:110:56: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:110:56: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:110:103: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:110:103: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:110:103: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:110:129: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:110:129: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:110:129: note: in expansion of macro ‘string_u8_litexpr’
  110 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:119:56: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:119:56: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:119:56: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:119:98: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:119:98: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:119:98: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:119:140: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:119:140: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:119:140: note: in expansion of macro ‘string_u8_litexpr’
  119 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:128:56: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:128:56: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:128:56: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:128:104: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:128:104: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:128:104: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:128:130: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:128:130: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:128:130: note: in expansion of macro ‘string_u8_litexpr’
  128 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:137:56: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:137:56: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:137:56: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:137:105: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:137:105: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:137:105: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:137:136: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:137:136: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:137:136: note: in expansion of macro ‘string_u8_litexpr’
  137 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:146:56: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:146:56: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:146:56: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:146:103: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:146:103: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:146:103: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:146:134: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:146:134: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:146:134: note: in expansion of macro ‘string_u8_litexpr’
  146 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:155:56: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:155:56: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:155:56: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:155:113: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:155:113: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:155:113: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:155:139: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:155:139: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:155:139: note: in expansion of macro ‘string_u8_litexpr’
  155 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:164:56: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:164:56: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:164:56: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:164:113: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:164:113: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:164:113: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:164:139: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:164:139: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:164:139: note: in expansion of macro ‘string_u8_litexpr’
  164 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:173:56: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:173:56: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:173:56: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:173:101: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:173:101: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:173:101: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:173:127: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:173:127: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:173:127: note: in expansion of macro ‘string_u8_litexpr’
  173 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_y_difference"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:180:56: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:180:56: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:180:56: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:180:96: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:180:96: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:180:96: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:180:138: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:180:138: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:180:138: note: in expansion of macro ‘string_u8_litexpr’
  180 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_line_shift_y"), string_u8_litexpr("Line_Shift_Vertical"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:187:56: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:187:56: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:187:56: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:187:102: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:187:102: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:187:102: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:187:128: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:187:128: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:187:128: note: in expansion of macro ‘string_u8_litexpr’
  187 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_at_relative_xy"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:194:56: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:194:56: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:194:56: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:194:103: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:194:103: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:194:103: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:194:134: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:194:134: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:194:134: note: in expansion of macro ‘string_u8_litexpr’
  194 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:201:56: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:201:56: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:201:56: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:201:101: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:201:101: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:201:101: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:201:132: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:201:132: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:201:132: note: in expansion of macro ‘string_u8_litexpr’
  201 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_padded_box_of_pos"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:208:56: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:208:56: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:208:56: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:208:111: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:208:111: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:208:111: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:208:137: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:208:137: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:208:137: note: in expansion of macro ‘string_u8_litexpr’
  208 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_relative_character_from_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:215:56: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:215:56: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:215:56: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:215:111: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:215:111: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:215:111: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:215:137: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:215:137: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:215:137: note: in expansion of macro ‘string_u8_litexpr’
  215 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pos_from_relative_character"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:222:56: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:222:56: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:222:56: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:222:92: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:222:92: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:222:92: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:222:118: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:222:118: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:222:118: note: in expansion of macro ‘string_u8_litexpr’
  222 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:227:56: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:227:56: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:227:56: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:227:102: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:227:102: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:227:102: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:227:136: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:227:136: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:227:136: note: in expansion of macro ‘string_u8_litexpr’
  227 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_access_flags"), string_u8_litexpr("Access_Flag"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:232:56: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:232:56: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:232:56: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:232:94: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:232:94: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:232:94: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:232:120: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:232:120: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:232:120: note: in expansion of macro ‘string_u8_litexpr’
  232 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_size"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:237:56: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:237:56: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:237:56: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:237:100: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:237:100: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:237:100: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:237:126: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:237:126: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:237:126: note: in expansion of macro ‘string_u8_litexpr’
  237 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_line_count"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:242:56: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:242:56: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:242:56: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:242:100: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:242:100: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:242:100: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:242:138: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:242:138: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:242:138: note: in expansion of macro ‘string_u8_litexpr’
  242 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_base_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:248:56: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:248:56: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:248:56: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:248:102: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:248:102: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:248:102: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:248:140: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:248:140: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:248:140: note: in expansion of macro ‘string_u8_litexpr’
  248 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_unique_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:254:56: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:254:56: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:254:56: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:254:100: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:254:100: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:254:100: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:254:138: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:254:138: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:254:138: note: in expansion of macro ‘string_u8_litexpr’
  254 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_buffer_file_name"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:260:56: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:260:56: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:260:56: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:260:101: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:260:101: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:260:101: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:260:135: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:260:135: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:260:135: note: in expansion of macro ‘string_u8_litexpr’
  260 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_dirty_state"), string_u8_litexpr("Dirty_State"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:265:56: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:265:56: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:265:56: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:265:101: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:265:101: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:265:101: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:265:127: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:265:127: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:265:127: note: in expansion of macro ‘string_u8_litexpr’
  265 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_dirty_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:271:56: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:271:56: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:271:56: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:271:96: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:271:96: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:271:96: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:271:122: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:271:122: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:271:122: note: in expansion of macro ‘string_u8_litexpr’
  271 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_layout"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:277:56: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:277:56: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:277:56: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:277:104: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:277:104: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:277:104: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:277:130: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:277:130: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:277:130: note: in expansion of macro ‘string_u8_litexpr’
  277 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_clear_layout_cache"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:282:56: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:282:56: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:282:56: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:282:96: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:282:96: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:282:96: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:282:135: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:282:135: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:282:135: note: in expansion of macro ‘string_u8_litexpr’
  282 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_layout"), string_u8_litexpr("Layout_Function*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:287:56: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:287:56: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:287:56: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:287:97: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:287:97: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:287:97: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:287:123: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:287:123: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:287:123: note: in expansion of macro ‘string_u8_litexpr’
  287 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:294:56: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:294:56: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:294:56: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:294:97: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:294:97: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:294:97: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:294:123: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:294:123: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:294:123: note: in expansion of macro ‘string_u8_litexpr’
  294 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:301:56: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:301:56: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:301:56: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:301:103: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:301:103: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:301:103: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:301:139: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:301:139: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:301:139: note: in expansion of macro ‘string_u8_litexpr’
  301 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:306:56: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:306:56: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:306:56: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:306:101: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:306:101: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:306:101: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:306:127: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:306:127: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:306:127: note: in expansion of macro ‘string_u8_litexpr’
  306 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_send_end_signal"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:311:56: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:311:56: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:311:56: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:311:92: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:311:92: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:311:92: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:311:124: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:311:124: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:311:124: note: in expansion of macro ‘string_u8_litexpr’
  311 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:317:56: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:317:56: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:317:56: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:317:90: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:317:90: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:317:90: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:317:116: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:317:116: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:317:116: note: in expansion of macro ‘string_u8_litexpr’
  317 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_save"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:324:56: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:324:56: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:324:56: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:324:90: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:324:90: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:324:90: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:324:131: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:324:131: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:324:131: note: in expansion of macro ‘string_u8_litexpr’
  324 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_kill"), string_u8_litexpr("Buffer_Kill_Result"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:330:56: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:330:56: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:330:56: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:330:92: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:330:92: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:330:92: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:330:135: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:330:135: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:330:135: note: in expansion of macro ‘string_u8_litexpr’
  330 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_reopen"), string_u8_litexpr("Buffer_Reopen_Result"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:336:56: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:336:56: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:336:56: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:336:105: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:336:105: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:336:105: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:336:143: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:336:143: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:336:143: note: in expansion of macro ‘string_u8_litexpr’
  336 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_get_file_attributes"), string_u8_litexpr("File_Attributes"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:341:56: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:341:56: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:341:56: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:341:92: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:341:92: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:341:92: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:341:122: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:341:122: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:341:122: note: in expansion of macro ‘string_u8_litexpr’
  341 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_next"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:347:56: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:347:56: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:347:56: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:347:92: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:347:92: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:347:92: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:347:122: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:347:122: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:347:122: note: in expansion of macro ‘string_u8_litexpr’
  347 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_view_prev"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:353:56: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:353:56: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:353:56: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:353:96: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:353:96: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:353:96: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:353:126: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:353:126: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:353:126: note: in expansion of macro ‘string_u8_litexpr’
  353 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_this_ctx_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:358:56: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:358:56: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:358:56: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:358:94: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:358:94: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:358:94: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:358:124: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:358:124: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:358:124: note: in expansion of macro ‘string_u8_litexpr’
  358 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:363:56: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:363:56: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:363:56: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:363:90: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:363:90: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:363:90: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:363:116: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:363:116: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:363:116: note: in expansion of macro ‘string_u8_litexpr’
  363 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_exists"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:368:56: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:368:56: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:368:56: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:368:94: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:368:94: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:368:94: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:368:126: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:368:126: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:368:126: note: in expansion of macro ‘string_u8_litexpr’
  368 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:374:56: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:374:56: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:374:56: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:374:98: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:374:98: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:374:98: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:374:124: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:374:124: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:374:124: note: in expansion of macro ‘string_u8_litexpr’
  374 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_cursor_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:379:56: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:379:56: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:379:56: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:379:96: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:379:96: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:379:96: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:379:122: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:379:122: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:379:122: note: in expansion of macro ‘string_u8_litexpr’
  379 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_mark_pos"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:384:56: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:384:56: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:384:56: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:384:99: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:384:99: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:384:99: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:384:125: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:384:125: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:384:125: note: in expansion of macro ‘string_u8_litexpr’
  384 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_preferred_x"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:389:56: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:389:56: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:389:56: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:389:99: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:389:99: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:389:99: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:389:125: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:389:125: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:389:125: note: in expansion of macro ‘string_u8_litexpr’
  389 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_preferred_x"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:395:56: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:395:56: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:395:56: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:395:99: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:395:99: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:395:99: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:395:130: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:395:130: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:395:130: note: in expansion of macro ‘string_u8_litexpr’
  395 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_screen_rect"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:400:56: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:400:56: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:400:56: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:400:93: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:400:93: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:400:93: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:400:124: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:400:124: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:400:124: note: in expansion of macro ‘string_u8_litexpr’
  400 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_panel"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:405:56: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:405:56: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:405:56: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:405:93: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:405:93: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:405:93: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:405:123: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:405:123: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:405:123: note: in expansion of macro ‘string_u8_litexpr’
  405 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_view"), string_u8_litexpr("View_ID"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:411:56: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:411:56: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:411:56: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:411:93: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:411:93: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:411:93: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:411:119: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:411:119: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:411:119: note: in expansion of macro ‘string_u8_litexpr’
  411 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:416:56: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:416:56: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:416:56: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:416:92: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:416:92: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:416:92: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:416:118: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:416:118: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:416:118: note: in expansion of macro ‘string_u8_litexpr’
  416 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_is_leaf"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:421:56: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:421:56: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:421:56: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:421:90: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:421:90: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:421:90: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:421:116: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:421:116: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:421:116: note: in expansion of macro ‘string_u8_litexpr’
  421 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:427:56: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:427:56: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:427:56: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:427:94: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:427:94: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:427:94: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:427:120: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:427:120: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:427:120: note: in expansion of macro ‘string_u8_litexpr’
  427 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_set_split"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:434:56: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:434:56: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:434:56: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:434:98: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:434:98: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:434:98: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:434:124: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:434:124: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:434:124: note: in expansion of macro ‘string_u8_litexpr’
  434 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_swap_children"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:439:56: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:439:56: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:439:56: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:439:93: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:439:93: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:439:93: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:439:124: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:439:124: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:439:124: note: in expansion of macro ‘string_u8_litexpr’
  439 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_root"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:443:56: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:443:56: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:443:56: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:443:95: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:443:95: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:443:95: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:443:126: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:443:126: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:443:126: note: in expansion of macro ‘string_u8_litexpr’
  443 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_parent"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:448:56: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:448:56: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:448:56: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:448:94: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:448:94: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:448:94: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:448:125: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:448:125: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:448:125: note: in expansion of macro ‘string_u8_litexpr’
  448 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("panel_get_child"), string_u8_litexpr("Panel_ID"), string_u8_litexpr(""));
      |                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:454:56: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:454:56: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:454:56: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:454:89: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:454:89: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:454:89: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:454:115: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:454:115: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:454:115: note: in expansion of macro ‘string_u8_litexpr’
  454 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_close"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:459:56: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:459:56: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:459:56: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:459:101: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:459:101: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:459:101: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:459:132: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:459:132: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:459:132: note: in expansion of macro ‘string_u8_litexpr’
  459 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:464:56: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:464:56: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:464:56: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:464:101: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:464:101: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:464:101: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:464:137: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:464:137: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:464:137: note: in expansion of macro ‘string_u8_litexpr’
  464 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_buffer_scroll"), string_u8_litexpr("Buffer_Scroll"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:469:56: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:469:56: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:469:56: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:469:94: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:469:94: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:469:94: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:469:120: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:469:120: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:469:120: note: in expansion of macro ‘string_u8_litexpr’
  469 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_active"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:474:56: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:474:56: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:474:56: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:474:108: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:474:108: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:474:108: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:474:134: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:474:134: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:474:134: note: in expansion of macro ‘string_u8_litexpr’
  474 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_enqueue_command_function"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:480:56: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:480:56: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:480:56: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:480:95: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:480:95: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:480:95: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:480:121: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:480:121: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:480:121: note: in expansion of macro ‘string_u8_litexpr’
  480 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:487:56: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:487:56: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:487:56: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:487:95: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:487:95: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:487:95: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:487:121: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:487:121: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:487:121: note: in expansion of macro ‘string_u8_litexpr’
  487 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_setting"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:494:56: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:494:56: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:494:56: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:494:101: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:494:101: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:494:101: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:494:137: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:494:137: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:494:137: note: in expansion of macro ‘string_u8_litexpr’
  494 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:499:56: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:499:56: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:499:56: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:499:100: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:499:100: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:499:100: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:499:136: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:499:136: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:499:136: note: in expansion of macro ‘string_u8_litexpr’
  499 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:505:56: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:505:56: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:505:56: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:505:98: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:505:98: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:505:98: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:505:134: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:505:134: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:505:134: note: in expansion of macro ‘string_u8_litexpr’
  505 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_compute_cursor"), string_u8_litexpr("Buffer_Cursor"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:511:56: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:511:56: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:511:56: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:511:101: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:511:101: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:511:101: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:511:127: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:511:127: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:511:127: note: in expansion of macro ‘string_u8_litexpr’
  511 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:518:56: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:518:56: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:518:56: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:518:101: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:518:101: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:518:101: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:518:127: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:518:127: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:518:127: note: in expansion of macro ‘string_u8_litexpr’
  518 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_get_camera_bounds"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:525:56: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:525:56: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:525:56: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:525:94: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:525:94: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:525:94: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:525:120: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:525:120: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:525:120: note: in expansion of macro ‘string_u8_litexpr’
  525 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_cursor"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:531:56: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:531:56: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:531:56: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:531:101: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:531:101: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:531:101: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:531:127: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:531:127: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:531:127: note: in expansion of macro ‘string_u8_litexpr’
  531 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer_scroll"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:538:56: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:538:56: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:538:56: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:538:92: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:538:92: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:538:92: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:538:118: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:538:118: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:538:118: note: in expansion of macro ‘string_u8_litexpr’
  538 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_mark"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:544:56: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:544:56: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:544:56: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:544:91: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:544:91: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:544:91: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:544:117: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:544:117: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:544:117: note: in expansion of macro ‘string_u8_litexpr’
  544 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_quit_ui"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:549:56: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:549:56: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:549:56: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:549:94: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:549:94: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:549:94: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:549:120: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:549:120: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:549:120: note: in expansion of macro ‘string_u8_litexpr’
  549 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_set_buffer"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:556:56: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:556:56: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:556:56: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:556:96: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:556:96: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:556:96: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:556:122: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:556:122: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:556:122: note: in expansion of macro ‘string_u8_litexpr’
  556 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_push_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:562:56: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:562:56: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:562:56: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:562:95: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:562:95: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:562:95: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:562:121: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:562:121: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:562:121: note: in expansion of macro ‘string_u8_litexpr’
  562 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_pop_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:567:56: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:567:56: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:567:56: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:567:97: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:567:97: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:567:97: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:567:123: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:567:123: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:567:123: note: in expansion of macro ‘string_u8_litexpr’
  567 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_alter_context"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:573:56: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:573:56: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:573:56: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:573:99: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:573:99: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:573:99: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:573:134: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:573:134: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:573:134: note: in expansion of macro ‘string_u8_litexpr’
  573 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context"), string_u8_litexpr("View_Context"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:578:56: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:578:56: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:578:56: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:578:111: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:578:111: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:578:111: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:578:149: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:578:149: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:578:149: note: in expansion of macro ‘string_u8_litexpr’
  578 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("view_current_context_hook_memory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:584:56: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:584:56: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:584:56: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:584:104: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:584:104: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:584:104: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:584:140: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:584:140: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:584:140: note: in expansion of macro ‘string_u8_litexpr’
  584 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("create_user_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:588:56: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:588:56: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:588:56: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:588:105: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:588:105: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:588:105: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:588:131: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:588:131: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:588:131: note: in expansion of macro ‘string_u8_litexpr’
  588 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("destroy_user_managed_scope"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:593:56: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:593:56: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:593:56: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:593:103: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:593:103: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:593:103: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:593:139: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:593:139: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:593:139: note: in expansion of macro ‘string_u8_litexpr’
  593 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_global_managed_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:597:56: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:597:56: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:597:56: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:597:123: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:597:123: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:597:123: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:597:159: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:597:159: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:597:159: note: in expansion of macro ‘string_u8_litexpr’
  597 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_managed_scope_with_multiple_dependencies"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:603:56: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:603:56: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:603:56: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:603:107: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:603:107: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:603:107: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:603:133: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:603:133: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:603:133: note: in expansion of macro ‘string_u8_litexpr’
  603 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_contents"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:608:56: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:608:56: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:608:56: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:608:124: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:608:124: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:608:124: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:608:150: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:608:150: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:608:150: note: in expansion of macro ‘string_u8_litexpr’
  608 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_clear_self_all_dependent_scopes"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:613:56: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:613:56: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:613:56: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:613:102: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:613:102: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:613:102: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:613:140: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:613:140: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:613:140: note: in expansion of macro ‘string_u8_litexpr’
  613 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_allocator"), string_u8_litexpr("Base_Allocator*"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:618:56: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:618:56: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:618:56: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:618:106: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:618:106: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:618:106: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:618:132: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:618:132: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:618:132: note: in expansion of macro ‘string_u8_litexpr’
  618 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_group_highest_id"), string_u8_litexpr("u64"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:623:56: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:623:56: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:623:56: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:623:97: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:623:97: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:623:97: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:623:130: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:623:130: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:623:130: note: in expansion of macro ‘string_u8_litexpr’
  623 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_declare"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:629:56: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:629:56: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:629:56: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:629:93: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:629:93: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:629:93: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:629:126: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:629:126: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:629:126: note: in expansion of macro ‘string_u8_litexpr’
  629 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_id_get"), string_u8_litexpr("Managed_ID"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:635:56: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:635:56: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:635:56: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:635:107: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:635:107: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:635:107: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:635:135: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:635:135: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:635:135: note: in expansion of macro ‘string_u8_litexpr’
  635 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_get_attachment"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:642:56: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:642:56: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:642:56: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:642:109: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:642:109: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:642:109: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:642:135: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:642:135: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:642:135: note: in expansion of macro ‘string_u8_litexpr’
  642 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_scope_attachment_erase"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:648:56: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:648:56: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:648:56: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:648:108: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:648:108: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:648:108: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:648:145: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:648:145: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:648:145: note: in expansion of macro ‘string_u8_litexpr’
  648 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_managed_memory_in_scope"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:655:56: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:655:56: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:655:56: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:655:109: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:655:109: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:655:109: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:655:146: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:655:146: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:655:146: note: in expansion of macro ‘string_u8_litexpr’
  655 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("alloc_buffer_markers_on_buffer"), string_u8_litexpr("Managed_Object"), string_u8_litexpr(""));
      |                                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:662:56: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:662:56: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:662:56: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:662:107: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:662:107: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:662:107: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:662:133: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:662:133: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:662:133: note: in expansion of macro ‘string_u8_litexpr’
  662 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_size"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:667:56: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:667:56: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:667:56: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:667:108: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:667:108: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:667:108: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:667:134: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:667:134: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:667:134: note: in expansion of macro ‘string_u8_litexpr’
  667 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_item_count"), string_u8_litexpr("u32"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:672:56: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:672:56: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:672:56: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:672:105: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:672:105: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:672:105: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:672:133: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:672:133: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:672:133: note: in expansion of macro ‘string_u8_litexpr’
  672 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_pointer"), string_u8_litexpr("void*"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:677:56: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:677:56: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:677:56: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:677:102: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:677:102: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:677:102: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:677:144: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:677:144: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:677:144: note: in expansion of macro ‘string_u8_litexpr’
  677 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_type"), string_u8_litexpr("Managed_Object_Type"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:682:56: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:682:56: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:682:56: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:682:114: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:682:114: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:682:114: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:682:150: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:682:150: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:682:150: note: in expansion of macro ‘string_u8_litexpr’
  682 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_get_containing_scope"), string_u8_litexpr("Managed_Scope"), string_u8_litexpr(""));
      |                                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:687:56: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:687:56: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:687:56: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:687:98: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:687:98: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:687:98: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:687:124: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:687:124: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:687:124: note: in expansion of macro ‘string_u8_litexpr’
  687 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:692:56: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:692:56: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:692:56: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:692:104: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:692:104: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:692:104: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:692:130: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:692:130: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:692:130: note: in expansion of macro ‘string_u8_litexpr’
  692 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_store_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:700:56: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:700:56: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:700:56: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:700:103: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:700:103: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:700:103: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:700:129: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:700:129: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:700:129: note: in expansion of macro ‘string_u8_litexpr’
  700 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("managed_object_load_data"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:708:56: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:708:56: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:708:56: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:708:97: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:708:97: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:708:97: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:708:130: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:708:130: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:708:130: note: in expansion of macro ‘string_u8_litexpr’
  708 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_next_input_raw"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:712:56: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:712:56: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:712:56: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:712:112: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:712:112: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:712:112: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:712:138: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:712:138: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:712:138: note: in expansion of macro ‘string_u8_litexpr’
  712 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input_sequence_number"), string_u8_litexpr("i64"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:716:56: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:716:56: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:716:56: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:716:96: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:716:96: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:716:96: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:716:129: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:716:129: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:716:129: note: in expansion of macro ‘string_u8_litexpr’
  716 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_current_input"), string_u8_litexpr("User_Input"), string_u8_litexpr(""));
      |                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:720:56: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:720:56: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:720:56: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:720:96: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:720:96: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:720:96: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:720:123: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:720:123: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:720:123: note: in expansion of macro ‘string_u8_litexpr’
  720 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_current_input"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:725:56: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:725:56: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:725:56: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:725:108: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:725:108: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:725:108: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:725:135: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:725:135: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:725:135: note: in expansion of macro ‘string_u8_litexpr’
  725 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("leave_current_input_unhandled"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:729:56: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:729:56: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:729:56: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:729:94: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:729:94: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:729:94: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:729:121: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:729:121: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:729:121: note: in expansion of macro ‘string_u8_litexpr’
  729 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:735:56: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:735:56: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:735:56: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:735:94: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:735:94: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:735:94: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:735:127: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:735:127: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:735:127: note: in expansion of macro ‘string_u8_litexpr’
  735 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_hook"), string_u8_litexpr("Void_Func*"), string_u8_litexpr(""));
      |                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:740:56: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:740:56: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:740:56: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:740:106: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:740:106: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:740:106: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:740:132: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:740:132: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:740:132: note: in expansion of macro ‘string_u8_litexpr’
  740 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_custom_hook_memory_size"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:746:56: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:746:56: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:746:56: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:746:94: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:746:94: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:746:94: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:746:128: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:746:128: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:746:128: note: in expansion of macro ‘string_u8_litexpr’
  746 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_mouse_state"), string_u8_litexpr("Mouse_State"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:750:56: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:750:56: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:750:56: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:750:100: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:750:100: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:750:100: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:750:126: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:750:126: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:750:126: note: in expansion of macro ‘string_u8_litexpr’
  750 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_active_query_bars"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:757:56: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:757:56: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:757:56: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:757:94: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:757:94: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:757:94: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:757:120: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:757:120: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:757:120: note: in expansion of macro ‘string_u8_litexpr’
  757 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("start_query_bar"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:763:56: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:763:56: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:763:56: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:763:92: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:763:92: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:763:92: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:763:119: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:763:119: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:763:119: note: in expansion of macro ‘string_u8_litexpr’
  763 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("end_query_bar"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:769:56: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:769:56: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:769:56: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:769:99: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:769:99: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:769:99: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:769:126: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:769:126: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:769:126: note: in expansion of macro ‘string_u8_litexpr’
  769 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("clear_all_query_bars"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:774:56: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:774:56: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:774:56: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:774:92: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:774:92: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:774:92: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:774:119: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:774:119: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:774:119: note: in expansion of macro ‘string_u8_litexpr’
  774 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("print_message"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:779:56: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:779:56: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:779:56: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:779:89: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:779:89: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:779:89: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:779:115: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:779:115: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:779:115: note: in expansion of macro ‘string_u8_litexpr’
  779 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("log_string"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:784:56: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:784:56: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:784:56: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:784:98: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:784:98: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:784:98: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:784:128: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:784:128: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:784:128: note: in expansion of macro ‘string_u8_litexpr’
  784 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_largest_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:788:56: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:788:56: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:788:56: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:788:94: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:788:94: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:788:94: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:788:120: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:788:120: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:788:120: note: in expansion of macro ‘string_u8_litexpr’
  788 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_global_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:793:56: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:793:56: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:793:56: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:793:114: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:793:114: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:793:114: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:793:157: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:793:157: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:793:157: note: in expansion of macro ‘string_u8_litexpr’
  793 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_max_record_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:798:56: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:798:56: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:798:56: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:798:109: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:798:109: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:798:109: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:798:143: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:798:143: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:798:143: note: in expansion of macro ‘string_u8_litexpr’
  798 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_record_info"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:804:56: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:804:56: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:804:56: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:804:114: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:804:114: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:804:114: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:804:148: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:804:148: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:804:148: note: in expansion of macro ‘string_u8_litexpr’
  804 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_group_sub_record"), string_u8_litexpr("Record_Info"), string_u8_litexpr(""));
      |                                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:811:56: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:811:56: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:811:56: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:811:117: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:811:117: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:811:117: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:811:160: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:811:160: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:811:160: note: in expansion of macro ‘string_u8_litexpr’
  811 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_get_current_state_index"), string_u8_litexpr("History_Record_Index"), string_u8_litexpr(""));
      |                                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:816:56: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:816:56: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:816:56: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:816:117: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:816:117: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:816:117: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:816:143: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:816:143: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:816:143: note: in expansion of macro ‘string_u8_litexpr’
  816 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_set_current_state_index"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:822:56: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:822:56: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:822:56: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:822:112: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:822:112: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:822:112: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:822:138: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:822:138: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:822:138: note: in expansion of macro ‘string_u8_litexpr’
  822 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_merge_record_range"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:830:56: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:830:56: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:830:56: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:830:119: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:830:119: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:830:119: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:830:145: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:830:145: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:830:145: note: in expansion of macro ‘string_u8_litexpr’
  830 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_history_clear_after_current_state"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:835:56: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:835:56: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:835:56: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:835:110: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:835:110: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:835:110: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:835:137: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:835:137: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:835:137: note: in expansion of macro ‘string_u8_litexpr’
  835 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_begin"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:839:56: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:839:56: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:839:56: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:839:108: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:839:108: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:839:108: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:839:135: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:839:135: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:839:135: note: in expansion of macro ‘string_u8_litexpr’
  839 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("global_history_edit_group_end"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:843:56: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:843:56: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:843:56: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:843:94: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:843:94: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:843:94: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:843:120: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:843:120: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:843:120: note: in expansion of macro ‘string_u8_litexpr’
  843 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_set_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:849:56: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:849:56: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:849:56: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:849:99: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:849:99: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:849:99: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:849:138: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:849:138: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:849:138: note: in expansion of macro ‘string_u8_litexpr’
  849 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_description"), string_u8_litexpr("Face_Description"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:854:56: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:854:56: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:854:56: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:854:95: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:854:95: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:854:95: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:854:130: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:854:130: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:854:130: note: in expansion of macro ‘string_u8_litexpr’
  854 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_metrics"), string_u8_litexpr("Face_Metrics"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:859:56: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:859:56: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:859:56: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:859:99: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:859:99: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:859:99: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:859:138: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:859:138: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:859:138: note: in expansion of macro ‘string_u8_litexpr’
  859 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_advance_map"), string_u8_litexpr("Face_Advance_Map"), string_u8_litexpr(""));
      |                                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:864:56: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:864:56: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:864:56: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:864:90: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:864:90: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:864:90: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:864:120: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:864:120: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:864:120: note: in expansion of macro ‘string_u8_litexpr’
  864 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_face_id"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:869:56: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:869:56: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:869:56: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:869:98: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:869:98: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:869:98: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:869:128: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:869:128: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:869:128: note: in expansion of macro ‘string_u8_litexpr’
  869 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_create_new_face"), string_u8_litexpr("Face_ID"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:874:56: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:874:56: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:874:56: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:874:94: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:874:94: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:874:94: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:874:120: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:874:120: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:874:120: note: in expansion of macro ‘string_u8_litexpr’
  874 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_modify_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:880:56: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:880:56: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:880:56: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:880:95: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:880:95: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:880:95: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:880:121: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:880:121: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:880:121: note: in expansion of macro ‘string_u8_litexpr’
  880 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("try_release_face"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:886:56: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:886:56: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:886:56: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:886:97: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:886:97: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:886:97: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:886:135: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:886:135: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:886:135: note: in expansion of macro ‘string_u8_litexpr’
  886 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("push_hot_directory"), string_u8_litexpr("String_Const_u8"), string_u8_litexpr(""));
      |                                                                                                                                       ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:891:56: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:891:56: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:891:56: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:891:96: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:891:96: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:891:96: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:891:123: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:891:123: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:891:123: note: in expansion of macro ‘string_u8_litexpr’
  891 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_hot_directory"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:896:56: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:896:56: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:896:56: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:896:95: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:896:95: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:896:95: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:896:122: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:896:122: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:896:122: note: in expansion of macro ‘string_u8_litexpr’
  896 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("send_exit_signal"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:900:56: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:900:56: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:900:56: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:900:88: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:900:88: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:900:88: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:900:115: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:900:115: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:900:115: note: in expansion of macro ‘string_u8_litexpr’
  900 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("hard_exit"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:904:56: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:904:56: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:904:56: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:904:95: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:904:95: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:904:95: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:904:122: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:904:122: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:904:122: note: in expansion of macro ‘string_u8_litexpr’
  904 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("set_window_title"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:909:56: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:909:56: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:909:56: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:909:105: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:909:105: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:909:105: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:909:132: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:909:132: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:909:132: note: in expansion of macro ‘string_u8_litexpr’
  909 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("acquire_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:913:56: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:913:56: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:913:56: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:913:105: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:913:105: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:913:105: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:913:132: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:913:132: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:913:132: note: in expansion of macro ‘string_u8_litexpr’
  913 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("release_global_frame_mutex"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:917:56: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:917:56: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:917:56: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:917:99: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:917:99: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:917:99: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:917:130: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:917:130: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:917:130: note: in expansion of macro ‘string_u8_litexpr’
  917 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_string_oriented"), string_u8_litexpr("Vec2_f32"), string_u8_litexpr(""));
      |                                                                                                                                  ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:927:56: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:927:56: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:927:56: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:927:97: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:927:97: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:927:97: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:927:123: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:927:123: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:927:123: note: in expansion of macro ‘string_u8_litexpr’
  927 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_string_advance"), string_u8_litexpr("f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:933:56: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:933:56: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:933:56: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:933:93: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:933:93: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:933:93: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:933:120: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:933:120: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:933:120: note: in expansion of macro ‘string_u8_litexpr’
  933 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:940:56: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:940:56: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:940:56: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:940:101: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:940:101: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:940:101: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:940:128: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:940:128: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:940:128: note: in expansion of macro ‘string_u8_litexpr’
  940 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_rectangle_outline"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:948:56: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:948:56: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:948:56: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:948:92: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:948:92: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:948:92: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:948:123: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:948:123: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:948:123: note: in expansion of macro ‘string_u8_litexpr’
  948 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_set_clip"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:953:56: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:953:56: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:953:56: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:953:97: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:953:97: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:953:97: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:953:134: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:953:134: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:953:134: note: in expansion of macro ‘string_u8_litexpr’
  953 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_create"), string_u8_litexpr("Text_Layout_ID"), string_u8_litexpr(""));
      |                                                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:960:56: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:960:56: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:960:56: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:960:97: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:960:97: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:960:97: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:960:128: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:960:128: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:960:128: note: in expansion of macro ‘string_u8_litexpr’
  960 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_region"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:965:56: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:965:56: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:965:56: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:965:101: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:965:101: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:965:101: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:965:133: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:965:133: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:965:133: note: in expansion of macro ‘string_u8_litexpr’
  965 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_buffer"), string_u8_litexpr("Buffer_ID"), string_u8_litexpr(""));
      |                                                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:970:56: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:970:56: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:970:56: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:970:108: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:970:108: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:970:108: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:970:140: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:970:140: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:970:140: note: in expansion of macro ‘string_u8_litexpr’
  970 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_get_visible_range"), string_u8_litexpr("Range_i64"), string_u8_litexpr(""));
      |                                                                                                                                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:975:56: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:975:56: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:975:56: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:975:105: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:975:105: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:975:105: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:975:137: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:975:137: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:975:137: note: in expansion of macro ‘string_u8_litexpr’
  975 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_line_on_screen"), string_u8_litexpr("Range_f32"), string_u8_litexpr(""));
      |                                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:981:56: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:981:56: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:981:56: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:981:110: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:981:110: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:981:110: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:981:141: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:981:141: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:981:141: note: in expansion of macro ‘string_u8_litexpr’
  981 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_character_on_screen"), string_u8_litexpr("Rect_f32"), string_u8_litexpr(""));
      |                                                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:987:56: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:987:56: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:987:56: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:987:95: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:987:95: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:987:95: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:987:122: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:987:122: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:987:122: note: in expansion of macro ‘string_u8_litexpr’
  987 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:994:56: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:994:56: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:994:56: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:994:101: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:994:101: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:994:101: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:994:128: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:994:128: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:994:128: note: in expansion of macro ‘string_u8_litexpr’
  994 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("paint_text_color_blend"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1002:56: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1002:56: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1002:56: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1002:95: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1002:95: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1002:95: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1002:121: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1002:121: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1002:121: note: in expansion of macro ‘string_u8_litexpr’
 1002 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("text_layout_free"), string_u8_litexpr("b32"), string_u8_litexpr(""));
      |                                                                                                                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1007:56: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1007:56: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1007:56: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1007:95: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1007:95: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1007:95: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1007:122: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1007:122: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1007:122: note: in expansion of macro ‘string_u8_litexpr’
 1007 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("draw_text_layout"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                          ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1014:56: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1014:56: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1014:56: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1014:96: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1014:96: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1014:96: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1014:123: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1014:123: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1014:123: note: in expansion of macro ‘string_u8_litexpr’
 1014 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("open_color_picker"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                           ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1019:56: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1019:56: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1019:56: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1019:104: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1019:104: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1019:104: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1019:131: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1019:131: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1019:131: note: in expansion of macro ‘string_u8_litexpr’
 1019 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("animate_in_n_milliseconds"), string_u8_litexpr("void"), string_u8_litexpr(""));
      |                                                                                                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1024:56: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1024:56: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1024:56: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1024:102: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1024:102: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1024:102: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1024:142: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1024:142: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1024:142: note: in expansion of macro ‘string_u8_litexpr’
 1024 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("buffer_find_all_matches"), string_u8_litexpr("String_Match_List"), string_u8_litexpr(""));
      |                                                                                                                                              ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1035:56: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1035:56: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1035:56: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1035:100: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1035:100: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1035:100: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1035:143: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1035:143: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1035:143: note: in expansion of macro ‘string_u8_litexpr’
 1035 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_core_profile_list"), string_u8_litexpr("Profile_Global_List*"), string_u8_litexpr(""));
      |                                                                                                                                               ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1039:56: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1039:56: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1039:56: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1039:109: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1039:109: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1039:109: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/generated/custom_api_constructor.cpp:1039:144: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/generated/custom_api_constructor.cpp:1039:144: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/generated/custom_api_constructor.cpp:1039:144: note: in expansion of macro ‘string_u8_litexpr’
 1039 | API_Call *call = api_call_with_location(arena, result, string_u8_litexpr("get_custom_layer_boundary_docs"), string_u8_litexpr("Doc_Cluster*"), string_u8_litexpr(""));
      |                                                                                                                                                ^~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:99:
./code/4ed_api_parser.cpp: In function ‘String_Const_u8 api_parse__type_name_with_stars(Arena*, String_Const_u8, i32)’:
./code/4ed_api_parser.cpp:75:45: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   75 |         i32 type_full_size = (i32)(type.size) + star_counter;
      |                                             ^
      |                              ----------------
      |                              static_cast<i32> ((type.size))
./code/4ed_api_parser.cpp:76:64: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   76 |         u8 *type_buffer = push_array(arena, u8, type_full_size + 1);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:76:27: note: in expansion of macro ‘push_array’
   76 |         u8 *type_buffer = push_array(arena, u8, type_full_size + 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:76:27: note: in expansion of macro ‘push_array’
   76 |         u8 *type_buffer = push_array(arena, u8, type_full_size + 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:76:27: note: in expansion of macro ‘push_array’
   76 |         u8 *type_buffer = push_array(arena, u8, type_full_size + 1);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_parser.cpp:76:27: note: in expansion of macro ‘push_array’
   76 |         u8 *type_buffer = push_array(arena, u8, type_full_size + 1);
      |                           ^~~~~~~~~~
./code/4ed_api_parser.cpp:78:66: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
   78 |         block_fill_u8(type_buffer + type.size, star_counter, (u8)'*');
      |                                                                  ^~~
      |                                                              -------
      |                                                              static_cast<u8> ('*')
./code/4ed_api_parser.cpp:78:48: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   78 |         block_fill_u8(type_buffer + type.size, star_counter, (u8)'*');
      |                                                ^~~~~~~~~~~~
./code/4ed_api_parser.cpp:80:34: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   80 |         type = SCu8(type_buffer, type_full_size);
      |                                  ^~~~~~~~~~~~~~
./code/4ed_api_parser.cpp: In function ‘void api_parse_add_param(Arena*, API_Param_List*, String_Const_u8, i32, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:88:24: note: in expansion of macro ‘push_array’
   88 |     API_Param *param = push_array(arena, API_Param, 1);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:88:24: note: in expansion of macro ‘push_array’
   88 |     API_Param *param = push_array(arena, API_Param, 1);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:88:24: note: in expansion of macro ‘push_array’
   88 |     API_Param *param = push_array(arena, API_Param, 1);
      |                        ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct API_Param*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_parser.cpp:88:24: note: in expansion of macro ‘push_array’
   88 |     API_Param *param = push_array(arena, API_Param, 1);
      |                        ^~~~~~~~~~
./code/4ed_api_parser.cpp: In function ‘String_Const_u8 api_parse_location(Arena*, String_Const_u8, String_Const_u8, u8*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_api_parser.cpp:134:50: note: in expansion of macro ‘string_expand’
  134 |     return(push_u8_stringf(arena, "%.*s:%d:%d:", string_expand(source_name), line_number, col_number));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_api_parser.cpp:134:50: note: in expansion of macro ‘string_expand’
  134 |     return(push_u8_stringf(arena, "%.*s:%d:%d:", string_expand(source_name), line_number, col_number));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Content* doc_content_push(Arena*, Doc_Content_List*, String_Const_u8, Doc_Content_Emphasis)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:29:28: note: in expansion of macro ‘push_array_zero’
   29 |     Doc_Content *content = push_array_zero(arena, Doc_Content, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:29:28: note: in expansion of macro ‘push_array_zero’
   29 |     Doc_Content *content = push_array_zero(arena, Doc_Content, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:29:28: note: in expansion of macro ‘push_array_zero’
   29 |     Doc_Content *content = push_array_zero(arena, Doc_Content, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Content*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:29:28: note: in expansion of macro ‘push_array_zero’
   29 |     Doc_Content *content = push_array_zero(arena, Doc_Content, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘void doc_code_list_push(Arena*, Doc_Code_Sample_List*, String_Const_u8, Doc_Code_Language)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:45:31: note: in expansion of macro ‘push_array_zero’
   45 |     Doc_Code_Sample *sample = push_array_zero(arena, Doc_Code_Sample, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:45:31: note: in expansion of macro ‘push_array_zero’
   45 |     Doc_Code_Sample *sample = push_array_zero(arena, Doc_Code_Sample, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:45:31: note: in expansion of macro ‘push_array_zero’
   45 |     Doc_Code_Sample *sample = push_array_zero(arena, Doc_Code_Sample, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Code_Sample*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:45:31: note: in expansion of macro ‘push_array_zero’
   45 |     Doc_Code_Sample *sample = push_array_zero(arena, Doc_Code_Sample, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Cluster* new_doc_cluster(Arena*, char*, char*, Doc_Date*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:56:27: note: in expansion of macro ‘push_array_zero’
   56 |     Doc_Cluster *result = push_array_zero(arena, Doc_Cluster, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:56:27: note: in expansion of macro ‘push_array_zero’
   56 |     Doc_Cluster *result = push_array_zero(arena, Doc_Cluster, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:56:27: note: in expansion of macro ‘push_array_zero’
   56 |     Doc_Cluster *result = push_array_zero(arena, Doc_Cluster, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Cluster*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:56:27: note: in expansion of macro ‘push_array_zero’
   56 |     Doc_Cluster *result = push_array_zero(arena, Doc_Cluster, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Page* new_doc_page(Arena*, Doc_Cluster*, char*, char*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:71:24: note: in expansion of macro ‘push_array_zero’
   71 |     Doc_Page *result = push_array_zero(arena, Doc_Page, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:71:24: note: in expansion of macro ‘push_array_zero’
   71 |     Doc_Page *result = push_array_zero(arena, Doc_Page, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:71:24: note: in expansion of macro ‘push_array_zero’
   71 |     Doc_Page *result = push_array_zero(arena, Doc_Page, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Page*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:71:24: note: in expansion of macro ‘push_array_zero’
   71 |     Doc_Page *result = push_array_zero(arena, Doc_Page, 1);
      |                        ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Page* new_doc_page_normal_title(Arena*, Doc_Cluster*, char*, char*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_doc_content_types.cpp:85:77: note: in expansion of macro ‘string_expand’
   85 |     String_Const_u8 full_title = push_u8_stringf(arena, "%s - %.*s", title, string_expand(cluster->title));
      |                                                                             ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_doc_content_types.cpp:85:77: note: in expansion of macro ‘string_expand’
   85 |     String_Const_u8 full_title = push_u8_stringf(arena, "%s - %.*s", title, string_expand(cluster->title));
      |                                                                             ^~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:100:
./code/custom/4coder_doc_content_types.cpp:86:59: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
   86 |     return(new_doc_page(arena, cluster, (char*)full_title.str, name));
      |                                                           ^~~
      |                                         ---------------------
      |                                         reinterpret_cast<char*> (full_title.str)
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Page* new_doc_page_function(Arena*, Doc_Cluster*, String_Const_u8)’:
./code/custom/4coder_doc_content_types.cpp:97:32: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
   97 |     char *c_name = (char*)name.str;
      |                                ^~~
      |                    ---------------
      |                    reinterpret_cast<char*> (name.str)
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Block* new_doc_block(Arena*, Doc_Page*, char*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:103:25: note: in expansion of macro ‘push_array_zero’
  103 |     Doc_Block *result = push_array_zero(arena, Doc_Block, 1);
      |                         ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:103:25: note: in expansion of macro ‘push_array_zero’
  103 |     Doc_Block *result = push_array_zero(arena, Doc_Block, 1);
      |                         ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:103:25: note: in expansion of macro ‘push_array_zero’
  103 |     Doc_Block *result = push_array_zero(arena, Doc_Block, 1);
      |                         ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Block*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:103:25: note: in expansion of macro ‘push_array_zero’
  103 |     Doc_Block *result = push_array_zero(arena, Doc_Block, 1);
      |                         ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘void new_doc_block_jump(Arena*, Doc_Page*, Doc_Block*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:113:27: note: in expansion of macro ‘push_array_zero’
  113 |     Doc_Block_Ptr *node = push_array_zero(arena, Doc_Block_Ptr, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:113:27: note: in expansion of macro ‘push_array_zero’
  113 |     Doc_Block_Ptr *node = push_array_zero(arena, Doc_Block_Ptr, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:113:27: note: in expansion of macro ‘push_array_zero’
  113 |     Doc_Block_Ptr *node = push_array_zero(arena, Doc_Block_Ptr, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Block_Ptr*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:113:27: note: in expansion of macro ‘push_array_zero’
  113 |     Doc_Block_Ptr *node = push_array_zero(arena, Doc_Block_Ptr, 1);
      |                           ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘Doc_Paragraph* new_doc_par(Arena*, Doc_Block*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:121:29: note: in expansion of macro ‘push_array_zero’
  121 |     Doc_Paragraph *result = push_array_zero(arena, Doc_Paragraph, 1);
      |                             ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:121:29: note: in expansion of macro ‘push_array_zero’
  121 |     Doc_Paragraph *result = push_array_zero(arena, Doc_Paragraph, 1);
      |                             ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:121:29: note: in expansion of macro ‘push_array_zero’
  121 |     Doc_Paragraph *result = push_array_zero(arena, Doc_Paragraph, 1);
      |                             ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Paragraph*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:121:29: note: in expansion of macro ‘push_array_zero’
  121 |     Doc_Paragraph *result = push_array_zero(arena, Doc_Paragraph, 1);
      |                             ^~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp: In function ‘void doc_log(Arena*, Doc_Cluster*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:145:20: note: in expansion of macro ‘push_array_zero’
  145 |     Doc_Log *log = push_array_zero(arena, Doc_Log, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:145:20: note: in expansion of macro ‘push_array_zero’
  145 |     Doc_Log *log = push_array_zero(arena, Doc_Log, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:145:20: note: in expansion of macro ‘push_array_zero’
  145 |     Doc_Log *log = push_array_zero(arena, Doc_Log, 1);
      |                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Doc_Log*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/custom/4coder_doc_content_types.cpp:145:20: note: in expansion of macro ‘push_array_zero’
  145 |     Doc_Log *log = push_array_zero(arena, Doc_Log, 1);
      |                    ^~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp: In function ‘Doc_Function make_doc_function(Arena*, Doc_Cluster*, API_Call*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/docs/4ed_doc_helper.cpp:22:46: note: in expansion of macro ‘string_expand’
   22 |                                              string_expand(call->return_type),
      |                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/docs/4ed_doc_helper.cpp:22:46: note: in expansion of macro ‘string_expand’
   22 |                                              string_expand(call->return_type),
      |                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/docs/4ed_doc_helper.cpp:23:46: note: in expansion of macro ‘string_expand’
   23 |                                              string_expand(call->name));
      |                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/docs/4ed_doc_helper.cpp:23:46: note: in expansion of macro ‘string_expand’
   23 |                                              string_expand(call->name));
      |                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:26:18: note: in expansion of macro ‘push_array’
   26 |     u8 *buffer = push_array(arena, u8, indent_size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:26:18: note: in expansion of macro ‘push_array’
   26 |     u8 *buffer = push_array(arena, u8, indent_size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:26:18: note: in expansion of macro ‘push_array’
   26 |     u8 *buffer = push_array(arena, u8, indent_size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/docs/4ed_doc_helper.cpp:26:18: note: in expansion of macro ‘push_array’
   26 |     u8 *buffer = push_array(arena, u8, indent_size);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/docs/4ed_doc_helper.cpp:38:27: note: in expansion of macro ‘string_expand’
   38 |                           string_expand(node->type_name),
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/docs/4ed_doc_helper.cpp:38:27: note: in expansion of macro ‘string_expand’
   38 |                           string_expand(node->type_name),
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/docs/4ed_doc_helper.cpp:39:27: note: in expansion of macro ‘string_expand’
   39 |                           string_expand(node->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/docs/4ed_doc_helper.cpp:39:27: note: in expansion of macro ‘string_expand’
   39 |                           string_expand(node->name));
      |                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/docs/4ed_doc_helper.cpp:42:31: note: in expansion of macro ‘string_expand’
   42 |                               string_expand(indent));
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/docs/4ed_doc_helper.cpp:42:31: note: in expansion of macro ‘string_expand’
   42 |                               string_expand(indent));
      |                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/docs/4ed_doc_helper.cpp:45:36: note: in expansion of macro ‘string_u8_litexpr’
   45 |     string_list_push(arena, &list, string_u8_litexpr(");"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/docs/4ed_doc_helper.cpp:45:36: note: in expansion of macro ‘string_u8_litexpr’
   45 |     string_list_push(arena, &list, string_u8_litexpr(");"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/docs/4ed_doc_helper.cpp:45:36: note: in expansion of macro ‘string_u8_litexpr’
   45 |     string_list_push(arena, &list, string_u8_litexpr(");"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp: In function ‘void doc_function_param(Arena*, Doc_Function*, char*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_doc_content_types.cpp:174:62: note: in definition of macro ‘doc_errorf’
  174 | #define doc_errorf(a,c,f,...) doc_logf((a),(c), "error: " f, __VA_ARGS__)
      |                                                              ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:97:112: note: in expansion of macro ‘string_expand’
   97 |         doc_errorf(arena, func->page->owner, "documentation for non-existant parameter %s in call %.*s", name, string_expand(call->name));
      |                                                                                                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_doc_content_types.cpp:174:62: note: in definition of macro ‘doc_errorf’
  174 | #define doc_errorf(a,c,f,...) doc_logf((a),(c), "error: " f, __VA_ARGS__)
      |                                                              ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:97:112: note: in expansion of macro ‘string_expand’
   97 |         doc_errorf(arena, func->page->owner, "documentation for non-existant parameter %s in call %.*s", name, string_expand(call->name));
      |                                                                                                                ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_doc_content_types.cpp:173:66: note: in definition of macro ‘doc_warningf’
  173 | #define doc_warningf(a,c,f,...) doc_logf((a),(c), "warning: " f, __VA_ARGS__)
      |                                                                  ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:107:110: note: in expansion of macro ‘string_expand’
  107 |             doc_warningf(arena, func->page->owner, "parameters out of order in documentation for call %.*s", string_expand(call->name));
      |                                                                                                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_doc_content_types.cpp:173:66: note: in definition of macro ‘doc_warningf’
  173 | #define doc_warningf(a,c,f,...) doc_logf((a),(c), "warning: " f, __VA_ARGS__)
      |                                                                  ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:107:110: note: in expansion of macro ‘string_expand’
  107 |             doc_warningf(arena, func->page->owner, "parameters out of order in documentation for call %.*s", string_expand(call->name));
      |                                                                                                              ^~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp: In function ‘void doc_api_check_full_coverage(Arena*, Doc_Cluster*, API_Definition*)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_doc_content_types.cpp:174:62: note: in definition of macro ‘doc_errorf’
  174 | #define doc_errorf(a,c,f,...) doc_logf((a),(c), "error: " f, __VA_ARGS__)
      |                                                              ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:168:74: note: in expansion of macro ‘string_expand’
  168 |             doc_errorf(arena, cluster, "missing documentation for %.*s", string_expand(name));
      |                                                                          ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_doc_content_types.cpp:174:62: note: in definition of macro ‘doc_errorf’
  174 | #define doc_errorf(a,c,f,...) doc_logf((a),(c), "error: " f, __VA_ARGS__)
      |                                                              ^~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:168:74: note: in expansion of macro ‘string_expand’
  168 |             doc_errorf(arena, cluster, "missing documentation for %.*s", string_expand(name));
      |                                                                          ^~~~~~~~~~~~~
./code/4ed_coroutine.cpp: In function ‘void coroutine__pass_control(Coroutine*, Coroutine*, Coroutine_State, Coroutine_Pass_Control)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:15:5: note: in expansion of macro ‘Assert’
   15 |     Assert(me->state == CoroutineState_Active);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
In file included from ./code/4ed_app_target.cpp:105:
./code/4ed_coroutine.cpp: In function ‘void coroutine_main(void*)’:
./code/4ed_coroutine.cpp:31:33: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
   31 |     Coroutine *me = (Coroutine*)ptr;
      |                                 ^~~
      |                     ---------------
      |                     static_cast<Coroutine*> (ptr)
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:43:5: note: in expansion of macro ‘Assert’
   43 |     Assert(me->state == CoroutineState_Dead);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:53:9: note: in expansion of macro ‘Assert’
   53 |         Assert(me->type != CoroutineType_Root);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:54:9: note: in expansion of macro ‘Assert’
   54 |         Assert(me->yield_ctx != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:55:9: note: in expansion of macro ‘Assert’
   55 |         Assert(me->func != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:61:9: note: in expansion of macro ‘Assert’
   61 |         Assert(other != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:62:9: note: in expansion of macro ‘Assert’
   62 |         Assert(other->state == CoroutineState_Waiting);
      |         ^~~~~~
./code/4ed_coroutine.cpp: In function ‘Coroutine* coroutine_system_alloc(Coroutine_Group*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘sys->Coroutine_Group::unused’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_coroutine.cpp:108:9: note: in expansion of macro ‘sll_stack_pop’
  108 |         sll_stack_pop(sys->unused);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_coroutine.cpp:111:18: note: in expansion of macro ‘push_array’
  111 |         result = push_array(&sys->arena, Coroutine, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_coroutine.cpp:111:18: note: in expansion of macro ‘push_array’
  111 |         result = push_array(&sys->arena, Coroutine, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_coroutine.cpp:111:18: note: in expansion of macro ‘push_array’
  111 |         result = push_array(&sys->arena, Coroutine, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_coroutine.cpp:111:18: note: in expansion of macro ‘push_array’
  111 |         result = push_array(&sys->arena, Coroutine, 1);
      |                  ^~~~~~~~~~
./code/4ed_coroutine.cpp: In function ‘Coroutine* coroutine_create(Coroutine_Group*, void (*)(Coroutine*))’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:128:5: note: in expansion of macro ‘Assert’
  128 |     Assert(result->state == CoroutineState_Dead);
      |     ^~~~~~
./code/4ed_coroutine.cpp: In function ‘Coroutine* coroutine_run(Coroutine_Group*, Coroutine*, void*, void*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:139:5: note: in expansion of macro ‘Assert’
  139 |     Assert(me != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:140:5: note: in expansion of macro ‘Assert’
  140 |     Assert(me->sys == other->sys);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:141:5: note: in expansion of macro ‘Assert’
  141 |     Assert(other->state == CoroutineState_Dead || other->state == CoroutineState_Inactive);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:144:5: note: in expansion of macro ‘Assert’
  144 |     Assert(me == other->sys->active);
      |     ^~~~~~
./code/4ed_coroutine.cpp: In function ‘void coroutine_yield(Coroutine*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:157:5: note: in expansion of macro ‘Assert’
  157 |     Assert(other != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:158:5: note: in expansion of macro ‘Assert’
  158 |     Assert(me->sys == other->sys);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:159:5: note: in expansion of macro ‘Assert’
  159 |     Assert(other->state == CoroutineState_Waiting);
      |     ^~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void managed_ids_init(Base_Allocator*, Managed_ID_Set*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:15:32: note: in expansion of macro ‘make_table_Data_u64’
   15 |     set->name_to_group_table = make_table_Data_u64(allocator, 20);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:15:32: note: in expansion of macro ‘make_table_Data_u64’
   15 |     set->name_to_group_table = make_table_Data_u64(allocator, 20);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:15:32: note: in expansion of macro ‘make_table_Data_u64’
   15 |     set->name_to_group_table = make_table_Data_u64(allocator, 20);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘Managed_ID managed_ids_group_highest_id(Managed_ID_Set*, String_Const_u8)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_dynamic_variables.cpp:26:54: note: in expansion of macro ‘IntAsPtr’
   26 |         Managed_ID_Group *group = (Managed_ID_Group*)IntAsPtr(val);
      |                                                      ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:26:54: note: in expansion of macro ‘IntAsPtr’
   26 |         Managed_ID_Group *group = (Managed_ID_Group*)IntAsPtr(val);
      |                                                      ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Managed_ID_Group*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:26:54: note: in expansion of macro ‘IntAsPtr’
   26 |         Managed_ID_Group *group = (Managed_ID_Group*)IntAsPtr(val);
      |                                                      ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘Managed_ID managed_ids_declare(Managed_ID_Set*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_dynamic_variables.cpp:41:40: note: in expansion of macro ‘IntAsPtr’
   41 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:41:40: note: in expansion of macro ‘IntAsPtr’
   41 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Managed_ID_Group*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:41:40: note: in expansion of macro ‘IntAsPtr’
   41 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:44:21: note: in expansion of macro ‘push_array’
   44 |             group = push_array(&set->arena, Managed_ID_Group, 1);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:44:21: note: in expansion of macro ‘push_array’
   44 |             group = push_array(&set->arena, Managed_ID_Group, 1);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:44:21: note: in expansion of macro ‘push_array’
   44 |             group = push_array(&set->arena, Managed_ID_Group, 1);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Managed_ID_Group*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_dynamic_variables.cpp:44:21: note: in expansion of macro ‘push_array’
   44 |             group = push_array(&set->arena, Managed_ID_Group, 1);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:46:39: note: in expansion of macro ‘make_table_Data_u64’
   46 |             group->name_to_id_table = make_table_Data_u64(set->arena.base_allocator, 50);
      |                                       ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:46:39: note: in expansion of macro ‘make_table_Data_u64’
   46 |             group->name_to_id_table = make_table_Data_u64(set->arena.base_allocator, 50);
      |                                       ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:46:39: note: in expansion of macro ‘make_table_Data_u64’
   46 |             group->name_to_id_table = make_table_Data_u64(set->arena.base_allocator, 50);
      |                                       ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:48:59: note: in expansion of macro ‘PtrAsInt’
   48 |             table_insert(&set->name_to_group_table, data, PtrAsInt(group));
      |                                                           ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:48:59: note: in expansion of macro ‘PtrAsInt’
   48 |             table_insert(&set->name_to_group_table, data, PtrAsInt(group));
      |                                                           ^~~~~~~~
./code/custom/4coder_base_types.h:252:31: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘long int’ may change the sign of the result [-Wsign-conversion]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                     ~~~~~~~~~~^~~~~~~~~~~
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:48:59: note: in expansion of macro ‘PtrAsInt’
   48 |             table_insert(&set->name_to_group_table, data, PtrAsInt(group));
      |                                                           ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘Managed_ID managed_ids_get(Managed_ID_Set*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_dynamic_variables.cpp:77:40: note: in expansion of macro ‘IntAsPtr’
   77 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:77:40: note: in expansion of macro ‘IntAsPtr’
   77 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Managed_ID_Group*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:77:40: note: in expansion of macro ‘IntAsPtr’
   77 |             group = (Managed_ID_Group*)IntAsPtr(val);
      |                                        ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void dynamic_variable_block_init(Base_Allocator*, Dynamic_Variable_Block*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:96:31: note: in expansion of macro ‘make_table_u64_Data’
   96 |     block->id_to_data_table = make_table_u64_Data(allocator, 20);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:96:31: note: in expansion of macro ‘make_table_u64_Data’
   96 |     block->id_to_data_table = make_table_u64_Data(allocator, 20);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:548:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  548 | #define make_table_u64_Data(a,s) make_table_u64_Data__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:96:31: note: in expansion of macro ‘make_table_u64_Data’
   96 |     block->id_to_data_table = make_table_u64_Data(allocator, 20);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void lifetime_allocator_init(Base_Allocator*, Lifetime_Allocator*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:126:37: note: in expansion of macro ‘make_table_Data_u64’
  126 |     lifetime_allocator->key_table = make_table_Data_u64(base_allocator, 100);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:126:37: note: in expansion of macro ‘make_table_Data_u64’
  126 |     lifetime_allocator->key_table = make_table_Data_u64(base_allocator, 100);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:126:37: note: in expansion of macro ‘make_table_Data_u64’
  126 |     lifetime_allocator->key_table = make_table_Data_u64(base_allocator, 100);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:127:43: note: in expansion of macro ‘make_table_u64_u64’
  127 |     lifetime_allocator->key_check_table = make_table_u64_u64(base_allocator, 100);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:127:43: note: in expansion of macro ‘make_table_u64_u64’
  127 |     lifetime_allocator->key_check_table = make_table_u64_u64(base_allocator, 100);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:127:43: note: in expansion of macro ‘make_table_u64_u64’
  127 |     lifetime_allocator->key_check_table = make_table_u64_u64(base_allocator, 100);
      |                                           ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:128:55: note: in expansion of macro ‘make_table_u64_u64’
  128 |     lifetime_allocator->scope_id_to_scope_ptr_table = make_table_u64_u64(base_allocator, 100);
      |                                                       ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:128:55: note: in expansion of macro ‘make_table_u64_u64’
  128 |     lifetime_allocator->scope_id_to_scope_ptr_table = make_table_u64_u64(base_allocator, 100);
      |                                                       ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:128:55: note: in expansion of macro ‘make_table_u64_u64’
  128 |     lifetime_allocator->scope_id_to_scope_ptr_table = make_table_u64_u64(base_allocator, 100);
      |                                                       ^~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void dynamic_workspace_init(Lifetime_Allocator*, i32, void*, Dynamic_Workspace*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:138:42: note: in expansion of macro ‘make_table_u64_u64’
  138 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:138:42: note: in expansion of macro ‘make_table_u64_u64’
  138 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:138:42: note: in expansion of macro ‘make_table_u64_u64’
  138 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:145:44: note: in expansion of macro ‘PtrAsInt’
  145 |                  workspace->scope_id, (u64)PtrAsInt(workspace));
      |                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:145:44: note: in expansion of macro ‘PtrAsInt’
  145 |                  workspace->scope_id, (u64)PtrAsInt(workspace));
      |                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:145:44: note: in expansion of macro ‘PtrAsInt’
  145 |                  workspace->scope_id, (u64)PtrAsInt(workspace));
      |                                            ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void dynamic_workspace_clear_contents(Dynamic_Workspace*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:162:42: note: in expansion of macro ‘make_table_u64_u64’
  162 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:162:42: note: in expansion of macro ‘make_table_u64_u64’
  162 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:162:42: note: in expansion of macro ‘make_table_u64_u64’
  162 |     workspace->object_id_to_object_ptr = make_table_u64_u64(&workspace->heap_wrapper, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘u32 dynamic_workspace_store_pointer(Dynamic_Workspace*, void*)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:174:64: note: in expansion of macro ‘PtrAsInt’
  174 |     table_insert(&workspace->object_id_to_object_ptr, id, (u64)PtrAsInt(ptr));
      |                                                                ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:174:64: note: in expansion of macro ‘PtrAsInt’
  174 |     table_insert(&workspace->object_id_to_object_ptr, id, (u64)PtrAsInt(ptr));
      |                                                                ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:174:64: note: in expansion of macro ‘PtrAsInt’
  174 |     table_insert(&workspace->object_id_to_object_ptr, id, (u64)PtrAsInt(ptr));
      |                                                                ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void* dynamic_workspace_get_pointer(Dynamic_Workspace*, u32)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_dynamic_variables.cpp:190:18: note: in expansion of macro ‘IntAsPtr’
  190 |         result = IntAsPtr(val);
      |                  ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:190:18: note: in expansion of macro ‘IntAsPtr’
  190 |         result = IntAsPtr(val);
      |                  ^~~~~~~~
In file included from ./code/4ed_app_target.cpp:107:
./code/4ed_dynamic_variables.cpp: In function ‘String_Const_u8 lifetime__key_as_data(Lifetime_Object**, i32)’:
./code/4ed_dynamic_variables.cpp:199:48: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  199 |     return(make_data(members, sizeof(*members)*count));
      |                                                ^~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void lifetime__free_key(Lifetime_Allocator*, Lifetime_Key*, Lifetime_Object*)’:
./code/custom/4coder_base_types.h:326:23: warning: comparison of integer expressions of different signedness: ‘long unsigned int’ and ‘i32’ {aka ‘int’} [-Wsign-compare]
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:327:24: note: in expansion of macro ‘Min’
  327 | #define clamp_top(a,b) Min(a,b)
      |                        ^~~
./code/4ed_dynamic_variables.cpp:226:33: note: in expansion of macro ‘clamp_top’
  226 |             i32 one_past_last = clamp_top(ArrayCount(node->keys), object->key_count - key_i);
      |                                 ^~~~~~~~~
./code/4ed_dynamic_variables.cpp:226:85: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  226 |             i32 one_past_last = clamp_top(ArrayCount(node->keys), object->key_count - key_i);
./code/custom/4coder_base_types.h:326:34: note: in definition of macro ‘Min’
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                                  ^
./code/4ed_dynamic_variables.cpp:226:33: note: in expansion of macro ‘clamp_top’
  226 |             i32 one_past_last = clamp_top(ArrayCount(node->keys), object->key_count - key_i);
      |                                 ^~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:238:9: note: in expansion of macro ‘Assert’
  238 |         Assert(delete_point_node != 0);
      |         ^~~~~~
./code/4ed_dynamic_variables.cpp:240:69: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  240 |         Lifetime_Key *last_key = last_node->keys[(object->key_count - 1) % ArrayCount(last_node->keys)];
      |                                                  ~~~~~~~~~~~~~~~~~~~^~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:241:9: note: in expansion of macro ‘Assert’
  241 |         Assert(last_key != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:254:60: note: in expansion of macro ‘PtrAsInt’
  254 |     table_erase(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:254:60: note: in expansion of macro ‘PtrAsInt’
  254 |     table_erase(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:254:60: note: in expansion of macro ‘PtrAsInt’
  254 |     table_erase(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                            ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘Lifetime_Key_Ref_Node* lifetime__alloc_key_reference_node(Lifetime_Allocator*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:261:5: note: in expansion of macro ‘Assert’
  261 |     Assert(lifetime_allocator != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:264:18: note: in expansion of macro ‘push_array’
  264 |         result = push_array(&lifetime_allocator->node_arena, Lifetime_Key_Ref_Node, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:264:18: note: in expansion of macro ‘push_array’
  264 |         result = push_array(&lifetime_allocator->node_arena, Lifetime_Key_Ref_Node, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:264:18: note: in expansion of macro ‘push_array’
  264 |         result = push_array(&lifetime_allocator->node_arena, Lifetime_Key_Ref_Node, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Lifetime_Key_Ref_Node*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_dynamic_variables.cpp:264:18: note: in expansion of macro ‘push_array’
  264 |         result = push_array(&lifetime_allocator->node_arena, Lifetime_Key_Ref_Node, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘lifetime_allocator->Lifetime_Allocator::free_key_references’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:267:9: note: in expansion of macro ‘sll_stack_pop’
  267 |         sll_stack_pop(lifetime_allocator->free_key_references);
      |         ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void lifetime__object_add_key(Lifetime_Allocator*, Lifetime_Object*, Lifetime_Key*)’:
./code/4ed_dynamic_variables.cpp:280:40: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  280 |         i32 next_insert_slot = object->key_count%ArrayCount(last_node->keys);
      |                                ~~~~~~~~^~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘Lifetime_Object* lifetime_alloc_object(Lifetime_Allocator*, i32, void*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:302:18: note: in expansion of macro ‘push_array’
  302 |         object = push_array(&lifetime_allocator->node_arena, Lifetime_Object, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:302:18: note: in expansion of macro ‘push_array’
  302 |         object = push_array(&lifetime_allocator->node_arena, Lifetime_Object, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:302:18: note: in expansion of macro ‘push_array’
  302 |         object = push_array(&lifetime_allocator->node_arena, Lifetime_Object, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘union Lifetime_Object*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_dynamic_variables.cpp:302:18: note: in expansion of macro ‘push_array’
  302 |         object = push_array(&lifetime_allocator->node_arena, Lifetime_Object, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘lifetime_allocator->Lifetime_Allocator::free_objects’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:305:9: note: in expansion of macro ‘sll_stack_pop’
  305 |         sll_stack_pop(lifetime_allocator->free_objects);
      |         ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void lifetime__object_free_all_keys(Lifetime_Allocator*, Lifetime_Object*)’:
./code/custom/4coder_base_types.h:326:23: warning: comparison of integer expressions of different signedness: ‘long unsigned int’ and ‘i32’ {aka ‘int’} [-Wsign-compare]
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:327:24: note: in expansion of macro ‘Min’
  327 | #define clamp_top(a,b) Min(a,b)
      |                        ^~~
./code/4ed_dynamic_variables.cpp:318:29: note: in expansion of macro ‘clamp_top’
  318 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
      |                             ^~~~~~~~~
./code/4ed_dynamic_variables.cpp:318:90: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  318 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
./code/custom/4coder_base_types.h:326:34: note: in definition of macro ‘Min’
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                                  ^
./code/4ed_dynamic_variables.cpp:318:29: note: in expansion of macro ‘clamp_top’
  318 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
      |                             ^~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘void lifetime__object_clear_all_keys(Lifetime_Allocator*, Lifetime_Object*)’:
./code/custom/4coder_base_types.h:326:23: warning: comparison of integer expressions of different signedness: ‘long unsigned int’ and ‘i32’ {aka ‘int’} [-Wsign-compare]
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                    ~~~^~~~
./code/custom/4coder_base_types.h:327:24: note: in expansion of macro ‘Min’
  327 | #define clamp_top(a,b) Min(a,b)
      |                        ^~~
./code/4ed_dynamic_variables.cpp:337:29: note: in expansion of macro ‘clamp_top’
  337 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
      |                             ^~~~~~~~~
./code/4ed_dynamic_variables.cpp:337:90: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  337 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
./code/custom/4coder_base_types.h:326:34: note: in definition of macro ‘Min’
  326 | #define Min(a,b) (((a)<(b))?(a):(b))
      |                                  ^
./code/4ed_dynamic_variables.cpp:337:29: note: in expansion of macro ‘clamp_top’
  337 |         i32 one_past_last = clamp_top(ArrayCount(node->keys), lifetime_object->key_count - key_i);
      |                             ^~~~~~~~~
./code/4ed_dynamic_variables.cpp:332:53: warning: unused parameter ‘lifetime_allocator’ [-Wunused-parameter]
  332 | lifetime__object_clear_all_keys(Lifetime_Allocator *lifetime_allocator, Lifetime_Object *lifetime_object){
      |                                 ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘i32 lifetime_sort_and_dedup_object_set(Lifetime_Object**, i32)’:
./code/4ed_dynamic_variables.cpp:395:39: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  395 |     return((i32)(ptr_write - ptr_array));
      |                                       ^
      |            -----
      |            static_cast<i32> (          )
./code/4ed_dynamic_variables.cpp: In function ‘Lifetime_Key* lifetime_get_or_create_intersection_key(Lifetime_Allocator*, Lifetime_Object**, i32)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_dynamic_variables.cpp:406:35: note: in expansion of macro ‘IntAsPtr’
  406 |             return((Lifetime_Key*)IntAsPtr(val));
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:406:35: note: in expansion of macro ‘IntAsPtr’
  406 |             return((Lifetime_Key*)IntAsPtr(val));
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Lifetime_Key*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_dynamic_variables.cpp:406:35: note: in expansion of macro ‘IntAsPtr’
  406 |             return((Lifetime_Key*)IntAsPtr(val));
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:413:19: note: in expansion of macro ‘push_array’
  413 |         new_key = push_array(&lifetime_allocator->node_arena, Lifetime_Key, 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:413:19: note: in expansion of macro ‘push_array’
  413 |         new_key = push_array(&lifetime_allocator->node_arena, Lifetime_Key, 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:413:19: note: in expansion of macro ‘push_array’
  413 |         new_key = push_array(&lifetime_allocator->node_arena, Lifetime_Key, 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Lifetime_Key*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_dynamic_variables.cpp:413:19: note: in expansion of macro ‘push_array’
  413 |         new_key = push_array(&lifetime_allocator->node_arena, Lifetime_Key, 1);
      |                   ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘lifetime_allocator->Lifetime_Allocator::free_keys’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:416:9: note: in expansion of macro ‘sll_stack_pop’
  416 |         sll_stack_pop(lifetime_allocator->free_keys);
      |         ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:428:52: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  428 |     u64 new_memory_size = sizeof(Lifetime_Object*)*count;
      |                                                    ^~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:429:34: note: in expansion of macro ‘base_allocate’
  429 |     String_Const_u8 new_memory = base_allocate(lifetime_allocator->allocator, new_memory_size);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:429:34: note: in expansion of macro ‘base_allocate’
  429 |     String_Const_u8 new_memory = base_allocate(lifetime_allocator->allocator, new_memory_size);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:429:34: note: in expansion of macro ‘base_allocate’
  429 |     String_Const_u8 new_memory = base_allocate(lifetime_allocator->allocator, new_memory_size);
      |                                  ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:430:54: warning: use of old-style cast to ‘union Lifetime_Object**’ [-Wold-style-cast]
  430 |     new_key->members = (Lifetime_Object**)new_memory.str;
      |                                                      ^~~
      |                        -
      |                        reinterpret_cast< -
      |                                          > (            )
./code/4ed_dynamic_variables.cpp:431:66: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  431 |     block_copy_dynamic_array(new_key->members, object_ptr_array, count);
./code/custom/4coder_base_types.cpp:267:76: note: in definition of macro ‘block_copy_dynamic_array’
  267 | #define block_copy_dynamic_array(d,s,c) block_copy((d), (s), sizeof(*(d))*(c))
      |                                                                            ^
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:439:32: note: in expansion of macro ‘PtrAsInt’
  439 |         u64 new_key_val = (u64)PtrAsInt(new_key);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:439:32: note: in expansion of macro ‘PtrAsInt’
  439 |         u64 new_key_val = (u64)PtrAsInt(new_key);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:439:32: note: in expansion of macro ‘PtrAsInt’
  439 |         u64 new_key_val = (u64)PtrAsInt(new_key);
      |                                ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘b32 lifetime_key_check(Lifetime_Allocator*, Lifetime_Key*)’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:449:83: note: in expansion of macro ‘PtrAsInt’
  449 |     Table_Lookup lookup = table_lookup(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                                                   ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:449:83: note: in expansion of macro ‘PtrAsInt’
  449 |     Table_Lookup lookup = table_lookup(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                                                   ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_dynamic_variables.cpp:449:83: note: in expansion of macro ‘PtrAsInt’
  449 |     Table_Lookup lookup = table_lookup(&lifetime_allocator->key_check_table, (u64)PtrAsInt(key));
      |                                                                                   ^~~~~~~~
./code/4ed_dynamic_variables.cpp: In function ‘u8* get_dynamic_object_memory_ptr(Managed_Object_Standard_Header*)’:
./code/4ed_dynamic_variables.cpp:464:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  464 |                 ptr = ((u8*)header) + managed_header_type_sizes[header->type];
      |                             ^~~~~~
      |                        -----------
      |                        reinterpret_cast<u8*> (header)
./code/4ed_dynamic_variables.cpp:460:16: warning: switch missing default case [-Wswitch-default]
  460 |         switch (header->type){
      |                ^
./code/4ed_dynamic_variables.cpp: In function ‘Managed_Object managed_object_alloc_managed_memory(Dynamic_Workspace*, i32, i32, void**)’:
./code/4ed_dynamic_variables.cpp:474:106: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  474 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, sizeof(Managed_Memory_Header) + size);
      |                                                                                                          ^~~~
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:474:34: note: in expansion of macro ‘base_allocate’
  474 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, sizeof(Managed_Memory_Header) + size);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:474:34: note: in expansion of macro ‘base_allocate’
  474 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, sizeof(Managed_Memory_Header) + size);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:474:34: note: in expansion of macro ‘base_allocate’
  474 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, sizeof(Managed_Memory_Header) + size);
      |                                  ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:476:61: warning: use of old-style cast to ‘struct Managed_Memory_Header*’ [-Wold-style-cast]
  476 |     Managed_Memory_Header *header = (Managed_Memory_Header*)ptr;
      |                                                             ^~~
      |                                     -
      |                                     static_cast<           -
      |                                                            > ( )
./code/4ed_dynamic_variables.cpp:478:36: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  478 |     header->std_header.item_size = item_size;
      |                                    ^~~~~~~~~
./code/4ed_dynamic_variables.cpp:479:32: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  479 |     header->std_header.count = count;
      |                                ^~~~~
./code/4ed_dynamic_variables.cpp:484:29: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  484 |     return(((u64)workspace->scope_id << 32) | (u64)id);
      |                             ^~~~~~~~
      |             -----
      |             static_cast<u64> (      )
./code/4ed_dynamic_variables.cpp:484:52: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  484 |     return(((u64)workspace->scope_id << 32) | (u64)id);
      |                                                    ^~
      |                                               -------
      |                                               static_cast<u64> (id)
./code/4ed_dynamic_variables.cpp: In function ‘Managed_Object managed_object_alloc_buffer_markers(Dynamic_Workspace*, Buffer_ID, i32, Marker**)’:
./code/4ed_dynamic_variables.cpp:489:16: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  489 |     i32 size = count*sizeof(Marker);
      |                ^~~~~
./code/4ed_dynamic_variables.cpp:490:74: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  490 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, size + sizeof(Managed_Buffer_Markers_Header));
      |                                                                          ^~~~
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:490:34: note: in expansion of macro ‘base_allocate’
  490 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, size + sizeof(Managed_Buffer_Markers_Header));
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:490:34: note: in expansion of macro ‘base_allocate’
  490 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, size + sizeof(Managed_Buffer_Markers_Header));
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:490:34: note: in expansion of macro ‘base_allocate’
  490 |     String_Const_u8 new_memory = base_allocate(&workspace->heap_wrapper, size + sizeof(Managed_Buffer_Markers_Header));
      |                                  ^~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:492:77: warning: use of old-style cast to ‘struct Managed_Buffer_Markers_Header*’ [-Wold-style-cast]
  492 |     Managed_Buffer_Markers_Header *header = (Managed_Buffer_Markers_Header*)ptr;
      |                                                                             ^~~
      |                                             -
      |                                             static_cast<                   -
      |                                                                            > ( )
./code/4ed_dynamic_variables.cpp:495:32: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  495 |     header->std_header.count = count;
      |                                ^~~~~
./code/4ed_dynamic_variables.cpp:501:82: warning: use of old-style cast to ‘struct Marker*’ [-Wold-style-cast]
  501 |         *markers_out = (Marker*)get_dynamic_object_memory_ptr(&header->std_header);
      |                                                                                  ^
      |                        ---------
      |                        reinterpret_cast<Marker*> (                                )
./code/4ed_dynamic_variables.cpp:504:29: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  504 |     return(((u64)workspace->scope_id << 32) | (u64)id);
      |                             ^~~~~~~~
      |             -----
      |             static_cast<u64> (      )
./code/4ed_dynamic_variables.cpp:504:52: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  504 |     return(((u64)workspace->scope_id << 32) | (u64)id);
      |                                                    ^~
      |                                               -------
      |                                               static_cast<u64> (id)
./code/4ed_dynamic_variables.cpp: In function ‘b32 managed_object_free(Dynamic_Workspace*, Managed_Object)’:
./code/4ed_dynamic_variables.cpp:511:73: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  511 |     u8 *object_ptr = (u8*)dynamic_workspace_get_pointer(workspace, lo_id);
      |                                                                         ^
      |                      -----
      |                      static_cast<u8*> (                                  )
./code/4ed_dynamic_variables.cpp:513:59: warning: use of old-style cast to ‘Managed_Object_Type*’ {aka ‘int*’} [-Wold-style-cast]
  513 |         Managed_Object_Type *type = (Managed_Object_Type*)object_ptr;
      |                                                           ^~~~~~~~~~
      |                                     -
      |                                     reinterpret_cast<    -
      |                                                          > (        )
./code/4ed_dynamic_variables.cpp:517:89: warning: use of old-style cast to ‘struct Managed_Buffer_Markers_Header*’ [-Wold-style-cast]
  517 |                 Managed_Buffer_Markers_Header *header = (Managed_Buffer_Markers_Header*)object_ptr;
      |                                                                                         ^~~~~~~~~~
      |                                                         -
      |                                                         reinterpret_cast<              -
      |                                                                                        > (        )
./code/4ed_dynamic_variables.cpp:518:28: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  518 |                 workspace->total_marker_count -= header->std_header.count;
      |                 ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:518:47: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  518 |                 workspace->total_marker_count -= header->std_header.count;
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_dynamic_variables.cpp:514:16: warning: switch missing default case [-Wswitch-default]
  514 |         switch (*type){
      |                ^
./code/4ed_font_set.cpp: In function ‘Face_ID font_set__alloc_face_id(Font_Set*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘set->Font_Set::free_ids’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_font_set.cpp:18:9: note: in expansion of macro ‘sll_stack_pop’
   18 |         sll_stack_pop(set->free_ids);
      |         ^~~~~~~~~~~~~
./code/4ed_font_set.cpp: In function ‘void font_set__free_face_id(Font_Set*, Face_ID)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:36:20: note: in expansion of macro ‘push_array’
   36 |             node = push_array(&set->arena, Font_Face_ID_Node, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:36:20: note: in expansion of macro ‘push_array’
   36 |             node = push_array(&set->arena, Font_Face_ID_Node, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:36:20: note: in expansion of macro ‘push_array’
   36 |             node = push_array(&set->arena, Font_Face_ID_Node, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Font_Face_ID_Node*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_font_set.cpp:36:20: note: in expansion of macro ‘push_array’
   36 |             node = push_array(&set->arena, Font_Face_ID_Node, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘set->Font_Set::free_id_nodes’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_font_set.cpp:40:13: note: in expansion of macro ‘sll_stack_pop’
   40 |             sll_stack_pop(set->free_id_nodes);
      |             ^~~~~~~~~~~~~
./code/4ed_font_set.cpp: In function ‘Font_Face_Slot* font_set__alloc_face_slot(Font_Set*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:51:18: note: in expansion of macro ‘push_array’
   51 |         result = push_array(&set->arena, Font_Face_Slot, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:51:18: note: in expansion of macro ‘push_array’
   51 |         result = push_array(&set->arena, Font_Face_Slot, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:51:18: note: in expansion of macro ‘push_array’
   51 |         result = push_array(&set->arena, Font_Face_Slot, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘union Font_Face_Slot*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_font_set.cpp:51:18: note: in expansion of macro ‘push_array’
   51 |         result = push_array(&set->arena, Font_Face_Slot, 1);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘set->Font_Set::free_face_slots’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_font_set.cpp:55:9: note: in expansion of macro ‘sll_stack_pop’
   55 |         sll_stack_pop(set->free_face_slots);
      |         ^~~~~~~~~~~~~
./code/4ed_font_set.cpp: In function ‘void font_set_init(Font_Set*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:75:29: note: in expansion of macro ‘make_table_u64_u64’
   75 |     set->id_to_slot_table = make_table_u64_u64(set->arena.base_allocator, 40);
      |                             ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:75:29: note: in expansion of macro ‘make_table_u64_u64’
   75 |     set->id_to_slot_table = make_table_u64_u64(set->arena.base_allocator, 40);
      |                             ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_font_set.cpp:75:29: note: in expansion of macro ‘make_table_u64_u64’
   75 |     set->id_to_slot_table = make_table_u64_u64(set->arena.base_allocator, 40);
      |                             ^~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:108:
./code/4ed_font_set.cpp: In function ‘Face* font_set_new_face(Font_Set*, Face_Description*)’:
./code/4ed_font_set.cpp:89:59: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   89 |         table_insert(&set->id_to_slot_table, new_id, (u64)slot);
      |                                                           ^~~~
      |                                                      ---------
      |                                                      reinterpret_cast<u64> (slot)
./code/4ed_font_set.cpp: In function ‘Font_Face_Slot* font_set__get_face_slot(Font_Set*, Face_ID)’:
./code/4ed_font_set.cpp:102:35: warning: use of old-style cast to ‘union Font_Face_Slot*’ [-Wold-style-cast]
  102 |         result = (Font_Face_Slot*)slot_ptr_u64;
      |                                   ^~~~~~~~~~~~
      |                  -----------------------------
      |                  reinterpret_cast<Font_Face_Slot*> (slot_ptr_u64)
In file included from ./code/4ed_app_target.cpp:109:
./code/4ed_translation.cpp: In function ‘void translating_generate_emits(Translation_State*, Translation_Emit_Rule, u8, u32, Translation_Emits*)’:
./code/4ed_translation.cpp:150:43: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  150 |             emits_out->steps[0].i = tran->fill_start_i;
      |                                     ~~~~~~^~~~~~~~~~~~
./code/4ed_translation.cpp:160:60: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  160 |                 emits_out->steps[j].i = tran->fill_start_i + j;
      |                                         ~~~~~~~~~~~~~~~~~~~^~~
./code/4ed_translation.cpp:184:57: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
  184 |             emits_out->steps[emits_out->step_count].i = i;
      |                                                         ^
./code/4ed_translation.cpp:171:12: warning: switch missing default case [-Wswitch-default]
  171 |     switch (emit_rule.last_byte_handler){
      |            ^
./code/4ed_render_target.cpp: In function ‘void draw__begin_new_group(Render_Target*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:21:17: note: in expansion of macro ‘push_array_zero’
   21 |         group = push_array_zero(&target->arena, Render_Group, 1);
      |                 ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:21:17: note: in expansion of macro ‘push_array_zero’
   21 |         group = push_array_zero(&target->arena, Render_Group, 1);
      |                 ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:21:17: note: in expansion of macro ‘push_array_zero’
   21 |         group = push_array_zero(&target->arena, Render_Group, 1);
      |                 ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Render_Group*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_render_target.cpp:21:17: note: in expansion of macro ‘push_array_zero’
   21 |         group = push_array_zero(&target->arena, Render_Group, 1);
      |                 ^~~~~~~~~~~~~~~
./code/4ed_render_target.cpp: In function ‘Render_Vertex_Array_Node* draw__extend_group_vertex_memory(Arena*, Render_Vertex_List*, i32)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:30:38: note: in expansion of macro ‘push_array_zero’
   30 |     Render_Vertex_Array_Node *node = push_array_zero(arena, Render_Vertex_Array_Node, 1);
      |                                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:30:38: note: in expansion of macro ‘push_array_zero’
   30 |     Render_Vertex_Array_Node *node = push_array_zero(arena, Render_Vertex_Array_Node, 1);
      |                                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:30:38: note: in expansion of macro ‘push_array_zero’
   30 |     Render_Vertex_Array_Node *node = push_array_zero(arena, Render_Vertex_Array_Node, 1);
      |                                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Render_Vertex_Array_Node*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_render_target.cpp:30:38: note: in expansion of macro ‘push_array_zero’
   30 |     Render_Vertex_Array_Node *node = push_array_zero(arena, Render_Vertex_Array_Node, 1);
      |                                      ^~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:32:55: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   32 |     node->vertices = push_array(arena, Render_Vertex, size);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:32:22: note: in expansion of macro ‘push_array’
   32 |     node->vertices = push_array(arena, Render_Vertex, size);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:32:22: note: in expansion of macro ‘push_array’
   32 |     node->vertices = push_array(arena, Render_Vertex, size);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:32:22: note: in expansion of macro ‘push_array’
   32 |     node->vertices = push_array(arena, Render_Vertex, size);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Render_Vertex*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_render_target.cpp:32:22: note: in expansion of macro ‘push_array’
   32 |     node->vertices = push_array(arena, Render_Vertex, size);
      |                      ^~~~~~~~~~
./code/4ed_render_target.cpp: In function ‘void draw__write_vertices_in_current_group(Render_Target*, Render_Vertex*, i32)’:
./code/4ed_render_target.cpp:60:61: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   60 |             block_copy_dynamic_array(tail_vertex, vertices, transfer_count);
./code/custom/4coder_base_types.cpp:267:76: note: in definition of macro ‘block_copy_dynamic_array’
  267 | #define block_copy_dynamic_array(d,s,c) block_copy((d), (s), sizeof(*(d))*(c))
      |                                                                            ^
./code/4ed_render_target.cpp:72:76: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   72 |             block_copy_dynamic_array(memory->vertices, vertices_left_over, count_left_over);
./code/custom/4coder_base_types.cpp:267:76: note: in definition of macro ‘block_copy_dynamic_array’
  267 | #define block_copy_dynamic_array(d,s,c) block_copy((d), (s), sizeof(*(d))*(c))
      |                                                                            ^
In file included from ./code/4ed_app_target.cpp:110:
./code/4ed_render_target.cpp: In function ‘void begin_frame(Render_Target*, void*)’:
./code/4ed_render_target.cpp:116:56: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  116 |     target->current_clip_box = Rf32(0, 0, (f32)target->width, (f32)target->height);
      |                                                        ^~~~~
      |                                           -----
      |                                           static_cast<f32> ()
./code/4ed_render_target.cpp:116:76: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  116 |     target->current_clip_box = Rf32(0, 0, (f32)target->width, (f32)target->height);
      |                                                                            ^~~~~~
      |                                                               -----
      |                                                               static_cast<f32> ( )
./code/4ed_render_target.cpp: In function ‘void end_render_section(Render_Target*)’:
./code/4ed_render_target.cpp:128:35: warning: unused parameter ‘target’ [-Wunused-parameter]
  128 | end_render_section(Render_Target *target){
      |                    ~~~~~~~~~~~~~~~^~~~~~
./code/4ed_render_target.cpp: In function ‘void draw_rectangle_outline(Render_Target*, Rect_f32, f32, f32, u32)’:
./code/4ed_render_target.cpp:150:23: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  150 |     for (i32 i = 0; i < ArrayCount(vertices); i += 1){
./code/4ed_render_target.cpp: In function ‘void draw_font_glyph(Render_Target*, Face*, u32, Vec2_f32, ARGB_Color, Glyph_Flag, Vec2_f32)’:
./code/4ed_render_target.cpp:238:23: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  238 |     for (i32 i = 0; i < ArrayCount(vertices); i += 1){
./code/4ed_render_target.cpp:175:14: warning: variable ‘texture_dim’ set but not used [-Wunused-but-set-variable]
  175 |     Vec3_f32 texture_dim = face->texture_dim;
      |              ^~~~~~~~~~~
./code/4ed_render_target.cpp:166:46: warning: unused parameter ‘flags’ [-Wunused-parameter]
  166 |                 ARGB_Color color, Glyph_Flag flags, Vec2_f32 x_axis){
      |                                   ~~~~~~~~~~~^~~~~
./code/4ed_render_target.cpp: In function ‘f32 draw_string(Render_Target*, Face*, String_Const_u8, Vec2_f32, ARGB_Color, u32, Vec2_f32)’:
./code/4ed_render_target.cpp:265:31: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  265 |         u8 *str = (u8*)string.str;
      |                               ^~~
      |                   ---------------
      |                   const_cast<u8*> (string.str)
./code/4ed_render_target.cpp:272:72: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  272 |             translating_fully_process_byte(&tran, *str, i, (i32)string.size, &emits);
      |                                                                        ^~~~
      |                                                            ----------------
      |                                                            static_cast<i32> (string.size)
./code/4ed_render_target.cpp:272:60: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  272 |             translating_fully_process_byte(&tran, *str, i, (i32)string.size, &emits);
      |                                                            ^~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:292:43: warning: use of old-style cast to ‘u8’ {aka ‘unsigned char’} [-Wold-style-cast]
  292 |                     u8 n = (u8)(step.value);
      |                                           ^
      |                            ----------------
      |                            static_cast<u8> ((step.value))
./code/4ed_app_models.cpp: In function ‘void models_push_view_command_function(Models*, View_ID, void (*)(Application_Links*))’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:16:16: note: in expansion of macro ‘push_array’
   16 |         node = push_array(models->arena, Model_View_Command_Function, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:16:16: note: in expansion of macro ‘push_array’
   16 |         node = push_array(models->arena, Model_View_Command_Function, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:16:16: note: in expansion of macro ‘push_array’
   16 |         node = push_array(models->arena, Model_View_Command_Function, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Model_View_Command_Function*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_app_models.cpp:16:16: note: in expansion of macro ‘push_array’
   16 |         node = push_array(models->arena, Model_View_Command_Function, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘models->Models::free_view_cmd_funcs’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_app_models.cpp:19:9: note: in expansion of macro ‘sll_stack_pop’
   19 |         sll_stack_pop(models->free_view_cmd_funcs);
      |         ^~~~~~~~~~~~~
./code/4ed_app_models.cpp: In function ‘void models_push_virtual_event(Models*, Input_Event*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:43:16: note: in expansion of macro ‘push_array’
   43 |         node = push_array(&models->virtual_event_arena, Model_Input_Event_Node, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:43:16: note: in expansion of macro ‘push_array’
   43 |         node = push_array(&models->virtual_event_arena, Model_Input_Event_Node, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:43:16: note: in expansion of macro ‘push_array’
   43 |         node = push_array(&models->virtual_event_arena, Model_Input_Event_Node, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Model_Input_Event_Node*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_app_models.cpp:43:16: note: in expansion of macro ‘push_array’
   43 |         node = push_array(&models->virtual_event_arena, Model_Input_Event_Node, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘models->Models::free_virtual_event’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_app_models.cpp:46:9: note: in expansion of macro ‘sll_stack_pop’
   46 |         sll_stack_pop(models->free_virtual_event);
      |         ^~~~~~~~~~~~~
./code/4ed_app_models.cpp: In function ‘void models_push_wind_down(Models*, Coroutine*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘models->Models::free_wind_downs’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_app_models.cpp:68:9: note: in expansion of macro ‘sll_stack_pop’
   68 |         sll_stack_pop(models->free_wind_downs);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:71:16: note: in expansion of macro ‘push_array’
   71 |         node = push_array(models->arena, Model_Wind_Down_Co, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:71:16: note: in expansion of macro ‘push_array’
   71 |         node = push_array(models->arena, Model_Wind_Down_Co, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_app_models.cpp:71:16: note: in expansion of macro ‘push_array’
   71 |         node = push_array(models->arena, Model_Wind_Down_Co, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Model_Wind_Down_Co*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_app_models.cpp:71:16: note: in expansion of macro ‘push_array’
   71 |         node = push_array(models->arena, Model_Wind_Down_Co, 1);
      |                ^~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:112:
./code/4ed_buffer.cpp: In function ‘void buffer_update_cursors_lean_l(Cursor_With_Index*, i32, Batch_Edit*)’:
./code/4ed_buffer.cpp:120:36: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  120 |         i64 len = batch->edit.text.size;
      |                   ~~~~~~~~~~~~~~~~~^~~~
./code/4ed_buffer.cpp: In function ‘void buffer_update_cursors_lean_r(Cursor_With_Index*, i32, Batch_Edit*)’:
./code/4ed_buffer.cpp:151:36: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  151 |         i64 len = batch->edit.text.size;
      |                   ~~~~~~~~~~~~~~~~~^~~~
./code/4ed_buffer.cpp: In function ‘void buffer_init(Gap_Buffer*, u8*, u64, Base_Allocator*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:197:30: note: in expansion of macro ‘base_allocate’
  197 |     String_Const_u8 memory = base_allocate(allocator, capacity);
      |                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:197:30: note: in expansion of macro ‘base_allocate’
  197 |     String_Const_u8 memory = base_allocate(allocator, capacity);
      |                              ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:197:30: note: in expansion of macro ‘base_allocate’
  197 |     String_Const_u8 memory = base_allocate(allocator, capacity);
      |                              ^~~~~~~~~~~~~
./code/4ed_buffer.cpp:198:32: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  198 |     buffer->data = (u8*)memory.str;
      |                                ^~~
      |                    ---------------
      |                    const_cast<u8*> (memory.str)
./code/4ed_buffer.cpp:199:25: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  199 |     buffer->size1 = size/2;
      |                     ~~~~^~
./code/4ed_buffer.cpp:200:33: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  200 |     buffer->gap_size = capacity - size;
      |                        ~~~~~~~~~^~~~~~
./code/4ed_buffer.cpp:201:36: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  201 |     buffer->size2 = size - buffer->size1;
      |                            ~~~~~~~~^~~~~
./code/4ed_buffer.cpp:201:26: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  201 |     buffer->size2 = size - buffer->size1;
      |                     ~~~~~^~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:202:19: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  202 |     buffer->max = capacity;
      |                   ^~~~~~~~
./code/4ed_buffer.cpp:204:44: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  204 |     block_copy(buffer->data, data, buffer->size1);
      |                                    ~~~~~~~~^~~~~
./code/4ed_buffer.cpp:205:95: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  205 |     block_copy(buffer->data + buffer->size1 + buffer->gap_size, data + buffer->size1, buffer->size2);
      |                                                                                       ~~~~~~~~^~~~~
./code/4ed_buffer.cpp: In function ‘b32 buffer_replace_range(Gap_Buffer*, Range_i64, String_Const_u8, i64)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:211:5: note: in expansion of macro ‘Assert’
  211 |     Assert(0 <= range.start);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:212:5: note: in expansion of macro ‘Assert’
  212 |     Assert(range.start <= range.end);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:213:5: note: in expansion of macro ‘Assert’
  213 |     Assert(range.end <= size);
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:218:43: note: in expansion of macro ‘base_allocate’
  218 |         String_Const_u8 new_memory_data = base_allocate(buffer->allocator, new_max);
      |                                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:218:43: note: in expansion of macro ‘base_allocate’
  218 |         String_Const_u8 new_memory_data = base_allocate(buffer->allocator, new_max);
      |                                           ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:218:43: note: in expansion of macro ‘base_allocate’
  218 |         String_Const_u8 new_memory_data = base_allocate(buffer->allocator, new_max);
      |                                           ^~~~~~~~~~~~~
./code/4ed_buffer.cpp:218:76: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  218 |         String_Const_u8 new_memory_data = base_allocate(buffer->allocator, new_max);
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/4ed_buffer.cpp:219:47: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  219 |         u8 *new_memory = (u8*)new_memory_data.str;
      |                                               ^~~
      |                          -----
      |                          const_cast<u8*> (       )
./code/4ed_buffer.cpp:220:54: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  220 |         block_copy(new_memory, buffer->data, buffer->size1);
      |                                              ~~~~~~~~^~~~~
./code/4ed_buffer.cpp:222:28: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  222 |                    buffer->size2);
      |                    ~~~~~~~~^~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:229:5: note: in expansion of macro ‘Assert’
  229 |     Assert(shift_amount + size <= buffer->max);
      |     ^~~~~~
./code/4ed_buffer.cpp:237:20: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  237 |                    move_size);
      |                    ^~~~~~~~~
./code/4ed_buffer.cpp:245:20: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  245 |                    move_size);
      |                    ^~~~~~~~~
./code/4ed_buffer.cpp:252:27: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  252 |     buffer->size1 = range.start + text.size;
      |                     ~~~~~~^~~~~
./code/4ed_buffer.cpp:252:33: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  252 |     buffer->size1 = range.start + text.size;
      |                     ~~~~~~~~~~~~^~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:255:5: note: in expansion of macro ‘Assert’
  255 |     Assert(buffer->size1 + buffer->size2 == size + shift_amount);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:256:5: note: in expansion of macro ‘Assert’
  256 |     Assert(buffer->size1 + buffer->gap_size + buffer->size2 == buffer->max);
      |     ^~~~~~
./code/4ed_buffer.cpp: In function ‘List_String_Const_u8 buffer_get_chunks(Arena*, Gap_Buffer*)’:
./code/4ed_buffer.cpp:267:67: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  267 |         string_list_push(arena, &list, SCu8(buffer->data, buffer->size1));
      |                                                           ~~~~~~~~^~~~~
./code/4ed_buffer.cpp:270:39: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  270 |         u64 gap_2_pos = buffer->size1 + buffer->gap_size;
      |                         ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:271:79: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  271 |         string_list_push(arena, &list, SCu8(buffer->data + gap_2_pos, buffer->size2));
      |                                                                       ~~~~~~~~^~~~~
./code/4ed_buffer.cpp: In function ‘void buffer_chunks_clamp(List_String_Const_u8*, Range_i64)’:
./code/4ed_buffer.cpp:284:40: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  284 |         Range_i64 node_range = Ii64(p, p + node->string.size);
      |                                        ^
./code/4ed_buffer.cpp:284:42: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  284 |         Range_i64 node_range = Ii64(p, p + node->string.size);
      |                                        ~~^~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:288:61: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  288 |             String_Const_u8 s = string_prefix(node->string, one_past_last);
      |                                                             ^~~~~~~~~~~~~
./code/4ed_buffer.cpp:289:43: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  289 |             node->string = string_skip(s, first);
      |                                           ^~~~~
./code/4ed_buffer.cpp: In function ‘String_Const_u8 buffer_eol_convert_out(Arena*, Gap_Buffer*, Range_i64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:311:18: note: in expansion of macro ‘push_array’
  311 |     u8 *memory = push_array(arena, u8, cap);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:311:18: note: in expansion of macro ‘push_array’
  311 |     u8 *memory = push_array(arena, u8, cap);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:311:18: note: in expansion of macro ‘push_array’
  311 |     u8 *memory = push_array(arena, u8, cap);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_buffer.cpp:311:18: note: in expansion of macro ‘push_array’
  311 |     u8 *memory = push_array(arena, u8, cap);
      |                  ^~~~~~~~~~
./code/4ed_buffer.cpp:332:37: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘long int’ may change the sign of the result [-Wsign-conversion]
  332 |     linalloc_pop(arena, (memory_opl - ptr));
      |                         ~~~~~~~~~~~~^~~~~~
./code/4ed_buffer.cpp: In function ‘void buffer_starts__ensure_max_size(Gap_Buffer*, i64)’:
./code/4ed_buffer.cpp:367:96: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  367 |         String_Const_u8 memory = base_allocate(buffer->allocator, sizeof(*buffer->line_starts)*new_max);
      |                                                                                                ^~~~~~~
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:367:34: note: in expansion of macro ‘base_allocate’
  367 |         String_Const_u8 memory = base_allocate(buffer->allocator, sizeof(*buffer->line_starts)*new_max);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:367:34: note: in expansion of macro ‘base_allocate’
  367 |         String_Const_u8 memory = base_allocate(buffer->allocator, sizeof(*buffer->line_starts)*new_max);
      |                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:367:34: note: in expansion of macro ‘base_allocate’
  367 |         String_Const_u8 memory = base_allocate(buffer->allocator, sizeof(*buffer->line_starts)*new_max);
      |                                  ^~~~~~~~~~~~~
./code/4ed_buffer.cpp:368:45: warning: use of old-style cast to ‘i64*’ {aka ‘long int*’} [-Wold-style-cast]
  368 |         i64 *new_line_starts = (i64*)memory.str;
      |                                             ^~~
      |                                ----------------
      |                                reinterpret_cast<i64*> (memory.str)
./code/4ed_buffer.cpp:369:80: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  369 |         block_copy_dynamic_array(new_line_starts, buffer->line_starts, buffer->line_start_count);
./code/custom/4coder_base_types.cpp:267:76: note: in definition of macro ‘block_copy_dynamic_array’
  267 | #define block_copy_dynamic_array(d,s,c) block_copy((d), (s), sizeof(*(d))*(c))
      |                                                                            ^
./code/4ed_buffer.cpp: At global scope:
./code/4ed_buffer.cpp:435:1: warning: no previous declaration for ‘Line_Move* push_line_move(Arena*, Line_Move*, i64, i64, i64, i64)’ [-Wmissing-declarations]
  435 | push_line_move(Arena *arena, Line_Move *moves, i64 new_line_first,
      | ^~~~~~~~~~~~~~
./code/4ed_buffer.cpp: In function ‘Line_Move* push_line_move(Arena*, Line_Move*, i64, i64, i64, i64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:437:23: note: in expansion of macro ‘push_array’
  437 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:437:23: note: in expansion of macro ‘push_array’
  437 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:437:23: note: in expansion of macro ‘push_array’
  437 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Line_Move*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_buffer.cpp:437:23: note: in expansion of macro ‘push_array’
  437 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/4ed_buffer.cpp: At global scope:
./code/4ed_buffer.cpp:448:1: warning: no previous declaration for ‘Line_Move* push_line_move(Arena*, Line_Move*, i64, String_Const_u8, i64)’ [-Wmissing-declarations]
  448 | push_line_move(Arena *arena, Line_Move *moves, i64 new_line_first,
      | ^~~~~~~~~~~~~~
./code/4ed_buffer.cpp: In function ‘Line_Move* push_line_move(Arena*, Line_Move*, i64, String_Const_u8, i64)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:450:23: note: in expansion of macro ‘push_array’
  450 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:450:23: note: in expansion of macro ‘push_array’
  450 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:450:23: note: in expansion of macro ‘push_array’
  450 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Line_Move*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_buffer.cpp:450:23: note: in expansion of macro ‘push_array’
  450 |     Line_Move *move = push_array(arena, Line_Move, 1);
      |                       ^~~~~~~~~~
./code/4ed_buffer.cpp: In function ‘void fill_line_starts(i64*, String_Const_u8, i64)’:
./code/4ed_buffer.cpp:475:20: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  475 |             *ptr = text_base + i + 1;
      |                    ^~~~~~~~~
./code/4ed_buffer.cpp:475:34: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  475 |             *ptr = text_base + i + 1;
      |                    ~~~~~~~~~~~~~~^~~
./code/4ed_buffer.cpp: In function ‘void buffer_remeasure_starts(Thread_Context*, Gap_Buffer*, Batch_Edit*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:499:9: note: in expansion of macro ‘Assert’
  499 |         Assert(first_line <= opl_line);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:500:9: note: in expansion of macro ‘Assert’
  500 |         Assert(opl_line <= line_start_count);
      |         ^~~~~~
./code/4ed_buffer.cpp:513:56: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  513 |         text_shift += node->edit.text.size - range_size(node->edit.range);
      |                                              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:513:73: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  513 |         text_shift += node->edit.text.size - range_size(node->edit.range);
      |                                                                         ^
./code/4ed_buffer.cpp:513:73: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
./code/4ed_buffer.cpp: In function ‘Buffer_Cursor buffer_cursor_from_line_col(Gap_Buffer*, i64, i64)’:
./code/custom/4coder_base_types.h:329:37: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
  329 | #define clamp_(a,x,b) ((a>x)?a:((b<x)?b:x))
      |                                     ^
./code/custom/4coder_base_types.h:330:22: note: in expansion of macro ‘clamp_’
  330 | #define clamp(a,x,b) clamp_((a),(x),(b))
      |                      ^~~~~~
./code/4ed_buffer.cpp:617:18: note: in expansion of macro ‘clamp’
  617 |     line_index = clamp(0, line_index, line_count - 1);
      |                  ^~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:640:5: note: in expansion of macro ‘Assert’
  640 |     Assert(col > 0);
      |     ^~~~~~
./code/4ed_buffer.cpp:614:9: warning: unused variable ‘size’ [-Wunused-variable]
  614 |     i64 size = buffer_size(buffer);
      |         ^~~~
./code/4ed_buffer.cpp:650:1: warning: assuming signed overflow does not occur when reducing constant in comparison [-Wstrict-overflow]
  650 | }
      | ^
./code/4ed_buffer.cpp: In function ‘String_Const_u8 buffer_invert_edit_shift(Arena*, Gap_Buffer*, Edit, Edit*, i64)’:
./code/4ed_buffer.cpp:656:67: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  656 |     inv->range = Ii64(edit.range.start + shift_amount, edit.range.start + edit.text.size + shift_amount);
      |                                                        ~~~~~~~~~~~^~~~~
./code/4ed_buffer.cpp:656:92: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  656 |     inv->range = Ii64(edit.range.start + shift_amount, edit.range.start + edit.text.size + shift_amount);
      |                                                                                            ^~~~~~~~~~~~
./code/4ed_buffer.cpp:656:90: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  656 |     inv->range = Ii64(edit.range.start + shift_amount, edit.range.start + edit.text.size + shift_amount);
      |                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~
./code/4ed_buffer.cpp: In function ‘b32 buffer_invert_batch(Arena*, Gap_Buffer*, Edit*, Edit*, i64)’:
./code/4ed_buffer.cpp:670:24: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  670 |         pos += inv_str.size;
      |                        ^~~~
./code/4ed_buffer.cpp:670:13: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  670 |         pos += inv_str.size;
      |         ~~~~^~~~~~~~~~~~~~~
./code/4ed_buffer.cpp: In function ‘Buffer_Chunk_Position buffer_get_chunk_position(String_Const_u8_Array, i64, i64)’:
./code/4ed_buffer.cpp:681:54: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  681 |         for (;(i64)(chunks.vals[pos.chunk_index].size) <= pos.chunk_pos;){
      |                                                      ^
      |               -----
      |               static_cast<i64> (                      )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_buffer.cpp:682:13: note: in expansion of macro ‘Assert’
  682 |             Assert(pos.chunk_index < chunks.count);
      |             ^~~~~~
./code/4ed_buffer.cpp:683:64: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  683 |             pos.chunk_pos -= (i32)chunks.vals[pos.chunk_index].size;
      |                                                                ^~~~
      |                              -----
      |                              static_cast<i32> (                    )
./code/4ed_buffer.cpp:689:59: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  689 |         pos.chunk_pos = (i32)chunks.vals[pos.chunk_index].size;
      |                                                           ^~~~
      |                         -----
      |                         static_cast<i32> (                    )
./code/4ed_buffer.cpp: In function ‘i32 buffer_chunk_position_iterate(String_Const_u8_Array, Buffer_Chunk_Position*, Scan_Direction)’:
./code/4ed_buffer.cpp:705:65: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  705 |             pos->chunk_pos = (i32)chunks.vals[pos->chunk_index].size - 1;
      |                                                                 ^~~~
      |                              -----
      |                              static_cast<i32> (                     )
./code/4ed_buffer.cpp:708:72: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  708 |     else if (pos->chunk_pos >= (i64)(chunks.vals[pos->chunk_index].size)){
      |                                                                        ^
      |                                -----
      |                                static_cast<i64> (                       )
In file included from ./code/4ed_app_target.cpp:113:
./code/4ed_string_matching.cpp: In function ‘u64_Array string_compute_prefix_table(Arena*, String_Const_u8, Scan_Direction)’:
./code/4ed_string_matching.cpp:15:36: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   15 |     array.count = (i32)(string.size);
      |                                    ^
      |                   -----
      |                   static_cast<i32> ()
./code/4ed_string_matching.cpp:16:47: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   16 |     array.vals = push_array(arena, u64, array.count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:16:18: note: in expansion of macro ‘push_array’
   16 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:16:18: note: in expansion of macro ‘push_array’
   16 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:16:18: note: in expansion of macro ‘push_array’
   16 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_string_matching.cpp:16:18: note: in expansion of macro ‘push_array’
   16 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/4ed_string_matching.cpp: In function ‘u64_Array string_compute_needle_jump_table(Arena*, u64_Array)’:
./code/4ed_string_matching.cpp:52:47: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   52 |     array.vals = push_array(arena, u64, array.count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:52:18: note: in expansion of macro ‘push_array’
   52 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:52:18: note: in expansion of macro ‘push_array’
   52 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:52:18: note: in expansion of macro ‘push_array’
   52 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_string_matching.cpp:52:18: note: in expansion of macro ‘push_array’
   52 |     array.vals = push_array(arena, u64, array.count);
      |                  ^~~~~~~~~~
./code/4ed_string_matching.cpp:54:23: warning: comparison of integer expressions of different signedness: ‘u64’ {aka ‘long unsigned int’} and ‘i32’ {aka ‘int’} [-Wsign-compare]
   54 |     for (u64 i = 1; i < array.count; i += 1){
      |                     ~~^~~~~~~~~~~~~
./code/4ed_string_matching.cpp: In function ‘String_Match_List find_all_matches_forward(Arena*, i32, List_String_Const_u8, String_Const_u8, u64_Array, Character_Predicate*, u64, Buffer_ID, i32)’:
./code/4ed_string_matching.cpp:96:48: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
   96 |             if (chunk_pos >= (i64)node->string.size){
      |                                                ^~~~
      |                              -----
      |                              static_cast<i64> (    )
./code/4ed_string_matching.cpp:97:33: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
   97 |                 last_boundary = i;
      |                                 ^
./code/4ed_string_matching.cpp:102:20: warning: switch missing default case [-Wswitch-default]
  102 |             switch (jump_back_code){
      |                    ^
./code/4ed_string_matching.cpp:120:40: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  120 |                     last_insensitive = i;
      |                                        ^
./code/4ed_string_matching.cpp:130:37: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  130 |                           j <= (u64)last_insensitive &&
      |                                     ^~~~~~~~~~~~~~~~
      |                                -----
      |                                static_cast<u64> (   )
./code/4ed_string_matching.cpp:131:32: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  131 |                           (u64)last_insensitive < j + needle.size)){
      |                                ^~~~~~~~~~~~~~~~
      |                           -----
      |                           static_cast<u64> (   )
./code/4ed_string_matching.cpp:135:37: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  135 |                           j <= (u64)last_boundary &&
      |                                     ^~~~~~~~~~~~~
      |                                -----
      |                                static_cast<u64> ()
./code/4ed_string_matching.cpp:136:32: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  136 |                           (u64)last_boundary < j + needle.size)){
      |                                ^~~~~~~~~~~~~
      |                           -----
      |                           static_cast<u64> ()
./code/4ed_string_matching.cpp:149:55: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  149 |                                            base_index + j, needle.size);
      |                                            ~~~~~~~~~~~^~~
./code/4ed_string_matching.cpp:149:67: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  149 |                                            base_index + j, needle.size);
      |                                                            ~~~~~~~^~~~
./code/4ed_string_matching.cpp: In function ‘String_Match_List find_all_matches_backward(Arena*, i32, List_String_Const_u8, String_Const_u8, u64_Array, Character_Predicate*, u64, Buffer_ID, i32)’:
./code/4ed_string_matching.cpp:192:32: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  192 |         i64 size = (i64)chunks.total_size;
      |                                ^~~~~~~~~~
      |                    -----
      |                    static_cast<i64> (    )
./code/4ed_string_matching.cpp:201:43: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  201 |         i64 chunk_pos = node->string.size - 1;
      |                         ~~~~~~~~~~~~~~~~~~^~~
./code/4ed_string_matching.cpp:218:51: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  218 |                     chunk_pos = node->string.size - 1;
      |                                 ~~~~~~~~~~~~~~~~~~^~~
./code/4ed_string_matching.cpp:222:20: warning: switch missing default case [-Wswitch-default]
  222 |             switch (jump_back_code){
      |                    ^
./code/4ed_string_matching.cpp:236:19: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  236 |             n = j - i;
      |                 ~~^~~
./code/4ed_string_matching.cpp:251:62: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  251 |                           last_insensitive > j - (i64)needle.size)){
      |                                                              ^~~~
      |                                                  ----------------
      |                                                  static_cast<i64> (needle.size)
./code/4ed_string_matching.cpp:256:59: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  256 |                           last_boundary > j - (i64)needle.size)){
      |                                                           ^~~~
      |                                               ----------------
      |                                               static_cast<i64> (needle.size)
./code/4ed_string_matching.cpp:269:58: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  269 |                                            base_index + (j - (needle.size - 1)), needle.size);
      |                                                          ^
./code/4ed_string_matching.cpp:269:55: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  269 |                                            base_index + (j - (needle.size - 1)), needle.size);
      |                                            ~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_string_matching.cpp:269:89: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  269 |                                            base_index + (j - (needle.size - 1)), needle.size);
      |                                                                                  ~~~~~~~^~~~
./code/4ed_string_matching.cpp:277:26: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  277 |                     j -= jump;
      |                          ^~~~
./code/4ed_string_matching.cpp:277:23: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  277 |                     j -= jump;
      |                     ~~^~~~~~~
./code/4ed_string_matching.cpp:296:26: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  296 |                     j -= jump;
      |                          ^~~~
./code/4ed_string_matching.cpp:296:23: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  296 |                     j -= jump;
      |                     ~~^~~~~~~
./code/4ed_string_matching.cpp: In function ‘String_Match_List find_all_matches(Arena*, i32, List_String_Const_u8, String_Const_u8, u64_Array, Character_Predicate*, Scan_Direction, u64, Buffer_ID, i32)’:
./code/4ed_string_matching.cpp:314:12: warning: switch missing default case [-Wswitch-default]
  314 |     switch (direction){
      |            ^
./code/4ed_history.cpp: In function ‘void history__push_back_record_ptr(Base_Allocator*, Record_Ptr_Lookup_Table*, Record*)’:
./code/4ed_history.cpp:31:79: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   31 |         String_Const_u8 new_memory = base_allocate(allocator, sizeof(Record*)*new_max);
      |                                                                               ^~~~~~~
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:31:38: note: in expansion of macro ‘base_allocate’
   31 |         String_Const_u8 new_memory = base_allocate(allocator, sizeof(Record*)*new_max);
      |                                      ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:31:38: note: in expansion of macro ‘base_allocate’
   31 |         String_Const_u8 new_memory = base_allocate(allocator, sizeof(Record*)*new_max);
      |                                      ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:31:38: note: in expansion of macro ‘base_allocate’
   31 |         String_Const_u8 new_memory = base_allocate(allocator, sizeof(Record*)*new_max);
      |                                      ^~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:114:
./code/4ed_history.cpp:32:53: warning: use of old-style cast to ‘struct Record**’ [-Wold-style-cast]
   32 |         Record **new_records = (Record**)new_memory.str;
      |                                                     ^~~
      |                                ------------------------
      |                                reinterpret_cast<Record**> (new_memory.str)
./code/4ed_history.cpp:33:79: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   33 |         block_copy(new_records, lookup->records, sizeof(*new_records)*lookup->count);
      |                                                                       ~~~~~~~~^~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:40:5: note: in expansion of macro ‘Assert’
   40 |     Assert(lookup->count < lookup->max);
      |     ^~~~~~
./code/4ed_history.cpp: In function ‘void history__shrink_array(Record_Ptr_Lookup_Table*, i32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:47:5: note: in expansion of macro ‘Assert’
   47 |     Assert(0 <= new_count && new_count <= lookup->count);
      |     ^~~~~~
./code/4ed_history.cpp: In function ‘void history__merge_record_ptr_range_to_one_ptr(Record_Ptr_Lookup_Table*, i32, i32, Record*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:55:5: note: in expansion of macro ‘Assert’
   55 |     Assert(0 <= first && first <= one_past_last && one_past_last <= lookup->count);
      |     ^~~~~~
./code/4ed_history.cpp:58:108: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   58 |         block_copy(lookup->records + one_past_last + shift, lookup->records + one_past_last, lookup->count - one_past_last);
      |                                                                                              ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘Node* history__to_node(History*, i32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:72:9: note: in expansion of macro ‘Assert’
   72 |         Assert(lookup->count == history->record_count);
      |         ^~~~~~
./code/4ed_history.cpp: In function ‘Record* history__allocate_record(History*)’:
./code/4ed_history.cpp:86:91: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
   86 |         String_Const_u8 new_memory = base_allocate(&history->heap_wrapper, sizeof(Record)*new_record_count);
      |                                                                                           ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:55: note: in definition of macro ‘base_allocate’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                       ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:86:38: note: in expansion of macro ‘base_allocate’
   86 |         String_Const_u8 new_memory = base_allocate(&history->heap_wrapper, sizeof(Record)*new_record_count);
      |                                      ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:86:38: note: in expansion of macro ‘base_allocate’
   86 |         String_Const_u8 new_memory = base_allocate(&history->heap_wrapper, sizeof(Record)*new_record_count);
      |                                      ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3055:59: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3055 | #define base_allocate(a,s) base_allocate__inner((a), (s), file_name_line_number_lit_u8)
      |                                                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:86:38: note: in expansion of macro ‘base_allocate’
   86 |         String_Const_u8 new_memory = base_allocate(&history->heap_wrapper, sizeof(Record)*new_record_count);
      |                                      ^~~~~~~~~~~~~
./code/4ed_history.cpp:89:39: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
   89 |         Record *new_record = (Record*)memory;
      |                                       ^~~~~~
      |                              ---------------
      |                              static_cast<Record*> (memory)
./code/4ed_history.cpp:99:31: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
   99 |         new_node = &((Record*)memory)->node;
      |                               ^~~~~~
      |                      ---------------
      |                      static_cast<Record*> (memory)
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:102:22: note: in expansion of macro ‘CastFromMember’
  102 |     Record *record = CastFromMember(Record, node, new_node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:102:22: note: in expansion of macro ‘CastFromMember’
  102 |     Record *record = CastFromMember(Record, node, new_node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:102:22: note: in expansion of macro ‘CastFromMember’
  102 |     Record *record = CastFromMember(Record, node, new_node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:102:22: note: in expansion of macro ‘CastFromMember’
  102 |     Record *record = CastFromMember(Record, node, new_node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:102:22: note: in expansion of macro ‘CastFromMember’
  102 |     Record *record = CastFromMember(Record, node, new_node);
      |                      ^~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘void history_init(Thread_Context*, Models*, History*)’:
./code/4ed_history.cpp:132:44: warning: unused parameter ‘models’ [-Wunused-parameter]
  132 | history_init(Thread_Context *tctx, Models *models, History *history){
      |                                    ~~~~~~~~^~~~~~
./code/4ed_history.cpp: In function ‘void history_free(Thread_Context*, History*)’:
./code/4ed_history.cpp:149:30: warning: unused parameter ‘tctx’ [-Wunused-parameter]
  149 | history_free(Thread_Context *tctx, History *history){
      |              ~~~~~~~~~~~~~~~~^~~~
./code/4ed_history.cpp: In function ‘Record* history_get_record(History*, i32)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:172:22: note: in expansion of macro ‘CastFromMember’
  172 |             result = CastFromMember(Record, node, node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:172:22: note: in expansion of macro ‘CastFromMember’
  172 |             result = CastFromMember(Record, node, node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:172:22: note: in expansion of macro ‘CastFromMember’
  172 |             result = CastFromMember(Record, node, node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:172:22: note: in expansion of macro ‘CastFromMember’
  172 |             result = CastFromMember(Record, node, node);
      |                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:172:22: note: in expansion of macro ‘CastFromMember’
  172 |             result = CastFromMember(Record, node, node);
      |                      ^~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘Record* history_get_sub_record(Record*, i32)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:185:26: note: in expansion of macro ‘CastFromMember’
  185 |                 result = CastFromMember(Record, node, node);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:185:26: note: in expansion of macro ‘CastFromMember’
  185 |                 result = CastFromMember(Record, node, node);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:185:26: note: in expansion of macro ‘CastFromMember’
  185 |                 result = CastFromMember(Record, node, node);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:185:26: note: in expansion of macro ‘CastFromMember’
  185 |                 result = CastFromMember(Record, node, node);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:185:26: note: in expansion of macro ‘CastFromMember’
  185 |                 result = CastFromMember(Record, node, node);
      |                          ^~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘Record* history_get_dummy_record(History*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:196:18: note: in expansion of macro ‘CastFromMember’
  196 |         result = CastFromMember(Record, node, &history->records);
      |                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:196:18: note: in expansion of macro ‘CastFromMember’
  196 |         result = CastFromMember(Record, node, &history->records);
      |                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:196:18: note: in expansion of macro ‘CastFromMember’
  196 |         result = CastFromMember(Record, node, &history->records);
      |                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:196:18: note: in expansion of macro ‘CastFromMember’
  196 |         result = CastFromMember(Record, node, &history->records);
      |                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:196:18: note: in expansion of macro ‘CastFromMember’
  196 |         result = CastFromMember(Record, node, &history->records);
      |                  ^~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘void history__stash_record(History*, Record*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:203:5: note: in expansion of macro ‘Assert’
  203 |     Assert(history->record_lookup.count == history->record_count);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:207:5: note: in expansion of macro ‘Assert’
  207 |     Assert(history->record_lookup.count == history->record_count);
      |     ^~~~~~
./code/4ed_history.cpp: In function ‘void history__free_nodes(History*, i32, Node*, Node*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:238:5: note: in expansion of macro ‘Assert’
  238 |     Assert(first_index != 0);
      |     ^~~~~~
./code/4ed_history.cpp: In function ‘void history_record_edit(Global_History*, History*, Gap_Buffer*, i64, Edit)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:247:9: note: in expansion of macro ‘Assert’
  247 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:268:9: note: in expansion of macro ‘Assert’
  268 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
./code/4ed_history.cpp: In function ‘void history_dump_records_after_index(History*, i32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:275:9: note: in expansion of macro ‘Assert’
  275 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:277:9: note: in expansion of macro ‘Assert’
  277 |         Assert(0 <= index && index <= history->record_count);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:283:13: note: in expansion of macro ‘Assert’
  283 |             Assert(first_node_to_clear != sentinel);
      |             ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:285:45: note: in expansion of macro ‘CastFromMember’
  285 |             Record *first_record_to_clear = CastFromMember(Record, node, first_node_to_clear);
      |                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:285:45: note: in expansion of macro ‘CastFromMember’
  285 |             Record *first_record_to_clear = CastFromMember(Record, node, first_node_to_clear);
      |                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:285:45: note: in expansion of macro ‘CastFromMember’
  285 |             Record *first_record_to_clear = CastFromMember(Record, node, first_node_to_clear);
      |                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:285:45: note: in expansion of macro ‘CastFromMember’
  285 |             Record *first_record_to_clear = CastFromMember(Record, node, first_node_to_clear);
      |                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:285:45: note: in expansion of macro ‘CastFromMember’
  285 |             Record *first_record_to_clear = CastFromMember(Record, node, first_node_to_clear);
      |                                             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:293:9: note: in expansion of macro ‘Assert’
  293 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
./code/4ed_history.cpp: In function ‘void history__optimize_group(Arena*, History*, Record*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:299:5: note: in expansion of macro ‘Assert’
  299 |     Assert(record->kind == RecordKind_Group);
      |     ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:301:25: note: in expansion of macro ‘CastFromMember’
  301 |         Record *right = CastFromMember(Record, node, record->group.children.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:301:25: note: in expansion of macro ‘CastFromMember’
  301 |         Record *right = CastFromMember(Record, node, record->group.children.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:301:25: note: in expansion of macro ‘CastFromMember’
  301 |         Record *right = CastFromMember(Record, node, record->group.children.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:301:25: note: in expansion of macro ‘CastFromMember’
  301 |         Record *right = CastFromMember(Record, node, record->group.children.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:301:25: note: in expansion of macro ‘CastFromMember’
  301 |         Record *right = CastFromMember(Record, node, record->group.children.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:315:25: note: in expansion of macro ‘CastFromMember’
  315 |         Record *left  = CastFromMember(Record, node, right->node.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:315:25: note: in expansion of macro ‘CastFromMember’
  315 |         Record *left  = CastFromMember(Record, node, right->node.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:315:25: note: in expansion of macro ‘CastFromMember’
  315 |         Record *left  = CastFromMember(Record, node, right->node.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:315:25: note: in expansion of macro ‘CastFromMember’
  315 |         Record *left  = CastFromMember(Record, node, right->node.prev);
      |                         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:315:25: note: in expansion of macro ‘CastFromMember’
  315 |         Record *left  = CastFromMember(Record, node, right->node.prev);
      |                         ^~~~~~~~~~~~~~
./code/4ed_history.cpp:320:71: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  320 |             i64 new_length_forward  = left->single.forward_text.size  + right->single.forward_text.size ;
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:321:71: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  321 |             i64 new_length_backward = left->single.backward_text.size + right->single.backward_text.size;
      |                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:327:69: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  327 |             if (left->single.first + (i64)left->single.forward_text.size == right->single.first){
      |                                                                     ^~~~
      |                                      -----
      |                                      static_cast<i64> (                 )
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:330:50: note: in expansion of macro ‘string_expand’
  330 |                                                  string_expand(left->single.forward_text),
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:330:50: note: in expansion of macro ‘string_expand’
  330 |                                                  string_expand(left->single.forward_text),
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:331:50: note: in expansion of macro ‘string_expand’
  331 |                                                  string_expand(right->single.forward_text));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:331:50: note: in expansion of macro ‘string_expand’
  331 |                                                  string_expand(right->single.forward_text));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:333:51: note: in expansion of macro ‘string_expand’
  333 |                                                   string_expand(left->single.backward_text),
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:333:51: note: in expansion of macro ‘string_expand’
  333 |                                                   string_expand(left->single.backward_text),
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:334:51: note: in expansion of macro ‘string_expand’
  334 |                                                   string_expand(right->single.backward_text));
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:334:51: note: in expansion of macro ‘string_expand’
  334 |                                                   string_expand(right->single.backward_text));
      |                                                   ^~~~~~~~~~~~~
./code/4ed_history.cpp:337:77: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  337 |             else if (right->single.first + (i64)right->single.backward_text.size == left->single.first){
      |                                                                             ^~~~
      |                                            -----
      |                                            static_cast<i64> (                   )
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:340:50: note: in expansion of macro ‘string_expand’
  340 |                                                  string_expand(right->single.forward_text),
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:340:50: note: in expansion of macro ‘string_expand’
  340 |                                                  string_expand(right->single.forward_text),
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:341:50: note: in expansion of macro ‘string_expand’
  341 |                                                  string_expand(left->single.forward_text));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:341:50: note: in expansion of macro ‘string_expand’
  341 |                                                  string_expand(left->single.forward_text));
      |                                                  ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:343:51: note: in expansion of macro ‘string_expand’
  343 |                                                   string_expand(right->single.backward_text),
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:343:51: note: in expansion of macro ‘string_expand’
  343 |                                                   string_expand(right->single.backward_text),
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_history.cpp:344:51: note: in expansion of macro ‘string_expand’
  344 |                                                   string_expand(left->single.backward_text));
      |                                                   ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_history.cpp:344:51: note: in expansion of macro ‘string_expand’
  344 |                                                   string_expand(left->single.backward_text));
      |                                                   ^~~~~~~~~~~~~
./code/4ed_history.cpp:320:17: warning: unused variable ‘new_length_forward’ [-Wunused-variable]
  320 |             i64 new_length_forward  = left->single.forward_text.size  + right->single.forward_text.size ;
      |                 ^~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp:321:17: warning: unused variable ‘new_length_backward’ [-Wunused-variable]
  321 |             i64 new_length_backward = left->single.backward_text.size + right->single.backward_text.size;
      |                 ^~~~~~~~~~~~~~~~~~~
./code/4ed_history.cpp: In function ‘void history_merge_records(Arena*, History*, i32, i32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:374:9: note: in expansion of macro ‘Assert’
  374 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:375:9: note: in expansion of macro ‘Assert’
  375 |         Assert(first_index < last_index);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:378:9: note: in expansion of macro ‘Assert’
  378 |         Assert(first_node != &history->records && first_node != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:379:9: note: in expansion of macro ‘Assert’
  379 |         Assert(last_node  != &history->records && last_node  != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:391:32: note: in expansion of macro ‘CastFromMember’
  391 |         Record *first_record = CastFromMember(Record, node, first_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:391:32: note: in expansion of macro ‘CastFromMember’
  391 |         Record *first_record = CastFromMember(Record, node, first_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:391:32: note: in expansion of macro ‘CastFromMember’
  391 |         Record *first_record = CastFromMember(Record, node, first_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:391:32: note: in expansion of macro ‘CastFromMember’
  391 |         Record *first_record = CastFromMember(Record, node, first_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:391:32: note: in expansion of macro ‘CastFromMember’
  391 |         Record *first_record = CastFromMember(Record, node, first_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:392:32: note: in expansion of macro ‘CastFromMember’
  392 |         Record *last_record  = CastFromMember(Record, node, last_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:392:32: note: in expansion of macro ‘CastFromMember’
  392 |         Record *last_record  = CastFromMember(Record, node, last_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:392:32: note: in expansion of macro ‘CastFromMember’
  392 |         Record *last_record  = CastFromMember(Record, node, last_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:392:32: note: in expansion of macro ‘CastFromMember’
  392 |         Record *last_record  = CastFromMember(Record, node, last_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:392:32: note: in expansion of macro ‘CastFromMember’
  392 |         Record *last_record  = CastFromMember(Record, node, last_node);
      |                                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_history.cpp:407:30: note: in expansion of macro ‘CastFromMember’
  407 |             Record *record = CastFromMember(Record, node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:407:30: note: in expansion of macro ‘CastFromMember’
  407 |             Record *record = CastFromMember(Record, node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:407:30: note: in expansion of macro ‘CastFromMember’
  407 |             Record *record = CastFromMember(Record, node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_history.cpp:407:30: note: in expansion of macro ‘CastFromMember’
  407 |             Record *record = CastFromMember(Record, node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_history.cpp:407:30: note: in expansion of macro ‘CastFromMember’
  407 |             Record *record = CastFromMember(Record, node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:419:21: note: in expansion of macro ‘Assert’
  419 |                     Assert(first != &record->group.children);
      |                     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:420:21: note: in expansion of macro ‘Assert’
  420 |                     Assert(last  != &record->group.children);
      |                     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_history.cpp:430:21: note: in expansion of macro ‘InvalidPath’
  430 |                     InvalidPath;
      |                     ^~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_history.cpp:438:9: note: in expansion of macro ‘Assert’
  438 |         Assert(history->record_lookup.count == history->record_count);
      |         ^~~~~~
In file included from ./code/4ed_app_target.cpp:115:
./code/4ed_file.cpp: In function ‘void file_edit_positions_push(Editing_File*, File_Edit_Positions)’:
./code/4ed_file.cpp:33:44: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
   33 |     if (file->state.edit_pos_stack_top + 1 < ArrayCount(file->state.edit_pos_stack)){
./code/4ed_file.cpp: In function ‘void file_set_unimportant(Editing_File*, b32)’:
./code/4ed_file.cpp:92:42: warning: use of old-style cast to ‘b8’ {aka ‘signed char’} [-Wold-style-cast]
   92 |     file->settings.unimportant = (b8)(val);
      |                                          ^
      |                                  ---------
      |                                  static_cast<b8> ((val))
./code/4ed_file.cpp: In function ‘b32 save_file_to_name(Thread_Context*, Models*, Editing_File*, u8*)’:
./code/4ed_file.cpp:157:75: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  157 |         File_Attributes new_attributes = system_save_file(scratch, (char*)file_name, saveable_string);
      |                                                                           ^~~~~~~~~
      |                                                                    ----------------
      |                                                                    reinterpret_cast<char*> (file_name)
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:163:9: note: in expansion of macro ‘LogEventF’
  163 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:163:9: note: in expansion of macro ‘LogEventF’
  163 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:163:9: note: in expansion of macro ‘LogEventF’
  163 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/4ed_file.cpp:143:13: warning: unused variable ‘dos_write_mode’ [-Wunused-variable]
  143 |         b32 dos_write_mode = file->settings.dos_write_mode;
      |             ^~~~~~~~~~~~~~
./code/4ed_file.cpp: In function ‘Buffer_Cursor file_compute_cursor(Editing_File*, Buffer_Seek)’:
./code/4ed_file.cpp:175:12: warning: switch missing default case [-Wswitch-default]
  175 |     switch (seek.type){
      |            ^
./code/4ed_file.cpp: In function ‘void file_create_from_string(Thread_Context*, Models*, Editing_File*, String_Const_u8, File_Attributes)’:
./code/4ed_file.cpp:203:53: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  203 |     if (buffer_size(&file->state.buffer) < (i64)val.size){
      |                                                     ^~~~
      |                                            -------------
      |                                            static_cast<i64> (val.size)
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:218:37: note: in expansion of macro ‘make_table_Data_u64’
  218 |     file->state.line_layout_table = make_table_Data_u64(allocator, 500);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:218:37: note: in expansion of macro ‘make_table_Data_u64’
  218 |     file->state.line_layout_table = make_table_Data_u64(allocator, 500);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:218:37: note: in expansion of macro ‘make_table_Data_u64’
  218 |     file->state.line_layout_table = make_table_Data_u64(allocator, 500);
      |                                     ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/4ed_file.cpp:226:9: note: in expansion of macro ‘LogEventF’
  226 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/4ed_file.cpp:228:47: note: in expansion of macro ‘string_expand’
  228 |                   attributes.last_write_time, string_expand(name));
      |                                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/4ed_file.cpp:226:9: note: in expansion of macro ‘LogEventF’
  226 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/4ed_file.cpp:228:47: note: in expansion of macro ‘string_expand’
  228 |                   attributes.last_write_time, string_expand(name));
      |                                               ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:226:9: note: in expansion of macro ‘LogEventF’
  226 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:226:9: note: in expansion of macro ‘LogEventF’
  226 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_file.cpp:226:9: note: in expansion of macro ‘LogEventF’
  226 |         LogEventF(log_string(M), scratch, file->id, 0, system_thread_get_id(),
      |         ^~~~~~~~~
./code/4ed_file.cpp: In function ‘void file_free(Thread_Context*, Models*, Editing_File*)’:
./code/4ed_file.cpp:245:18: warning: unused variable ‘working_set’ [-Wunused-variable]
  245 |     Working_Set *working_set = &models->working_set;
      |                  ^~~~~~~~~~~
./code/4ed_file.cpp: In function ‘Managed_Scope file_get_managed_scope(Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_file.cpp:272:9: note: in expansion of macro ‘Assert’
  272 |         Assert(file->lifetime_object != 0);
      |         ^~~~~~
./code/4ed_file.cpp:273:65: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
  273 |         scope = (Managed_Scope)file->lifetime_object->workspace.scope_id;
      |                                                                 ^~~~~~~~
      |                 -
      |                 static_cast<  -
      |                               > (                                       )
./code/4ed_file.cpp: In function ‘Layout_Item_List file_get_line_layout(Thread_Context*, Models*, Editing_File*, Layout_Item_List (*)(Application_Links*, Arena*, Buffer_ID, Range_i64, Face_ID, f32), f32, Face*, i64)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_file.cpp:301:39: note: in expansion of macro ‘IntAsPtr’
  301 |             list = (Layout_Item_List*)IntAsPtr(val);
      |                                       ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_file.cpp:301:39: note: in expansion of macro ‘IntAsPtr’
  301 |             list = (Layout_Item_List*)IntAsPtr(val);
      |                                       ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Layout_Item_List*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_file.cpp:301:39: note: in expansion of macro ‘IntAsPtr’
  301 |             list = (Layout_Item_List*)IntAsPtr(val);
      |                                       ^~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:304:20: note: in expansion of macro ‘push_array’
  304 |             list = push_array(&file->state.cached_layouts_arena, Layout_Item_List, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:304:20: note: in expansion of macro ‘push_array’
  304 |             list = push_array(&file->state.cached_layouts_arena, Layout_Item_List, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:304:20: note: in expansion of macro ‘push_array’
  304 |             list = push_array(&file->state.cached_layouts_arena, Layout_Item_List, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Layout_Item_List*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_file.cpp:304:20: note: in expansion of macro ‘push_array’
  304 |             list = push_array(&file->state.cached_layouts_arena, Layout_Item_List, 1);
      |                    ^~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_file.cpp:313:73: note: in expansion of macro ‘PtrAsInt’
  313 |             table_insert(&file->state.line_layout_table, key_data, (u64)PtrAsInt(list));
      |                                                                         ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_file.cpp:313:73: note: in expansion of macro ‘PtrAsInt’
  313 |             table_insert(&file->state.line_layout_table, key_data, (u64)PtrAsInt(list));
      |                                                                         ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_file.cpp:313:73: note: in expansion of macro ‘PtrAsInt’
  313 |             table_insert(&file->state.line_layout_table, key_data, (u64)PtrAsInt(list));
      |                                                                         ^~~~~~~~
In file included from ./code/4ed_app_target.cpp:116:
./code/4ed_working_set.cpp: In function ‘void working_set_file_default_settings(Working_Set*, Editing_File*)’:
./code/4ed_working_set.cpp:13:48: warning: unused parameter ‘working_set’ [-Wunused-parameter]
   13 | working_set_file_default_settings(Working_Set *working_set, Editing_File *file){
      |                                   ~~~~~~~~~~~~~^~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘void file_change_notification_check(Arena*, Working_Set*, Editing_File*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_working_set.cpp:33:21: note: in expansion of macro ‘LogEventF’
   33 |                     LogEventF(log_string(M), &working_set->arena, file->id, 0, system_thread_get_id(),
      |                     ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_working_set.cpp:33:21: note: in expansion of macro ‘LogEventF’
   33 |                     LogEventF(log_string(M), &working_set->arena, file->id, 0, system_thread_get_id(),
      |                     ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_log.cpp:34:1: note: in expansion of macro ‘Stmnt’
   34 | Stmnt(Temp_Memory temp_LOG = begin_temp(arena); \
      | ^~~~~
./code/custom/4coder_log.cpp:36:1: note: in expansion of macro ‘string_u8_litexpr’
   36 | string_u8_litexpr(__FILE__), \
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_log.cpp:47:1: note: in expansion of macro ‘LogEventStr’
   47 | LogEventStr(log_call, arena, B, V, T, E); \
      | ^~~~~~~~~~~
./code/4ed_working_set.cpp:33:21: note: in expansion of macro ‘LogEventF’
   33 |                     LogEventF(log_string(M), &working_set->arena, file->id, 0, system_thread_get_id(),
      |                     ^~~~~~~~~
./code/4ed_working_set.cpp: In function ‘void file_change_notification_thread_main(void*)’:
./code/4ed_working_set.cpp:46:31: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
   46 |     Models *models = (Models*)ptr;
      |                               ^~~
      |                      ------------
      |                      static_cast<Models*> (ptr)
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_working_set.cpp:61:38: note: in expansion of macro ‘CastFromMember’
   61 |                 Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:61:38: note: in expansion of macro ‘CastFromMember’
   61 |                 Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:61:38: note: in expansion of macro ‘CastFromMember’
   61 |                 Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:61:38: note: in expansion of macro ‘CastFromMember’
   61 |                 Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_working_set.cpp:61:38: note: in expansion of macro ‘CastFromMember’
   61 |                 Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘Editing_File* working_set_allocate_file(Working_Set*, Lifetime_Allocator*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:79:16: note: in expansion of macro ‘push_array’
   79 |         file = push_array(&working_set->arena, Editing_File, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:79:16: note: in expansion of macro ‘push_array’
   79 |         file = push_array(&working_set->arena, Editing_File, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:79:16: note: in expansion of macro ‘push_array’
   79 |         file = push_array(&working_set->arena, Editing_File, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_working_set.cpp:79:16: note: in expansion of macro ‘push_array’
   79 |         file = push_array(&working_set->arena, Editing_File, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘working_set->Working_Set::free_files’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:82:9: note: in expansion of macro ‘sll_stack_pop’
   82 |         sll_stack_pop(working_set->free_files);
      |         ^~~~~~~~~~~~~
./code/4ed_working_set.cpp:96:29: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   96 |                  (u64)file->id, (u64)(PtrAsInt(file)));
      |                             ^~
      |                  -------------
      |                  static_cast<u64> (file->id)
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_working_set.cpp:96:39: note: in expansion of macro ‘PtrAsInt’
   96 |                  (u64)file->id, (u64)(PtrAsInt(file)));
      |                                       ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_working_set.cpp:96:39: note: in expansion of macro ‘PtrAsInt’
   96 |                  (u64)file->id, (u64)(PtrAsInt(file)));
      |                                       ^~~~~~~~
./code/4ed_working_set.cpp:96:53: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
   96 |                  (u64)file->id, (u64)(PtrAsInt(file)));
      |                                                     ^
      |                                 -----
      |                                 static_cast<u64> (   )
./code/4ed_working_set.cpp:76:73: warning: unused parameter ‘lifetime_allocator’ [-Wunused-parameter]
   76 | working_set_allocate_file(Working_Set *working_set, Lifetime_Allocator *lifetime_allocator){
      |                                                     ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘void working_set_free_file(Heap*, Working_Set*, Editing_File*)’:
./code/4ed_working_set.cpp:109:54: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Buffer_ID’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  109 |     table_erase(&working_set->id_to_ptr_table, file->id);
      |                                                ~~~~~~^~
./code/4ed_working_set.cpp:102:29: warning: unused parameter ‘heap’ [-Wunused-parameter]
  102 | working_set_free_file(Heap *heap, Working_Set *working_set, Editing_File *file){
      |                       ~~~~~~^~~~
./code/4ed_working_set.cpp: In function ‘Editing_File* working_set_get_file(Working_Set*, Buffer_ID)’:
./code/4ed_working_set.cpp:117:51: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Buffer_ID’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  117 |     if (table_read(&working_set->id_to_ptr_table, id, &val)){
      |                                                   ^~
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_working_set.cpp:118:34: note: in expansion of macro ‘IntAsPtr’
  118 |         result = (Editing_File*)(IntAsPtr(val));
      |                                  ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_working_set.cpp:118:34: note: in expansion of macro ‘IntAsPtr’
  118 |         result = (Editing_File*)(IntAsPtr(val));
      |                                  ^~~~~~~~
./code/4ed_working_set.cpp:118:47: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  118 |         result = (Editing_File*)(IntAsPtr(val));
      |                                               ^
      |                  -
      |                  static_cast<  -
      |                                > (             )
./code/4ed_working_set.cpp: In function ‘void working_set_init(Models*, Working_Set*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:135:36: note: in expansion of macro ‘make_table_u64_u64’
  135 |     working_set->id_to_ptr_table = make_table_u64_u64(allocator, slot_count);
      |                                    ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:135:36: note: in expansion of macro ‘make_table_u64_u64’
  135 |     working_set->id_to_ptr_table = make_table_u64_u64(allocator, slot_count);
      |                                    ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:135:36: note: in expansion of macro ‘make_table_u64_u64’
  135 |     working_set->id_to_ptr_table = make_table_u64_u64(allocator, slot_count);
      |                                    ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:136:32: note: in expansion of macro ‘make_table_Data_u64’
  136 |     working_set->canon_table = make_table_Data_u64(allocator, slot_count);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:136:32: note: in expansion of macro ‘make_table_Data_u64’
  136 |     working_set->canon_table = make_table_Data_u64(allocator, slot_count);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:136:32: note: in expansion of macro ‘make_table_Data_u64’
  136 |     working_set->canon_table = make_table_Data_u64(allocator, slot_count);
      |                                ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:137:31: note: in expansion of macro ‘make_table_Data_u64’
  137 |     working_set->name_table = make_table_Data_u64(allocator, slot_count);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:137:31: note: in expansion of macro ‘make_table_Data_u64’
  137 |     working_set->name_table = make_table_Data_u64(allocator, slot_count);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:370:69: note: in expansion of macro ‘file_name_line_number_lit_u8’
  370 | #define make_table_Data_u64(a,s) make_table_Data_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:137:31: note: in expansion of macro ‘make_table_Data_u64’
  137 |     working_set->name_table = make_table_Data_u64(allocator, slot_count);
      |                               ^~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘Editing_File* working_set_contains__generic(Working_Set*, Table_Data_u64*, String_Const_u8)’:
./code/4ed_working_set.cpp:149:63: warning: use of old-style cast to ‘Buffer_ID’ {aka ‘int’} [-Wold-style-cast]
  149 |         result = working_set_get_file(working_set, (Buffer_ID)val);
      |                                                               ^~~
      |                                                    --------------
      |                                                    static_cast<Buffer_ID> (val)
./code/4ed_working_set.cpp: In function ‘b32 working_set_add__generic(Table_Data_u64*, Buffer_ID, String_Const_u8)’:
./code/4ed_working_set.cpp:156:64: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘Buffer_ID’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  156 |     return(table_insert(table, make_data(name.str, name.size), id));
      |                                                                ^~
./code/4ed_working_set.cpp: In function ‘Editing_File* get_file_from_identifier(Working_Set*, Buffer_Identifier)’:
./code/4ed_working_set.cpp:201:57: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  201 |         String_Const_u8 name = SCu8(buffer.name, buffer.name_len);
      |                                                  ~~~~~~~^~~~~~~~
./code/4ed_working_set.cpp: In function ‘void file_bind_file_name(Working_Set*, Editing_File*, String_Const_u8)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:280:5: note: in expansion of macro ‘Assert’
  280 |     Assert(file->unique_name.name_size == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:281:5: note: in expansion of macro ‘Assert’
  281 |     Assert(file->canon.name_size == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:288:5: note: in expansion of macro ‘Assert’
  288 |     Assert(result);
      |     ^~~~~~
./code/4ed_working_set.cpp: In function ‘void buffer_unbind_file(Working_Set*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:293:5: note: in expansion of macro ‘Assert’
  293 |     Assert(file->unique_name.name_size == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:294:5: note: in expansion of macro ‘Assert’
  294 |     Assert(file->canon.name_size != 0);
      |     ^~~~~~
./code/4ed_working_set.cpp: In function ‘b32 buffer_name_has_conflict(Working_Set*, String_Const_u8)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_working_set.cpp:306:34: note: in expansion of macro ‘CastFromMember’
  306 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:306:34: note: in expansion of macro ‘CastFromMember’
  306 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:306:34: note: in expansion of macro ‘CastFromMember’
  306 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:306:34: note: in expansion of macro ‘CastFromMember’
  306 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_working_set.cpp:306:34: note: in expansion of macro ‘CastFromMember’
  306 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘void buffer_resolve_name_low_level(Arena*, Working_Set*, Editing_File_Name*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_working_set.cpp:330:36: note: in expansion of macro ‘string_u8_litexpr’
  330 |             string_append(&string, string_u8_litexpr(" ("));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_working_set.cpp:330:36: note: in expansion of macro ‘string_u8_litexpr’
  330 |             string_append(&string, string_u8_litexpr(" ("));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_working_set.cpp:330:36: note: in expansion of macro ‘string_u8_litexpr’
  330 |             string_append(&string, string_u8_litexpr(" ("));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_working_set.cpp:332:36: note: in expansion of macro ‘string_u8_litexpr’
  332 |             string_append(&string, string_u8_litexpr(")"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_working_set.cpp:332:36: note: in expansion of macro ‘string_u8_litexpr’
  332 |             string_append(&string, string_u8_litexpr(")"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_working_set.cpp:332:36: note: in expansion of macro ‘string_u8_litexpr’
  332 |             string_append(&string, string_u8_litexpr(")"));
      |                                    ^~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp: In function ‘void buffer_bind_name_low_level(Arena*, Working_Set*, Editing_File*, String_Const_u8, String_Const_u8)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:341:5: note: in expansion of macro ‘Assert’
  341 |     Assert(file->base_name.name_size == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:342:5: note: in expansion of macro ‘Assert’
  342 |     Assert(file->unique_name.name_size == 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:361:5: note: in expansion of macro ‘Assert’
  361 |     Assert(result);
      |     ^~~~~~
./code/4ed_working_set.cpp: In function ‘void buffer_unbind_name_low_level(Working_Set*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:366:5: note: in expansion of macro ‘Assert’
  366 |     Assert(file->base_name.name_size != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:367:5: note: in expansion of macro ‘Assert’
  367 |     Assert(file->unique_name.name_size != 0);
      |     ^~~~~~
./code/4ed_working_set.cpp: In function ‘void buffer_bind_name(Thread_Context*, Models*, Arena*, Working_Set*, Editing_File*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:387:26: note: in expansion of macro ‘push_array’
  387 |         Node_Ptr *node = push_array(scratch, Node_Ptr, 1);
      |                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:387:26: note: in expansion of macro ‘push_array’
  387 |         Node_Ptr *node = push_array(scratch, Node_Ptr, 1);
      |                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:387:26: note: in expansion of macro ‘push_array’
  387 |         Node_Ptr *node = push_array(scratch, Node_Ptr, 1);
      |                          ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct buffer_bind_name(Thread_Context*, Models*, Arena*, Working_Set*, Editing_File*, String_Const_u8)::Node_Ptr*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_working_set.cpp:387:26: note: in expansion of macro ‘push_array’
  387 |         Node_Ptr *node = push_array(scratch, Node_Ptr, 1);
      |                          ^~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_working_set.cpp:397:34: note: in expansion of macro ‘CastFromMember’
  397 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:397:34: note: in expansion of macro ‘CastFromMember’
  397 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:397:34: note: in expansion of macro ‘CastFromMember’
  397 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:397:34: note: in expansion of macro ‘CastFromMember’
  397 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_working_set.cpp:397:34: note: in expansion of macro ‘CastFromMember’
  397 |         Editing_File *file_ptr = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:399:34: note: in expansion of macro ‘push_array’
  399 |             Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:399:34: note: in expansion of macro ‘push_array’
  399 |             Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:399:34: note: in expansion of macro ‘push_array’
  399 |             Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct buffer_bind_name(Thread_Context*, Models*, Arena*, Working_Set*, Editing_File*, String_Const_u8)::Node_Ptr*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_working_set.cpp:399:34: note: in expansion of macro ‘push_array’
  399 |             Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                  ^~~~~~~~~~
./code/4ed_working_set.cpp:407:93: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  407 |     Buffer_Name_Conflict_Entry *conflicts = push_array(scratch, Buffer_Name_Conflict_Entry, conflict_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:407:45: note: in expansion of macro ‘push_array’
  407 |     Buffer_Name_Conflict_Entry *conflicts = push_array(scratch, Buffer_Name_Conflict_Entry, conflict_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:407:45: note: in expansion of macro ‘push_array’
  407 |     Buffer_Name_Conflict_Entry *conflicts = push_array(scratch, Buffer_Name_Conflict_Entry, conflict_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:407:45: note: in expansion of macro ‘push_array’
  407 |     Buffer_Name_Conflict_Entry *conflicts = push_array(scratch, Buffer_Name_Conflict_Entry, conflict_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Buffer_Name_Conflict_Entry*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_working_set.cpp:407:45: note: in expansion of macro ‘push_array’
  407 |     Buffer_Name_Conflict_Entry *conflicts = push_array(scratch, Buffer_Name_Conflict_Entry, conflict_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:426:38: note: in expansion of macro ‘push_array’
  426 |             u8 *unique_name_buffer = push_array(scratch, u8, unique_name_capacity);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:426:38: note: in expansion of macro ‘push_array’
  426 |             u8 *unique_name_buffer = push_array(scratch, u8, unique_name_capacity);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:426:38: note: in expansion of macro ‘push_array’
  426 |             u8 *unique_name_buffer = push_array(scratch, u8, unique_name_capacity);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_working_set.cpp:426:38: note: in expansion of macro ‘push_array’
  426 |             u8 *unique_name_buffer = push_array(scratch, u8, unique_name_capacity);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:427:13: note: in expansion of macro ‘Assert’
  427 |             Assert(b.size <= unique_name_capacity);
      |             ^~~~~~
./code/4ed_working_set.cpp: In function ‘void file_touch(Working_Set*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_working_set.cpp:475:5: note: in expansion of macro ‘Assert’
  475 |     Assert(file != 0);
      |     ^~~~~~
./code/4ed_working_set.cpp: In function ‘Editing_File* file_get_next(Working_Set*, Editing_File*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_working_set.cpp:484:16: note: in expansion of macro ‘CastFromMember’
  484 |         file = CastFromMember(Editing_File, touch_node, node);
      |                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:484:16: note: in expansion of macro ‘CastFromMember’
  484 |         file = CastFromMember(Editing_File, touch_node, node);
      |                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:484:16: note: in expansion of macro ‘CastFromMember’
  484 |         file = CastFromMember(Editing_File, touch_node, node);
      |                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:484:16: note: in expansion of macro ‘CastFromMember’
  484 |         file = CastFromMember(Editing_File, touch_node, node);
      |                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_working_set.cpp:484:16: note: in expansion of macro ‘CastFromMember’
  484 |         file = CastFromMember(Editing_File, touch_node, node);
      |                ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_working_set.cpp:492:20: note: in expansion of macro ‘CastFromMember’
  492 |             file = CastFromMember(Editing_File, touch_node, node);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:492:20: note: in expansion of macro ‘CastFromMember’
  492 |             file = CastFromMember(Editing_File, touch_node, node);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:492:20: note: in expansion of macro ‘CastFromMember’
  492 |             file = CastFromMember(Editing_File, touch_node, node);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_working_set.cpp:492:20: note: in expansion of macro ‘CastFromMember’
  492 |             file = CastFromMember(Editing_File, touch_node, node);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_working_set.cpp:492:20: note: in expansion of macro ‘CastFromMember’
  492 |             file = CastFromMember(Editing_File, touch_node, node);
      |                    ^~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:117:
./code/4ed_hot_directory.cpp: In function ‘void hot_directory_fixup(Hot_Directory*)’:
./code/4ed_hot_directory.cpp:51:64: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
   51 |         hot_directory_quick_sort(files->infos, 0, files->count - 1);
      |                                                   ~~~~~~~~~~~~~^~~
./code/4ed_hot_directory.cpp: In function ‘void hot_directory_init(Arena*, Hot_Directory*, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed_hot_directory.cpp:77:49: note: in expansion of macro ‘string_expand’
   77 |         dir = push_u8_stringf(scratch, "%.*s/", string_expand(directory));
      |                                                 ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed_hot_directory.cpp:77:49: note: in expansion of macro ‘string_expand’
   77 |         dir = push_u8_stringf(scratch, "%.*s/", string_expand(directory));
      |                                                 ^~~~~~~~~~~~~
./code/4ed_cli.cpp: In function ‘void child_process_container_init(Base_Allocator*, Child_Process_Container*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:19:34: note: in expansion of macro ‘make_table_u64_u64’
   19 |     container->id_to_ptr_table = make_table_u64_u64(allocator, 10);
      |                                  ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:19:34: note: in expansion of macro ‘make_table_u64_u64’
   19 |     container->id_to_ptr_table = make_table_u64_u64(allocator, 10);
      |                                  ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:19:34: note: in expansion of macro ‘make_table_u64_u64’
   19 |     container->id_to_ptr_table = make_table_u64_u64(allocator, 10);
      |                                  ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:20:42: note: in expansion of macro ‘make_table_u64_u64’
   20 |     container->id_to_return_code_table = make_table_u64_u64(allocator, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:20:42: note: in expansion of macro ‘make_table_u64_u64’
   20 |     container->id_to_return_code_table = make_table_u64_u64(allocator, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:20:42: note: in expansion of macro ‘make_table_u64_u64’
   20 |     container->id_to_return_code_table = make_table_u64_u64(allocator, 10);
      |                                          ^~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:118:
./code/4ed_cli.cpp: In function ‘void child_process_container_release(Child_Process_Container*, Models*)’:
./code/4ed_cli.cpp:24:77: warning: unused parameter ‘models’ [-Wunused-parameter]
   24 | child_process_container_release(Child_Process_Container *container, Models *models){
      |                                                                     ~~~~~~~~^~~~~~
./code/4ed_cli.cpp: In function ‘Child_Process_And_ID child_process_alloc_new(Models*, Child_Process_Container*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_cli.cpp:37:23: note: in expansion of macro ‘CastFromMember’
   37 |         new_process = CastFromMember(Child_Process, node, new_node);
      |                       ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_cli.cpp:37:23: note: in expansion of macro ‘CastFromMember’
   37 |         new_process = CastFromMember(Child_Process, node, new_node);
      |                       ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_cli.cpp:37:23: note: in expansion of macro ‘CastFromMember’
   37 |         new_process = CastFromMember(Child_Process, node, new_node);
      |                       ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_cli.cpp:37:23: note: in expansion of macro ‘CastFromMember’
   37 |         new_process = CastFromMember(Child_Process, node, new_node);
      |                       ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_cli.cpp:37:23: note: in expansion of macro ‘CastFromMember’
   37 |         new_process = CastFromMember(Child_Process, node, new_node);
      |                       ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:40:23: note: in expansion of macro ‘push_array’
   40 |         new_process = push_array(&container->arena, Child_Process, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:40:23: note: in expansion of macro ‘push_array’
   40 |         new_process = push_array(&container->arena, Child_Process, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:40:23: note: in expansion of macro ‘push_array’
   40 |         new_process = push_array(&container->arena, Child_Process, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_cli.cpp:40:23: note: in expansion of macro ‘push_array’
   40 |         new_process = push_array(&container->arena, Child_Process, 1);
      |                       ^~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_cli.cpp:47:60: note: in expansion of macro ‘PtrAsInt’
   47 |     table_insert(&container->id_to_ptr_table, new_id, (u64)PtrAsInt(new_process));
      |                                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_cli.cpp:47:60: note: in expansion of macro ‘PtrAsInt’
   47 |     table_insert(&container->id_to_ptr_table, new_id, (u64)PtrAsInt(new_process));
      |                                                            ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_cli.cpp:47:60: note: in expansion of macro ‘PtrAsInt’
   47 |     table_insert(&container->id_to_ptr_table, new_id, (u64)PtrAsInt(new_process));
      |                                                            ^~~~~~~~
./code/4ed_cli.cpp:31:33: warning: unused parameter ‘models’ [-Wunused-parameter]
   31 | child_process_alloc_new(Models *models, Child_Process_Container *container){
      |                         ~~~~~~~~^~~~~~
./code/4ed_cli.cpp: In function ‘Child_Process* child_process_from_id(Child_Process_Container*, Child_Process_ID)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_cli.cpp:62:35: note: in expansion of macro ‘IntAsPtr’
   62 |         process = (Child_Process*)IntAsPtr(val);
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_cli.cpp:62:35: note: in expansion of macro ‘IntAsPtr’
   62 |         process = (Child_Process*)IntAsPtr(val);
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_cli.cpp:62:35: note: in expansion of macro ‘IntAsPtr’
   62 |         process = (Child_Process*)IntAsPtr(val);
      |                                   ^~~~~~~~
./code/4ed_cli.cpp: In function ‘b32 child_process_set_return_code(Models*, Child_Process_Container*, Child_Process_ID, i64)’:
./code/4ed_cli.cpp:83:59: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
   83 |     table_insert(&container->id_to_return_code_table, id, val);
      |                                                           ^~~
./code/4ed_cli.cpp:82:39: warning: unused parameter ‘models’ [-Wunused-parameter]
   82 | child_process_set_return_code(Models *models, Child_Process_Container *container, Child_Process_ID id, i64 val){
      |                               ~~~~~~~~^~~~~~
./code/4ed_cli.cpp: In function ‘b32 child_process_lookup_return_code(Child_Process_Container*, Child_Process_ID, i64*)’:
./code/4ed_cli.cpp:92:71: warning: use of old-style cast to ‘u64*’ {aka ‘long unsigned int*’} [-Wold-style-cast]
   92 |         table_read(&container->id_to_return_code_table, lookup, (u64*)out);
      |                                                                       ^~~
      |                                                                 ---------
      |                                                                 reinterpret_cast<u64*> (out)
./code/4ed_cli.cpp: In function ‘b32 child_process_call(Thread_Context*, Models*, String_Const_u8, String_Const_u8, Child_Process_ID*)’:
./code/4ed_cli.cpp:107:48: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  107 |     if (system_cli_call(scratch, (char*)path_n.str, (char*)command_n.str, &cli_handles)){
      |                                                ^~~
      |                                  -----------------
      |                                  reinterpret_cast<char*> (path_n.str)
./code/4ed_cli.cpp:107:70: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  107 |     if (system_cli_call(scratch, (char*)path_n.str, (char*)command_n.str, &cli_handles)){
      |                                                                      ^~~
      |                                                     --------------------
      |                                                     reinterpret_cast<char*> (command_n.str)
./code/4ed_cli.cpp: In function ‘Process_State child_process_get_state(Child_Process_Container*, Child_Process_ID)’:
./code/4ed_cli.cpp:145:20: warning: unused variable ‘child_process’ [-Wunused-variable]
  145 |     Child_Process *child_process = child_process_from_id(child_processes, child_process_id);
      |                    ^~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘Panel* layout__alloc_panel(Layout*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_layout.cpp:39:17: note: in expansion of macro ‘CastFromMember’
   39 |         panel = CastFromMember(Panel, node, node);
      |                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:39:17: note: in expansion of macro ‘CastFromMember’
   39 |         panel = CastFromMember(Panel, node, node);
      |                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:39:17: note: in expansion of macro ‘CastFromMember’
   39 |         panel = CastFromMember(Panel, node, node);
      |                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:39:17: note: in expansion of macro ‘CastFromMember’
   39 |         panel = CastFromMember(Panel, node, node);
      |                 ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_layout.cpp:39:17: note: in expansion of macro ‘CastFromMember’
   39 |         panel = CastFromMember(Panel, node, node);
      |                 ^~~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘void layout__free_panel(Layout*, Panel*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:46:5: note: in expansion of macro ‘Assert’
   46 |     Assert(panel != layout->active_panel);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:47:5: note: in expansion of macro ‘Assert’
   47 |     Assert(panel != layout->root);
      |     ^~~~~~
In file included from ./code/4ed_app_target.cpp:119:
./code/4ed_layout.cpp: In function ‘i32 layout__evaluate_split(Panel_Split, i32, i32)’:
./code/4ed_layout.cpp:65:39: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   65 |             v = i32_round32(lerp((f32)v0, split.v_f32, (f32)v1));
      |                                       ^~
      |                                  -------
      |                                  static_cast<f32> (v0)
./code/4ed_layout.cpp:65:61: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   65 |             v = i32_round32(lerp((f32)v0, split.v_f32, (f32)v1));
      |                                                             ^~
      |                                                        -------
      |                                                        static_cast<f32> (v1)
./code/4ed_layout.cpp:69:39: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   69 |             v = i32_round32(lerp((f32)v1, split.v_f32, (f32)v0));
      |                                       ^~
      |                                  -------
      |                                  static_cast<f32> (v1)
./code/4ed_layout.cpp:69:61: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   69 |             v = i32_round32(lerp((f32)v1, split.v_f32, (f32)v0));
      |                                                             ^~
      |                                                        -------
      |                                                        static_cast<f32> (v0)
./code/4ed_layout.cpp:62:12: warning: switch missing default case [-Wswitch-default]
   62 |     switch (split.kind){
      |            ^
./code/4ed_layout.cpp: In function ‘Panel* layout_get_first_open_panel(Layout*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_layout.cpp:118:20: note: in expansion of macro ‘CastFromMember’
  118 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.next);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:118:20: note: in expansion of macro ‘CastFromMember’
  118 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.next);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:118:20: note: in expansion of macro ‘CastFromMember’
  118 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.next);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:118:20: note: in expansion of macro ‘CastFromMember’
  118 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.next);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_layout.cpp:118:20: note: in expansion of macro ‘CastFromMember’
  118 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.next);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.h:295:28: note: in expansion of macro ‘Assert’
  295 | #define AssertImplies(a,b) Assert(!(a) || (b))
      |                            ^~~~~~
./code/4ed_layout.cpp:122:5: note: in expansion of macro ‘AssertImplies’
  122 |     AssertImplies(panel != 0, panel->kind == PanelKind_Final);
      |     ^~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘Panel* layout_get_last_open_panel(Layout*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_layout.cpp:128:20: note: in expansion of macro ‘CastFromMember’
  128 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.prev);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:128:20: note: in expansion of macro ‘CastFromMember’
  128 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.prev);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:128:20: note: in expansion of macro ‘CastFromMember’
  128 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.prev);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:128:20: note: in expansion of macro ‘CastFromMember’
  128 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.prev);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_layout.cpp:128:20: note: in expansion of macro ‘CastFromMember’
  128 |     Panel *panel = CastFromMember(Panel, node, layout->open_panels.prev);
      |                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.h:295:28: note: in expansion of macro ‘Assert’
  295 | #define AssertImplies(a,b) Assert(!(a) || (b))
      |                            ^~~~~~
./code/4ed_layout.cpp:132:5: note: in expansion of macro ‘AssertImplies’
  132 |     AssertImplies(panel != 0, panel->kind == PanelKind_Final);
      |     ^~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘Panel* layout_get_next_open_panel(Layout*, Panel*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_layout.cpp:138:13: note: in expansion of macro ‘CastFromMember’
  138 |     panel = CastFromMember(Panel, node, panel->node.next);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:138:13: note: in expansion of macro ‘CastFromMember’
  138 |     panel = CastFromMember(Panel, node, panel->node.next);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:138:13: note: in expansion of macro ‘CastFromMember’
  138 |     panel = CastFromMember(Panel, node, panel->node.next);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:138:13: note: in expansion of macro ‘CastFromMember’
  138 |     panel = CastFromMember(Panel, node, panel->node.next);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_layout.cpp:138:13: note: in expansion of macro ‘CastFromMember’
  138 |     panel = CastFromMember(Panel, node, panel->node.next);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.h:295:28: note: in expansion of macro ‘Assert’
  295 | #define AssertImplies(a,b) Assert(!(a) || (b))
      |                            ^~~~~~
./code/4ed_layout.cpp:142:5: note: in expansion of macro ‘AssertImplies’
  142 |     AssertImplies(panel != 0, panel->kind == PanelKind_Final);
      |     ^~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘Panel* layout_get_prev_open_panel(Layout*, Panel*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_layout.cpp:148:13: note: in expansion of macro ‘CastFromMember’
  148 |     panel = CastFromMember(Panel, node, panel->node.prev);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:148:13: note: in expansion of macro ‘CastFromMember’
  148 |     panel = CastFromMember(Panel, node, panel->node.prev);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:148:13: note: in expansion of macro ‘CastFromMember’
  148 |     panel = CastFromMember(Panel, node, panel->node.prev);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:148:13: note: in expansion of macro ‘CastFromMember’
  148 |     panel = CastFromMember(Panel, node, panel->node.prev);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_layout.cpp:148:13: note: in expansion of macro ‘CastFromMember’
  148 |     panel = CastFromMember(Panel, node, panel->node.prev);
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/custom/4coder_base_types.h:295:28: note: in expansion of macro ‘Assert’
  295 | #define AssertImplies(a,b) Assert(!(a) || (b))
      |                            ^~~~~~
./code/4ed_layout.cpp:152:5: note: in expansion of macro ‘AssertImplies’
  152 |     AssertImplies(panel != 0, panel->kind == PanelKind_Final);
      |     ^~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘b32 layout_close_panel(Layout*, Panel*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:228:9: note: in expansion of macro ‘Assert’
  228 |         Assert(parent != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:236:13: note: in expansion of macro ‘Assert’
  236 |             Assert(parent->br_panel == panel);
      |             ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:259:17: note: in expansion of macro ‘Assert’
  259 |                 Assert(g_parent->br_panel == parent);
      |                 ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_layout.cpp:264:13: note: in expansion of macro ‘Assert’
  264 |             Assert(parent == layout->root);
      |             ^~~~~~
./code/4ed_layout.cpp: In function ‘Panel* layout_initialize(Arena*, Layout*)’:
./code/4ed_layout.cpp:286:46: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  286 |     Panel *panels = push_array(arena, Panel, panel_alloc_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp:286:21: note: in expansion of macro ‘push_array’
  286 |     Panel *panels = push_array(arena, Panel, panel_alloc_count);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp:286:21: note: in expansion of macro ‘push_array’
  286 |     Panel *panels = push_array(arena, Panel, panel_alloc_count);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp:286:21: note: in expansion of macro ‘push_array’
  286 |     Panel *panels = push_array(arena, Panel, panel_alloc_count);
      |                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_layout.cpp:286:21: note: in expansion of macro ‘push_array’
  286 |     Panel *panels = push_array(arena, Panel, panel_alloc_count);
      |                     ^~~~~~~~~~
./code/4ed_layout.cpp:287:40: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  287 |     block_zero(panels, sizeof(*panels)*panel_alloc_count);
      |                                        ^~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp: In function ‘void layout__reverse_evaluate_panel_split(Panel*, i32)’:
./code/4ed_layout.cpp:432:46: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  432 |             panel->split.v_f32 = unlerp((f32)v0, (f32)position, (f32)v1);
      |                                              ^~
      |                                         -------
      |                                         static_cast<f32> (v0)
./code/4ed_layout.cpp:432:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  432 |             panel->split.v_f32 = unlerp((f32)v0, (f32)position, (f32)v1);
      |                                                       ^~~~~~~~
      |                                                  -------------
      |                                                  static_cast<f32> (position)
./code/4ed_layout.cpp:432:70: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  432 |             panel->split.v_f32 = unlerp((f32)v0, (f32)position, (f32)v1);
      |                                                                      ^~
      |                                                                 -------
      |                                                                 static_cast<f32> (v1)
./code/4ed_layout.cpp:436:46: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  436 |             panel->split.v_f32 = unlerp((f32)v1, (f32)position, (f32)v0);
      |                                              ^~
      |                                         -------
      |                                         static_cast<f32> (v1)
./code/4ed_layout.cpp:436:55: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  436 |             panel->split.v_f32 = unlerp((f32)v1, (f32)position, (f32)v0);
      |                                                       ^~~~~~~~
      |                                                  -------------
      |                                                  static_cast<f32> (position)
./code/4ed_layout.cpp:436:70: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  436 |             panel->split.v_f32 = unlerp((f32)v1, (f32)position, (f32)v0);
      |                                                                      ^~
      |                                                                 -------
      |                                                                 static_cast<f32> (v0)
./code/4ed_layout.cpp:429:12: warning: switch missing default case [-Wswitch-default]
  429 |     switch (panel->split.kind){
      |            ^
./code/4ed_layout.cpp: In function ‘Panel_ID panel_get_id(Layout*, Panel*)’:
./code/4ed_layout.cpp:479:52: warning: use of old-style cast to ‘Panel_ID’ {aka ‘int’} [-Wold-style-cast]
  479 |         id = (Panel_ID)(panel - layout->panel_first) + 1;
      |                                                    ^
      |              ----------
      |              static_cast<Panel_ID> (                )
In file included from ./code/4ed_app_target.cpp:120:
./code/4ed_view.cpp: In function ‘void init_query_set(Query_Set*)’:
./code/4ed_view.cpp:25:25: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
   25 |     for (i32 i = 0; i+1 < ArrayCount(set->slots); ++i, ++slot){
./code/4ed_view.cpp: In function ‘Access_Flag view_get_access_flags(View*)’:
./code/custom/4coder_base_types.h:313:32: warning: unsigned conversion from ‘int’ to ‘Access_Flag’ {aka ‘unsigned int’} changes value from ‘-5’ to ‘4294967291’ [-Wsign-conversion]
  313 | #define RemFlag(fi,fl) ((fi)&=(~(fl)))
      |                               ~^~~~~~
./code/4ed_view.cpp:81:9: note: in expansion of macro ‘RemFlag’
   81 |         RemFlag(result, Access_Visible);
      |         ^~~~~~~
./code/4ed_view.cpp: In function ‘i32 view_get_index(Live_Views*, View*)’:
./code/4ed_view.cpp:88:40: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   88 |     return((i32)(view - live_set->views));
      |                                        ^
      |            -----
      |            static_cast<i32> (           )
./code/4ed_view.cpp: In function ‘View_ID view_get_id(Live_Views*, View*)’:
./code/4ed_view.cpp:93:44: warning: use of old-style cast to ‘View_ID’ {aka ‘int’} [-Wold-style-cast]
   93 |     return((View_ID)(view - live_set->views) + 1);
      |                                            ^
      |            ---------
      |            static_cast<View_ID> (           )
./code/4ed_view.cpp: In function ‘View* live_set_alloc_view(Lifetime_Allocator*, Live_Views*, Panel*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:98:5: note: in expansion of macro ‘Assert’
   98 |     Assert(live_set->count < live_set->max);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘void live_set_free_view(Lifetime_Allocator*, Live_Views*, View*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:116:5: note: in expansion of macro ‘Assert’
  116 |     Assert(live_set->count > 0);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘b32 view_move_cursor_to_view(Thread_Context*, Models*, View*, Buffer_Scroll, i64*, f32)’:
./code/4ed_view.cpp:385:119: warning: unused parameter ‘preferred_x’ [-Wunused-parameter]
  385 | view_move_cursor_to_view(Thread_Context *tctx, Models *models, View *view, Buffer_Scroll scroll, i64 *pos_in_out, f32 preferred_x){
      |                                                                                                                   ~~~~^~~~~~~~~~~
./code/4ed_view.cpp: In function ‘void view_set_file(Thread_Context*, Models*, View*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:461:5: note: in expansion of macro ‘Assert’
  461 |     Assert(file != 0);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘void view_push_context(View*, View_Context*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:495:31: note: in expansion of macro ‘push_array_zero’
  495 |     View_Context_Node *node = push_array_zero(&view->node_arena, View_Context_Node, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:495:31: note: in expansion of macro ‘push_array_zero’
  495 |     View_Context_Node *node = push_array_zero(&view->node_arena, View_Context_Node, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:495:31: note: in expansion of macro ‘push_array_zero’
  495 |     View_Context_Node *node = push_array_zero(&view->node_arena, View_Context_Node, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct View_Context_Node*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_view.cpp:495:31: note: in expansion of macro ‘push_array_zero’
  495 |     View_Context_Node *node = push_array_zero(&view->node_arena, View_Context_Node, 1);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:499:31: note: in expansion of macro ‘push_array_zero’
  499 |     node->delta_rule_memory = push_array_zero(&view->node_arena, u8, ctx->delta_rule_memory_size);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:499:31: note: in expansion of macro ‘push_array_zero’
  499 |     node->delta_rule_memory = push_array_zero(&view->node_arena, u8, ctx->delta_rule_memory_size);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:499:31: note: in expansion of macro ‘push_array_zero’
  499 |     node->delta_rule_memory = push_array_zero(&view->node_arena, u8, ctx->delta_rule_memory_size);
      |                               ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_view.cpp:499:31: note: in expansion of macro ‘push_array_zero’
  499 |     node->delta_rule_memory = push_array_zero(&view->node_arena, u8, ctx->delta_rule_memory_size);
      |                               ^~~~~~~~~~~~~~~
./code/4ed_view.cpp: In function ‘void view_alter_context(View*, View_Context*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:505:5: note: in expansion of macro ‘Assert’
  505 |     Assert(node != 0);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘void view_pop_context(View*)’:
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘view->View::ctx’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_view.cpp:513:9: note: in expansion of macro ‘sll_stack_pop’
  513 |         sll_stack_pop(view->ctx);
      |         ^~~~~~~~~~~~~
./code/4ed_view.cpp: In function ‘Coroutine* co_handle_request(Thread_Context*, Models*, Coroutine*, Co_Out*)’:
./code/4ed_view.cpp:538:12: warning: switch missing default case [-Wswitch-default]
  538 |     switch (out->request){
      |            ^
./code/4ed_view.cpp: In function ‘void view_event_context_base__inner(Coroutine*)’:
./code/4ed_view.cpp:583:36: warning: use of old-style cast to ‘struct Co_In*’ [-Wold-style-cast]
  583 |     Co_In *in = (Co_In*)coroutine->in;
      |                                    ^~
      |                 --------
      |                 static_cast<Co_In*> ()
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:586:5: note: in expansion of macro ‘Assert’
  586 |     Assert(event_context_base != 0);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘void view_init(Thread_Context*, Models*, View*, Editing_File*, void (*)(Application_Links*))’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:616:5: note: in expansion of macro ‘Assert’
  616 |     Assert(view->co != 0);
      |     ^~~~~~
./code/4ed_view.cpp: In function ‘void view_check_co_exited(Models*, View*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:643:9: note: in expansion of macro ‘Assert’
  643 |         Assert(result);
      |         ^~~~~~
./code/4ed_view.cpp: In function ‘void co_full_abort(Thread_Context*, Models*, View*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_view.cpp:671:29: note: in expansion of macro ‘string_u8_litexpr’
  671 |         print_message(&app, string_u8_litexpr(M));
      |                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_view.cpp:671:29: note: in expansion of macro ‘string_u8_litexpr’
  671 |         print_message(&app, string_u8_litexpr(M));
      |                             ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_view.cpp:671:29: note: in expansion of macro ‘string_u8_litexpr’
  671 |         print_message(&app, string_u8_litexpr(M));
      |                             ^~~~~~~~~~~~~~~~~
./code/4ed_view.cpp: In function ‘b32 co_send_event(Thread_Context*, Models*, View*, Input_Event*)’:
./code/4ed_view.cpp:682:16: warning: unused variable ‘co’ [-Wunused-variable]
  682 |     Coroutine *co = view->co;
      |                ^~
./code/4ed_view.cpp:683:13: warning: unused variable ‘co_out’ [-Wunused-variable]
  683 |     Co_Out *co_out = &view->co_out;
      |             ^~~~~~
./code/4ed_view.cpp: In function ‘void view_quit_ui(Thread_Context*, Models*, View*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_view.cpp:761:33: note: in expansion of macro ‘string_u8_litexpr’
  761 |             print_message(&app, string_u8_litexpr(M));
      |                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_view.cpp:761:33: note: in expansion of macro ‘string_u8_litexpr’
  761 |             print_message(&app, string_u8_litexpr(M));
      |                                 ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_view.cpp:761:33: note: in expansion of macro ‘string_u8_litexpr’
  761 |             print_message(&app, string_u8_litexpr(M));
      |                                 ^~~~~~~~~~~~~~~~~
./code/4ed_view.cpp: In function ‘void global_set_font_and_update_files(Models*, Face*)’:
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_view.cpp:809:30: note: in expansion of macro ‘CastFromMember’
  809 |         Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:809:30: note: in expansion of macro ‘CastFromMember’
  809 |         Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:809:30: note: in expansion of macro ‘CastFromMember’
  809 |         Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:809:30: note: in expansion of macro ‘CastFromMember’
  809 |         Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                              ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_view.cpp:809:30: note: in expansion of macro ‘CastFromMember’
  809 |         Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                              ^~~~~~~~~~~~~~
./code/4ed_view.cpp: In function ‘b32 release_font_and_update(Models*, Face*, Face*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_view.cpp:818:5: note: in expansion of macro ‘Assert’
  818 |     Assert(replacement_face != 0 && replacement_face != face);
      |     ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_view.cpp:823:34: note: in expansion of macro ‘CastFromMember’
  823 |             Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:823:34: note: in expansion of macro ‘CastFromMember’
  823 |             Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:823:34: note: in expansion of macro ‘CastFromMember’
  823 |             Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_view.cpp:823:34: note: in expansion of macro ‘CastFromMember’
  823 |             Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_view.cpp:823:34: note: in expansion of macro ‘CastFromMember’
  823 |             Editing_File *file = CastFromMember(Editing_File, main_chain_node, node);
      |                                  ^~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:121:
./code/4ed_edit.cpp: In function ‘void pre_edit_state_change(Models*, Editing_File*)’:
./code/4ed_edit.cpp:13:31: warning: unused parameter ‘models’ [-Wunused-parameter]
   13 | pre_edit_state_change(Models *models, Editing_File *file){
      |                       ~~~~~~~~^~~~~~
./code/4ed_edit.cpp: In function ‘void edit_fix_markers__write_workspace_markers(Dynamic_Workspace*, Buffer_ID, Cursor_With_Index*, Cursor_With_Index*, i32*, i32*)’:
./code/4ed_edit.cpp:45:45: warning: use of old-style cast to ‘struct Marker*’ [-Wold-style-cast]
   45 |         Marker *markers = (Marker*)(node + 1);
      |                                             ^
      |                           -------------------
      |                           reinterpret_cast<Marker*> ((node + 1))
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:46:9: note: in expansion of macro ‘Assert’
   46 |         Assert(sizeof(*markers) == node->std_header.item_size);
      |         ^~~~~~
./code/4ed_edit.cpp:47:38: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
   47 |         i32 count = node->std_header.count;
      |                     ~~~~~~~~~~~~~~~~~^~~~~
./code/4ed_edit.cpp: In function ‘void edit_fix_markers__read_workspace_markers(Dynamic_Workspace*, Buffer_ID, Cursor_With_Index*, Cursor_With_Index*, i32*, i32*)’:
./code/4ed_edit.cpp:66:45: warning: use of old-style cast to ‘struct Marker*’ [-Wold-style-cast]
   66 |         Marker *markers = (Marker*)(node + 1);
      |                                             ^
      |                           -------------------
      |                           reinterpret_cast<Marker*> ((node + 1))
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:67:9: note: in expansion of macro ‘Assert’
   67 |         Assert(sizeof(*markers) == node->std_header.item_size);
      |         ^~~~~~
./code/4ed_edit.cpp:68:38: warning: conversion to ‘i32’ {aka ‘int’} from ‘u32’ {aka ‘unsigned int’} may change the sign of the result [-Wsign-conversion]
   68 |         i32 count = node->std_header.count;
      |                     ~~~~~~~~~~~~~~~~~^~~~~
./code/4ed_edit.cpp: In function ‘i32 edit_fix_markers__compute_scroll_y(i32, i32, f32)’:
./code/4ed_edit.cpp:89:70: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
   89 |     return((i32)edit_fix_markers__compute_scroll_y(line_height, (f32)old_y_val, new_y_val_aligned));
      |                                                                      ^~~~~~~~~
      |                                                                 --------------
      |                                                                 static_cast<f32> (old_y_val)
./code/4ed_edit.cpp:89:98: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   89 |     return((i32)edit_fix_markers__compute_scroll_y(line_height, (f32)old_y_val, new_y_val_aligned));
      |                                                                                                  ^
      |            -----
      |            static_cast<i32> (                                                                     )
./code/4ed_edit.cpp: In function ‘void edit_fix_markers(Thread_Context*, Models*, Editing_File*, Batch_Edit*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:98:5: note: in expansion of macro ‘Assert’
   98 |     Assert(file_lifetime_object != 0);
      |     ^~~~~~
./code/4ed_edit.cpp:122:73: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  122 |     Cursor_With_Index *cursors = push_array(scratch, Cursor_With_Index, cursor_max);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:122:34: note: in expansion of macro ‘push_array’
  122 |     Cursor_With_Index *cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:122:34: note: in expansion of macro ‘push_array’
  122 |     Cursor_With_Index *cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:122:34: note: in expansion of macro ‘push_array’
  122 |     Cursor_With_Index *cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Cursor_With_Index*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_edit.cpp:122:34: note: in expansion of macro ‘push_array’
  122 |     Cursor_With_Index *cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                  ^~~~~~~~~~
./code/4ed_edit.cpp:123:75: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  123 |     Cursor_With_Index *r_cursors = push_array(scratch, Cursor_With_Index, cursor_max);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:123:36: note: in expansion of macro ‘push_array’
  123 |     Cursor_With_Index *r_cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:123:36: note: in expansion of macro ‘push_array’
  123 |     Cursor_With_Index *r_cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:123:36: note: in expansion of macro ‘push_array’
  123 |     Cursor_With_Index *r_cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Cursor_With_Index*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_edit.cpp:123:36: note: in expansion of macro ‘push_array’
  123 |     Cursor_With_Index *r_cursors = push_array(scratch, Cursor_With_Index, cursor_max);
      |                                    ^~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:126:5: note: in expansion of macro ‘Assert’
  126 |     Assert(cursors != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:127:5: note: in expansion of macro ‘Assert’
  127 |     Assert(r_cursors != 0);
      |     ^~~~~~
./code/4ed_edit.cpp:135:75: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  135 |             write_cursor_with_index(cursors, &cursor_count, (i32)edit_pos.cursor_pos);
      |                                                                           ^~~~~~~~~~
      |                                                             -----
      |                                                             static_cast<i32> (      )
./code/4ed_edit.cpp:136:72: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  136 |             write_cursor_with_index(cursors, &cursor_count, (i32)view->mark);
      |                                                                        ^~~~
      |                                                             ---------------
      |                                                             static_cast<i32> (view->mark)
./code/4ed_edit.cpp:173:15: warning: unused variable ‘face’ [-Wunused-variable]
  173 |         Face *face = file_get_face(models, file);
      |               ^~~~
./code/4ed_edit.cpp: In function ‘void edit__apply(Thread_Context*, Models*, Editing_File*, Range_i64, String_Const_u8, Edit_Behaviors)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:234:5: note: in expansion of macro ‘Assert’
  234 |     Assert(0 <= edit.range.first);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:235:5: note: in expansion of macro ‘Assert’
  235 |     Assert(edit.range.first <= edit.range.one_past_last);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:236:5: note: in expansion of macro ‘Assert’
  236 |     Assert(edit.range.one_past_last <= buffer_size(buffer));
      |     ^~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:240:9: note: in expansion of macro ‘ProfileTLBlock’
  240 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply history");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:41:12: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:41:34: note: in expansion of macro ‘string_u8_litexpr’
   41 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:248:9: note: in expansion of macro ‘ProfileTLBlock’
  248 |         ProfileTLBlock(tctx, &models->profile_list, "edit apply replace range");
      |         ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:249:75: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  249 |         i64 shift_amount = replace_range_shift(edit.range, (i64)edit.text.size);
      |                                                                           ^~~~
      |                                                            -----
      |                                                            static_cast<i64> ( )
./code/4ed_edit.cpp: In function ‘void edit_single(Thread_Context*, Models*, Editing_File*, Range_i64, String_Const_u8, Edit_Behaviors)’:
./code/4ed_edit.cpp:273:75: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  273 |     post_edit_call_hook(tctx, models, file, Ii64_size(range.first, string.size), cursor_range);
      |                                                                    ~~~~~~~^~~~
./code/4ed_edit.cpp: In function ‘void edit__apply_record_forward(Thread_Context*, Models*, Editing_File*, Record*, Edit_Behaviors)’:
./code/4ed_edit.cpp:285:73: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  285 |             Range_i64 range = Ii64(record->single.first, record->single.first + record->single.backward_text.size);
      |                                                          ~~~~~~~~~~~~~~~^~~~~
./code/4ed_edit.cpp:285:79: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  285 |             Range_i64 range = Ii64(record->single.first, record->single.first + record->single.backward_text.size);
      |                                                          ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_edit.cpp:295:38: note: in expansion of macro ‘CastFromMember’
  295 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:295:38: note: in expansion of macro ‘CastFromMember’
  295 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:295:38: note: in expansion of macro ‘CastFromMember’
  295 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:295:38: note: in expansion of macro ‘CastFromMember’
  295 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_edit.cpp:295:38: note: in expansion of macro ‘CastFromMember’
  295 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_edit.cpp:302:13: note: in expansion of macro ‘InvalidPath’
  302 |             InvalidPath;
      |             ^~~~~~~~~~~
./code/4ed_edit.cpp: In function ‘void edit__apply_record_backward(Thread_Context*, Models*, Editing_File*, Record*, Edit_Behaviors)’:
./code/4ed_edit.cpp:316:73: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  316 |             Range_i64 range = Ii64(record->single.first, record->single.first + record->single.forward_text.size);
      |                                                          ~~~~~~~~~~~~~~~^~~~~
./code/4ed_edit.cpp:316:79: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  316 |             Range_i64 range = Ii64(record->single.first, record->single.first + record->single.forward_text.size);
      |                                                          ~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_edit.cpp:326:38: note: in expansion of macro ‘CastFromMember’
  326 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:326:38: note: in expansion of macro ‘CastFromMember’
  326 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:326:38: note: in expansion of macro ‘CastFromMember’
  326 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:326:38: note: in expansion of macro ‘CastFromMember’
  326 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_edit.cpp:326:38: note: in expansion of macro ‘CastFromMember’
  326 |                 Record *sub_record = CastFromMember(Record, node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_edit.cpp:333:13: note: in expansion of macro ‘InvalidPath’
  333 |             InvalidPath;
      |             ^~~~~~~~~~~
./code/4ed_edit.cpp: In function ‘void edit_change_current_history_state(Thread_Context*, Models*, Editing_File*, i32)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:342:9: note: in expansion of macro ‘Assert’
  342 |         Assert(0 <= target_index && target_index <= history->record_count);
      |         ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:346:9: note: in expansion of macro ‘Assert’
  346 |         Assert(record != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_edit.cpp:356:26: note: in expansion of macro ‘CastFromMember’
  356 |                 record = CastFromMember(Record, node, record->node.next);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:356:26: note: in expansion of macro ‘CastFromMember’
  356 |                 record = CastFromMember(Record, node, record->node.next);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:356:26: note: in expansion of macro ‘CastFromMember’
  356 |                 record = CastFromMember(Record, node, record->node.next);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:356:26: note: in expansion of macro ‘CastFromMember’
  356 |                 record = CastFromMember(Record, node, record->node.next);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_edit.cpp:356:26: note: in expansion of macro ‘CastFromMember’
  356 |                 record = CastFromMember(Record, node, record->node.next);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:357:17: note: in expansion of macro ‘Assert’
  357 |                 Assert(record != dummy_record);
      |                 ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:363:17: note: in expansion of macro ‘Assert’
  363 |                 Assert(record != dummy_record);
      |                 ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_edit.cpp:366:26: note: in expansion of macro ‘CastFromMember’
  366 |                 record = CastFromMember(Record, node, record->node.prev);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:366:26: note: in expansion of macro ‘CastFromMember’
  366 |                 record = CastFromMember(Record, node, record->node.prev);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:366:26: note: in expansion of macro ‘CastFromMember’
  366 |                 record = CastFromMember(Record, node, record->node.prev);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_edit.cpp:366:26: note: in expansion of macro ‘CastFromMember’
  366 |                 record = CastFromMember(Record, node, record->node.prev);
      |                          ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Record*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_edit.cpp:366:26: note: in expansion of macro ‘CastFromMember’
  366 |                 record = CastFromMember(Record, node, record->node.prev);
      |                          ^~~~~~~~~~~~~~
./code/4ed_edit.cpp: In function ‘b32 edit_merge_history_range(Thread_Context*, Models*, Editing_File*, History_Record_Index, History_Record_Index, Record_Merge_Flag)’:
./code/4ed_edit.cpp:386:28: warning: switch missing default case [-Wswitch-default]
  386 |                     switch (in_range_handler){
      |                            ^
./code/4ed_edit.cpp: In function ‘b32 edit_batch_check(Thread_Context*, Profile_Global_List*, Batch_Edit*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:421:5: note: in expansion of macro ‘ProfileTLScope’
  421 |     ProfileTLScope(tctx, list, "batch check");
      |     ^~~~~~~~~~~~~~
./code/4ed_edit.cpp: In function ‘b32 edit_batch(Thread_Context*, Models*, Editing_File*, Batch_Edit*, Edit_Behaviors)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:45:12: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:45:34: note: in expansion of macro ‘string_u8_litexpr’
   45 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:444:13: note: in expansion of macro ‘ProfileTLScope’
  444 |             ProfileTLScope(tctx, &models->profile_list, "batch apply");
      |             ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:49:12: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:49:12: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:49:12: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |            ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_profile_static_enable.cpp:49:34: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_profile_static_enable.cpp:49:34: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_profile_static_enable.cpp:49:34: note: in expansion of macro ‘string_u8_litexpr’
   49 | ((T), (L), string_u8_litexpr(N), string_u8_litexpr(file_name_line_number))
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:454:13: note: in expansion of macro ‘ProfileTLBlockNamed’
  454 |             ProfileTLBlockNamed(tctx, &models->profile_list, "batch text edits", profile_edits);
      |             ^~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:484:48: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  484 |                 i64 new_max = (i64)(edit_range.min + insert_string.size);
      |                                     ~~~~~~~~~~~^~~
./code/4ed_edit.cpp:484:72: warning: use of old-style cast to ‘i64’ {aka ‘long int’} [-Wold-style-cast]
  484 |                 i64 new_max = (i64)(edit_range.min + insert_string.size);
      |                                                                        ^
      |                               -----
      |                               static_cast<i64> (                        )
./code/4ed_edit.cpp: In function ‘Editing_File* create_file(Thread_Context*, Models*, String_Const_u8, Buffer_Create_Flag)’:
./code/4ed_edit.cpp:569:67: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  569 |                     if (!system_load_handle(scratch, (char*)canon.name_space, &handle)){
      |                                                                   ^~~~~~~~~~
      |                                                      -----------------------
      |                                                      reinterpret_cast<char*> (canon.name_space)
./code/4ed_edit.cpp:596:74: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
      |                                                                          ^~~~
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/4ed_edit.cpp:596:58: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:596:32: note: in expansion of macro ‘push_array’
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:596:32: note: in expansion of macro ‘push_array’
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:596:32: note: in expansion of macro ‘push_array’
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
      |                                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_edit.cpp:596:32: note: in expansion of macro ‘push_array’
  596 |                 char *buffer = push_array(scratch, char, (i32)attributes.size);
      |                                ^~~~~~~~~~
./code/4ed_edit.cpp:599:69: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  599 |                     buffer = heap_array(heap, char, (i32)attributes.size);
      |                                                                     ^~~~
./code/custom/4coder_base_types.cpp:3615:70: note: in definition of macro ‘heap_array’
 3615 | #define heap_array(heap, T, c) (T*)(heap_allocate((heap), sizeof(T)*(c)))
      |                                                                      ^
./code/4ed_edit.cpp:599:53: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  599 |                     buffer = heap_array(heap, char, (i32)attributes.size);
./code/custom/4coder_base_types.cpp:3615:70: note: in definition of macro ‘heap_array’
 3615 | #define heap_array(heap, T, c) (T*)(heap_allocate((heap), sizeof(T)*(c)))
      |                                                                      ^
./code/custom/4coder_base_types.cpp:3615:73: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3615 | #define heap_array(heap, T, c) (T*)(heap_allocate((heap), sizeof(T)*(c)))
      |                                                                         ^
./code/4ed_edit.cpp:599:30: note: in expansion of macro ‘heap_array’
  599 |                     buffer = heap_array(heap, char, (i32)attributes.size);
      |                              ^~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_edit.cpp:600:21: note: in expansion of macro ‘Assert’
  600 |                     Assert(buffer != 0);
      |                     ^~~~~~
./code/4ed_edit.cpp:604:70: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  604 |                 if (system_load_file(handle, buffer, (i32)attributes.size)){
      |                                                                      ^~~~
      |                                                      -----
      |                                                      static_cast<i32> (  )
./code/4ed_edit.cpp:604:54: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  604 |                 if (system_load_file(handle, buffer, (i32)attributes.size)){
      |                                                      ^~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:611:98: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  611 |                         file_create_from_string(tctx, models, file, SCu8(buffer, (i32)attributes.size), attributes);
      |                                                                                                  ^~~~
      |                                                                                  -----
      |                                                                                  static_cast<i32> (  )
./code/4ed_edit.cpp:611:82: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  611 |                         file_create_from_string(tctx, models, file, SCu8(buffer, (i32)attributes.size), attributes);
      |                                                                                  ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_edit.cpp:636:64: note: in expansion of macro ‘string_u8_litexpr’
  636 |                 edit_single(tctx, models, file, Ii64(0, size), string_u8_litexpr(""), behaviors);
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_edit.cpp:636:64: note: in expansion of macro ‘string_u8_litexpr’
  636 |                 edit_single(tctx, models, file, Ii64(0, size), string_u8_litexpr(""), behaviors);
      |                                                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_edit.cpp:636:64: note: in expansion of macro ‘string_u8_litexpr’
  636 |                 edit_single(tctx, models, file, Ii64(0, size), string_u8_litexpr(""), behaviors);
      |                                                                ^~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp: In function ‘void text_layout_init(Thread_Context*, Text_Layout_Container*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:16:24: note: in expansion of macro ‘make_table_u64_u64’
   16 |     container->table = make_table_u64_u64(tctx->allocator, 20);
      |                        ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:16:24: note: in expansion of macro ‘make_table_u64_u64’
   16 |     container->table = make_table_u64_u64(tctx->allocator, 20);
      |                        ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:39:67: note: in expansion of macro ‘file_name_line_number_lit_u8’
   39 | #define make_table_u64_u64(a,s) make_table_u64_u64__inner((a),(s),file_name_line_number_lit_u8)
      |                                                                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:16:24: note: in expansion of macro ‘make_table_u64_u64’
   16 |     container->table = make_table_u64_u64(tctx->allocator, 20);
      |                        ^~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp: In function ‘Text_Layout* text_layout_new__alloc_layout(Text_Layout_Container*)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:23:16: note: in expansion of macro ‘push_array’
   23 |         node = push_array(&container->node_arena, Text_Layout, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:23:16: note: in expansion of macro ‘push_array’
   23 |         node = push_array(&container->node_arena, Text_Layout, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:23:16: note: in expansion of macro ‘push_array’
   23 |         node = push_array(&container->node_arena, Text_Layout, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘union Text_Layout*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_text_layout.cpp:23:16: note: in expansion of macro ‘push_array’
   23 |         node = push_array(&container->node_arena, Text_Layout, 1);
      |                ^~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘container->Text_Layout_Container::free_nodes’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed_text_layout.cpp:26:9: note: in expansion of macro ‘sll_stack_pop’
   26 |         sll_stack_pop(container->free_nodes);
      |         ^~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:122:
./code/4ed_text_layout.cpp: In function ‘void text_layout_release(Thread_Context*, Models*, Text_Layout_Container*, Text_Layout*)’:
./code/4ed_text_layout.cpp:32:37: warning: unused parameter ‘tctx’ [-Wunused-parameter]
   32 | text_layout_release(Thread_Context *tctx, Models *models, Text_Layout_Container *container, Text_Layout *layout){
      |                     ~~~~~~~~~~~~~~~~^~~~
./code/4ed_text_layout.cpp:32:51: warning: unused parameter ‘models’ [-Wunused-parameter]
   32 | text_layout_release(Thread_Context *tctx, Models *models, Text_Layout_Container *container, Text_Layout *layout){
      |                                           ~~~~~~~~^~~~~~
./code/4ed_text_layout.cpp: In function ‘Text_Layout_ID text_layout_new(Text_Layout_Container*, Arena*, Buffer_ID, Buffer_Point, Range_i64, Range_i64, Rect_f32, ARGB_Color*, Layout_Item_List (*)(Application_Links*, Arena*, Buffer_ID, Range_i64, Face_ID, f32))’:
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_text_layout.cpp:53:50: note: in expansion of macro ‘PtrAsInt’
   53 |     table_insert(&container->table, new_id, (u64)PtrAsInt(new_layout_data));
      |                                                  ^~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_text_layout.cpp:53:50: note: in expansion of macro ‘PtrAsInt’
   53 |     table_insert(&container->table, new_id, (u64)PtrAsInt(new_layout_data));
      |                                                  ^~~~~~~~
./code/custom/4coder_base_types.h:252:41: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                         ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/4ed_text_layout.cpp:53:50: note: in expansion of macro ‘PtrAsInt’
   53 |     table_insert(&container->table, new_id, (u64)PtrAsInt(new_layout_data));
      |                                                  ^~~~~~~~
./code/4ed_text_layout.cpp: In function ‘Text_Layout* text_layout_get(Text_Layout_Container*, Text_Layout_ID)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_text_layout.cpp:64:32: note: in expansion of macro ‘IntAsPtr’
   64 |         result = (Text_Layout*)IntAsPtr(ptr_val);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_text_layout.cpp:64:32: note: in expansion of macro ‘IntAsPtr’
   64 |         result = (Text_Layout*)IntAsPtr(ptr_val);
      |                                ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘union Text_Layout*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_text_layout.cpp:64:32: note: in expansion of macro ‘IntAsPtr’
   64 |         result = (Text_Layout*)IntAsPtr(ptr_val);
      |                                ^~~~~~~~
./code/4ed_text_layout.cpp: In function ‘b32 text_layout_erase(Thread_Context*, Models*, Text_Layout_Container*, Text_Layout_ID)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_text_layout.cpp:76:42: note: in expansion of macro ‘IntAsPtr’
   76 |         Text_Layout *ptr = (Text_Layout*)IntAsPtr(ptr_val);
      |                                          ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_text_layout.cpp:76:42: note: in expansion of macro ‘IntAsPtr’
   76 |         Text_Layout *ptr = (Text_Layout*)IntAsPtr(ptr_val);
      |                                          ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘union Text_Layout*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_text_layout.cpp:76:42: note: in expansion of macro ‘IntAsPtr’
   76 |         Text_Layout *ptr = (Text_Layout*)IntAsPtr(ptr_val);
      |                                          ^~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘void file_cursor_to_end(Thread_Context*, Models*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:22:5: note: in expansion of macro ‘Assert’
   22 |     Assert(file != 0);
      |     ^~~~~~
In file included from ./code/4ed_app_target.cpp:123:
./code/4ed_api_implementation.cpp: In function ‘b32 is_running_coroutine(Application_Links*)’:
./code/4ed_api_implementation.cpp:76:73: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
   76 |     Thread_Context_Extra_Info *info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                         ^~~~~~~~~
      |                                       -
      |                                       static_cast<               -
      |                                                                  > (             )
./code/4ed_api_implementation.cpp: In function ‘b32 global_set_setting(Application_Links*, Global_Setting_ID, i64)’:
./code/4ed_api_implementation.cpp:82:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
   82 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:87:68: warning: use of old-style cast to ‘b32’ {aka ‘int’} [-Wold-style-cast]
   87 |             models->settings.lctrl_lalt_is_altgr = (b32)(value != 0);
      |                                                                    ^
      |                                                    -----------------
      |                                                    static_cast<b32> ((value != 0))
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 global_get_screen_rectangle(Application_Links*)’:
./code/4ed_api_implementation.cpp:99:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
   99 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Child_Process_ID create_child_process(Application_Links*, String_Const_u8, String_Const_u8)’:
./code/4ed_api_implementation.cpp:110:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  110 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 child_process_set_target_buffer(Application_Links*, Child_Process_ID, Buffer_ID, Child_Process_Set_Target_Flags)’:
./code/4ed_api_implementation.cpp:120:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  120 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Child_Process_ID buffer_get_attached_child_process(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:132:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  132 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID child_process_get_attached_buffer(Application_Links*, Child_Process_ID)’:
./code/4ed_api_implementation.cpp:143:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  143 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Process_State child_process_get_state(Application_Links*, Child_Process_ID)’:
./code/4ed_api_implementation.cpp:154:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  154 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 enqueue_virtual_event(Application_Links*, Input_Event*)’:
./code/4ed_api_implementation.cpp:160:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  160 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i32 get_buffer_count(Application_Links*)’:
./code/4ed_api_implementation.cpp:171:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  171 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID get_buffer_next(Application_Links*, Buffer_ID, Access_Flag)’:
./code/4ed_api_implementation.cpp:179:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  179 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID get_buffer_by_name(Application_Links*, String_Const_u8, Access_Flag)’:
./code/4ed_api_implementation.cpp:196:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  196 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID get_buffer_by_file_name(Application_Links*, String_Const_u8, Access_Flag)’:
./code/4ed_api_implementation.cpp:209:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  209 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_read_range(Application_Links*, Buffer_ID, Range_i64, u8*)’:
./code/4ed_api_implementation.cpp:226:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  226 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Edit_Behaviors get_active_edit_behaviors(Models*, Editing_File*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:244:5: note: in expansion of macro ‘Assert’
  244 |     Assert(panel != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:246:5: note: in expansion of macro ‘Assert’
  246 |     Assert(view != 0);
      |     ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_replace_range(Application_Links*, Buffer_ID, Range_i64, String_Const_u8)’:
./code/4ed_api_implementation.cpp:260:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  260 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_batch_edit(Application_Links*, Buffer_ID, Batch_Edit*)’:
./code/4ed_api_implementation.cpp:277:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  277 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Match buffer_seek_string(Application_Links*, Buffer_ID, String_Const_u8, Scan_Direction, i64)’:
./code/4ed_api_implementation.cpp:289:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  289 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:309:46: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  309 |                 i64 adjusted_pos = start_pos - 1 + needle.size;
      |                                    ~~~~~~~~~~^~~
./code/4ed_api_implementation.cpp:309:50: warning: conversion to ‘i64’ {aka ‘long int’} from ‘long unsigned int’ may change the sign of the result [-Wsign-conversion]
  309 |                 i64 adjusted_pos = start_pos - 1 + needle.size;
      |                                    ~~~~~~~~~~~~~~^~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:319:65: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  319 |                                                           range.min, buffer, 0);
      |                                                           ~~~~~~^~~
./code/4ed_api_implementation.cpp: In function ‘String_Match buffer_seek_character_class(Application_Links*, Buffer_ID, Character_Predicate*, Scan_Direction, i64)’:
./code/4ed_api_implementation.cpp:334:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  334 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:354:54: warning: missing initializer for member ‘String_Const_u8_Array::count’ [-Wmissing-field-initializers]
  354 |             String_Const_u8_Array chunks = {chunk_mem};
      |                                                      ^
./code/4ed_api_implementation.cpp: In function ‘f32 buffer_line_y_difference(Application_Links*, Buffer_ID, f32, Face_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:390:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  390 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Line_Shift_Vertical buffer_line_shift_y(Application_Links*, Buffer_ID, f32, Face_ID, i64, f32)’:
./code/4ed_api_implementation.cpp:409:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  409 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 buffer_pos_at_relative_xy(Application_Links*, Buffer_ID, f32, Face_ID, i64, Vec2_f32)’:
./code/4ed_api_implementation.cpp:428:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  428 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 buffer_relative_box_of_pos(Application_Links*, Buffer_ID, f32, Face_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:445:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  445 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 buffer_padded_box_of_pos(Application_Links*, Buffer_ID, f32, Face_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:462:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  462 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 buffer_relative_character_from_pos(Application_Links*, Buffer_ID, f32, Face_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:481:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  481 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 buffer_pos_from_relative_character(Application_Links*, Buffer_ID, f32, Face_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:499:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  499 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘f32 view_line_y_difference(Application_Links*, View_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:517:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  517 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Line_Shift_Vertical view_line_shift_y(Application_Links*, View_ID, i64, f32)’:
./code/4ed_api_implementation.cpp:528:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  528 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 view_pos_at_relative_xy(Application_Links*, View_ID, i64, Vec2_f32)’:
./code/4ed_api_implementation.cpp:539:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  539 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 view_relative_box_of_pos(Application_Links*, View_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:550:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  550 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 view_padded_box_of_pos(Application_Links*, View_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:561:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  561 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 view_relative_character_from_pos(Application_Links*, View_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:572:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  572 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 view_pos_from_relative_character(Application_Links*, View_ID, i64, i64)’:
./code/4ed_api_implementation.cpp:583:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  583 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_exists(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:594:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  594 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Access_Flag buffer_get_access_flags(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:601:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  601 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 buffer_get_size(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:612:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  612 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 buffer_get_line_count(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:623:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  623 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:627:35: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
  627 |         result = buffer_line_count(&file->state.buffer);
      |                  ~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:629:12: warning: conversion to ‘i64’ {aka ‘long int’} from ‘u64’ {aka ‘long unsigned int’} may change the sign of the result [-Wsign-conversion]
  629 |     return(result);
      |           ~^~~~~~~
./code/4ed_api_implementation.cpp: In function ‘String_Const_u8 push_buffer_base_name(Application_Links*, Arena*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:634:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  634 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Const_u8 push_buffer_unique_name(Application_Links*, Arena*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:645:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  645 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Const_u8 push_buffer_file_name(Application_Links*, Arena*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:656:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  656 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Dirty_State buffer_get_dirty_state(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:667:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  667 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_set_dirty_state(Application_Links*, Buffer_ID, Dirty_State)’:
./code/4ed_api_implementation.cpp:678:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  678 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_set_layout(Application_Links*, Buffer_ID, Layout_Item_List (*)(Application_Links*, Arena*, Buffer_ID, Range_i64, Face_ID, f32))’:
./code/4ed_api_implementation.cpp:690:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  690 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_clear_layout_cache(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:703:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  703 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Layout_Item_List (* buffer_get_layout(Application_Links*, Buffer_ID))(Application_Links*, Arena*, Buffer_ID, Range_i64, Face_ID, f32)’:
./code/4ed_api_implementation.cpp:715:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  715 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_get_setting(Application_Links*, Buffer_ID, Buffer_Setting_ID, i64*)’:
./code/4ed_api_implementation.cpp:727:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  727 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_set_setting(Application_Links*, Buffer_ID, Buffer_Setting_ID, i64)’:
./code/4ed_api_implementation.cpp:765:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  765 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope buffer_get_managed_scope(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:818:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  818 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_send_end_signal(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:830:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  830 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID create_buffer(Application_Links*, String_Const_u8, Buffer_Create_Flag)’:
./code/4ed_api_implementation.cpp:843:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  843 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_save(Application_Links*, Buffer_ID, String_Const_u8, Buffer_Save_Flag)’:
./code/4ed_api_implementation.cpp:855:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  855 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_Kill_Result buffer_kill(Application_Links*, Buffer_ID, Buffer_Kill_Flag)’:
./code/4ed_api_implementation.cpp:882:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  882 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:911:25: note: in expansion of macro ‘Assert’
  911 |                         Assert(file_node != order);
      |                         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_api_implementation.cpp:913:50: note: in expansion of macro ‘CastFromMember’
  913 |                         Editing_File *new_file = CastFromMember(Editing_File, touch_node, file_node);
      |                                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:913:50: note: in expansion of macro ‘CastFromMember’
  913 |                         Editing_File *new_file = CastFromMember(Editing_File, touch_node, file_node);
      |                                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:913:50: note: in expansion of macro ‘CastFromMember’
  913 |                         Editing_File *new_file = CastFromMember(Editing_File, touch_node, file_node);
      |                                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:913:50: note: in expansion of macro ‘CastFromMember’
  913 |                         Editing_File *new_file = CastFromMember(Editing_File, touch_node, file_node);
      |                                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_api_implementation.cpp:913:50: note: in expansion of macro ‘CastFromMember’
  913 |                         Editing_File *new_file = CastFromMember(Editing_File, touch_node, file_node);
      |                                                  ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:919:25: note: in expansion of macro ‘Assert’
  919 |                         Assert(file_node != order);
      |                         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed_api_implementation.cpp:927:52: note: in expansion of macro ‘CastFromMember’
  927 |                     Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:927:52: note: in expansion of macro ‘CastFromMember’
  927 |                     Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:927:52: note: in expansion of macro ‘CastFromMember’
  927 |                     Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:927:52: note: in expansion of macro ‘CastFromMember’
  927 |                     Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                                    ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed_api_implementation.cpp:927:52: note: in expansion of macro ‘CastFromMember’
  927 |                     Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                                    ^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Buffer_Reopen_Result buffer_reopen(Application_Links*, Buffer_ID, Buffer_Reopen_Flag)’:
./code/4ed_api_implementation.cpp:949:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  949 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:957:64: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
  957 |             if (system_load_handle(scratch, (char*)file->canon.name_space, &handle)){
      |                                                                ^~~~~~~~~~
      |                                             -------
      |                                             reinterpret_cast<char*> (    )
./code/4ed_api_implementation.cpp:960:79: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
      |                                                                               ^~~~
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/4ed_api_implementation.cpp:960:63: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:960:37: note: in expansion of macro ‘push_array’
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
      |                                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:960:37: note: in expansion of macro ‘push_array’
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
      |                                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:960:37: note: in expansion of macro ‘push_array’
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
      |                                     ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_implementation.cpp:960:37: note: in expansion of macro ‘push_array’
  960 |                 char *file_memory = push_array(scratch, char, (i32)attributes.size);
      |                                     ^~~~~~~~~~
./code/4ed_api_implementation.cpp:963:79: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  963 |                     if (system_load_file(handle, file_memory, (i32)attributes.size)){
      |                                                                               ^~~~
      |                                                               -----
      |                                                               static_cast<i32> (  )
./code/4ed_api_implementation.cpp:963:63: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  963 |                     if (system_load_file(handle, file_memory, (i32)attributes.size)){
      |                                                               ^~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:982:74: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  982 |                                 line_numbers[vptr_count]   = (i32)cursor.line;
      |                                                                          ^~~~
      |                                                              ----------------
      |                                                              static_cast<i32> (cursor.line)
./code/4ed_api_implementation.cpp:983:74: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  983 |                                 column_numbers[vptr_count] = (i32)cursor.col;
      |                                                                          ^~~
      |                                                              ---------------
      |                                                              static_cast<i32> (cursor.col)
./code/4ed_api_implementation.cpp:947:79: warning: unused parameter ‘flags’ [-Wunused-parameter]
  947 | buffer_reopen(Application_Links *app, Buffer_ID buffer_id, Buffer_Reopen_Flag flags)
      |                                                            ~~~~~~~~~~~~~~~~~~~^~~~~
./code/4ed_api_implementation.cpp: In function ‘File_Attributes buffer_get_file_attributes(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:1021:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1021 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘View_ID get_view_next(Application_Links*, View_ID, Access_Flag)’:
./code/4ed_api_implementation.cpp:1071:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1071 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘View_ID get_view_prev(Application_Links*, View_ID, Access_Flag)’:
./code/4ed_api_implementation.cpp:1088:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1088 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘View_ID get_this_ctx_view(Application_Links*, Access_Flag)’:
./code/4ed_api_implementation.cpp:1105:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1105 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1107:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 1107 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:1110:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 1110 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/4ed_api_implementation.cpp:1111:40: warning: use of old-style cast to ‘struct View*’ [-Wold-style-cast]
 1111 |         View *view = (View*)coroutine->user_data;
      |                                        ^~~~~~~~~
      |                      -------
      |                      static_cast<View*> (       )
./code/4ed_api_implementation.cpp:1103:55: warning: unused parameter ‘access’ [-Wunused-parameter]
 1103 | get_this_ctx_view(Application_Links *app, Access_Flag access)
      |                                           ~~~~~~~~~~~~^~~~~~
./code/4ed_api_implementation.cpp: In function ‘View_ID get_active_view(Application_Links*, Access_Flag)’:
./code/4ed_api_implementation.cpp:1122:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1122 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1124:5: note: in expansion of macro ‘Assert’
 1124 |     Assert(panel != 0);
      |     ^~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1126:5: note: in expansion of macro ‘Assert’
 1126 |     Assert(view != 0);
      |     ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 view_exists(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1136:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1136 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID view_get_buffer(Application_Links*, View_ID, Access_Flag)’:
./code/4ed_api_implementation.cpp:1147:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1147 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 view_get_cursor_pos(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1161:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1161 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘i64 view_get_mark_pos(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1173:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1173 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘f32 view_get_preferred_x(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1184:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1184 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_preferred_x(Application_Links*, View_ID, f32)’:
./code/4ed_api_implementation.cpp:1195:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1195 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 view_get_screen_rect(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1207:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1207 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Panel_ID view_get_panel(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1218:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1218 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘View_ID panel_get_view(Application_Links*, Panel_ID, Access_Flag)’:
./code/4ed_api_implementation.cpp:1231:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1231 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 panel_is_split(Application_Links*, Panel_ID)’:
./code/4ed_api_implementation.cpp:1247:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1247 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 panel_is_leaf(Application_Links*, Panel_ID)’:
./code/4ed_api_implementation.cpp:1260:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1260 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 panel_split(Application_Links*, Panel_ID, Dimension)’:
./code/4ed_api_implementation.cpp:1273:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1273 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 panel_set_split(Application_Links*, Panel_ID, Panel_Split_Kind, f32)’:
./code/4ed_api_implementation.cpp:1293:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1293 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_implementation.cpp:1315:40: note: in expansion of macro ‘string_u8_litexpr’
 1315 |                     print_message(app, string_u8_litexpr("Invalid split kind passed to panel_set_split, no change made to view layout"));
      |                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_implementation.cpp:1315:40: note: in expansion of macro ‘string_u8_litexpr’
 1315 |                     print_message(app, string_u8_litexpr("Invalid split kind passed to panel_set_split, no change made to view layout"));
      |                                        ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_implementation.cpp:1315:40: note: in expansion of macro ‘string_u8_litexpr’
 1315 |                     print_message(app, string_u8_litexpr("Invalid split kind passed to panel_set_split, no change made to view layout"));
      |                                        ^~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 panel_swap_children(Application_Links*, Panel_ID)’:
./code/4ed_api_implementation.cpp:1327:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1327 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Panel_ID panel_get_root(Application_Links*)’:
./code/4ed_api_implementation.cpp:1342:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1342 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Panel_ID panel_get_parent(Application_Links*, Panel_ID)’:
./code/4ed_api_implementation.cpp:1350:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1350 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Panel_ID panel_get_child(Application_Links*, Panel_ID, Side)’:
./code/4ed_api_implementation.cpp:1362:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1362 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1369:20: warning: switch missing default case [-Wswitch-default]
 1369 |             switch (which_child){
      |                    ^
./code/4ed_api_implementation.cpp: In function ‘b32 view_close(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1390:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1390 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1391:13: warning: unused variable ‘layout’ [-Wunused-variable]
 1391 |     Layout *layout = &models->layout;
      |             ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 view_get_buffer_region(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1402:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1402 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_Scroll view_get_buffer_scroll(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1413:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1413 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_active(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1426:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1426 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_enqueue_command_function(Application_Links*, View_ID, void (*)(Application_Links*))’:
./code/4ed_api_implementation.cpp:1439:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1439 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_get_setting(Application_Links*, View_ID, View_Setting_ID, i64*)’:
./code/4ed_api_implementation.cpp:1452:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1452 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_setting(Application_Links*, View_ID, View_Setting_ID, i64)’:
./code/4ed_api_implementation.cpp:1486:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1486 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1495:45: warning: use of old-style cast to ‘b8’ {aka ‘signed char’} [-Wold-style-cast]
 1495 |                 view->show_whitespace = (b8)value;
      |                                             ^~~~~
      |                                         ---------
      |                                         static_cast<b8> (value)
./code/4ed_api_implementation.cpp:1500:45: warning: use of old-style cast to ‘b8’ {aka ‘signed char’} [-Wold-style-cast]
 1500 |                 view->hide_scrollbar = (b8)!value;
      |                                             ^~~~~
      |                                        ----------
      |                                        static_cast<b8> (!value)
./code/4ed_api_implementation.cpp:1505:44: warning: use of old-style cast to ‘b8’ {aka ‘signed char’} [-Wold-style-cast]
 1505 |                 view->hide_file_bar = (b8)!value;
      |                                            ^~~~~
      |                                       ----------
      |                                       static_cast<b8> (!value)
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope view_get_managed_scope(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1520:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1520 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1524:9: note: in expansion of macro ‘Assert’
 1524 |         Assert(view->lifetime_object != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp:1525:75: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
 1525 |         result = (Managed_Scope)(view->lifetime_object->workspace.scope_id);
      |                                                                           ^
      |                  -
      |                  static_cast<  -
      |                                > (                                         )
./code/4ed_api_implementation.cpp: In function ‘Buffer_Cursor buffer_compute_cursor(Application_Links*, Buffer_ID, Buffer_Seek)’:
./code/4ed_api_implementation.cpp:1533:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1533 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_Cursor view_compute_cursor(Application_Links*, View_ID, Buffer_Seek)’:
./code/4ed_api_implementation.cpp:1544:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1544 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_camera_bounds(Application_Links*, View_ID, Vec2_f32, Vec2_f32)’:
./code/4ed_api_implementation.cpp:1556:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1556 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_get_camera_bounds(Application_Links*, View_ID, Vec2_f32*, Vec2_f32*)’:
./code/4ed_api_implementation.cpp:1574:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1574 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_cursor(Application_Links*, View_ID, Buffer_Seek)’:
./code/4ed_api_implementation.cpp:1588:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1588 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1593:9: note: in expansion of macro ‘Assert’
 1593 |         Assert(file != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_buffer_scroll(Application_Links*, View_ID, Buffer_Scroll, Set_Buffer_Scroll_Rule)’:
./code/4ed_api_implementation.cpp:1607:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1607 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_mark(Application_Links*, View_ID, Buffer_Seek)’:
./code/4ed_api_implementation.cpp:1638:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1638 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1644:9: note: in expansion of macro ‘Assert’
 1644 |         Assert(file != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 view_quit_ui(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1661:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1661 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_set_buffer(Application_Links*, View_ID, Buffer_ID, Set_Buffer_Flag)’:
./code/4ed_api_implementation.cpp:1674:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1674 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_push_context(Application_Links*, View_ID, View_Context*)’:
./code/4ed_api_implementation.cpp:1694:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1694 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_pop_context(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1706:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1706 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 view_alter_context(Application_Links*, View_ID, View_Context*)’:
./code/4ed_api_implementation.cpp:1718:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1718 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘View_Context view_current_context(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:1730:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1730 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Const_u8 view_current_context_hook_memory(Application_Links*, View_ID, Hook_ID)’:
./code/4ed_api_implementation.cpp:1742:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1742 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1748:20: warning: switch missing default case [-Wswitch-default]
 1748 |             switch (hook_id){
      |                    ^
./code/4ed_api_implementation.cpp: In function ‘Dynamic_Workspace* get_dynamic_workspace(Models*, Managed_Scope)’:
./code/custom/4coder_base_types.h:261:35: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                   ^
./code/4ed_api_implementation.cpp:1767:38: note: in expansion of macro ‘IntAsPtr’
 1767 |         result = (Dynamic_Workspace*)IntAsPtr(val);
      |                                      ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘void*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_api_implementation.cpp:1767:38: note: in expansion of macro ‘IntAsPtr’
 1767 |         result = (Dynamic_Workspace*)IntAsPtr(val);
      |                                      ^~~~~~~~
./code/custom/4coder_base_types.h:261:41: warning: use of old-style cast to ‘struct Dynamic_Workspace*’ [-Wold-style-cast]
  261 | #define IntAsPtr(a) (void*)(((u8*)0) + a)
      |                                         ^
./code/4ed_api_implementation.cpp:1767:38: note: in expansion of macro ‘IntAsPtr’
 1767 |         result = (Dynamic_Workspace*)IntAsPtr(val);
      |                                      ^~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope create_user_managed_scope(Application_Links*)’:
./code/4ed_api_implementation.cpp:1775:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1775 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1778:60: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
 1778 |     Managed_Scope scope = (Managed_Scope)object->workspace.scope_id;
      |                                                            ^~~~~~~~
      |                           -
      |                           static_cast<  -
      |                                         > (                        )
./code/4ed_api_implementation.cpp: In function ‘b32 destroy_user_managed_scope(Application_Links*, Managed_Scope)’:
./code/4ed_api_implementation.cpp:1785:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1785 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1789:73: warning: use of old-style cast to ‘union Lifetime_Object*’ [-Wold-style-cast]
 1789 |         Lifetime_Object *lifetime_object = (Lifetime_Object*)workspace->user_back_ptr;
      |                                                                         ^~~~~~~~~~~~~
      |                                            -
      |                                            static_cast<     -
      |                                                             > (                      )
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope get_global_managed_scope(Application_Links*)’:
./code/4ed_api_implementation.cpp:1799:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1799 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:1800:53: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
 1800 |     return((Managed_Scope)models->dynamic_workspace.scope_id);
      |                                                     ^~~~~~~~
      |            -
      |            static_cast<  -
      |                          > (                                )
./code/4ed_api_implementation.cpp: In function ‘Lifetime_Object* get_lifetime_object_from_workspace(Dynamic_Workspace*)’:
./code/4ed_api_implementation.cpp:1809:51: warning: use of old-style cast to ‘union Lifetime_Object*’ [-Wold-style-cast]
 1809 |             result = (Lifetime_Object*)workspace->user_back_ptr;
      |                                                   ^~~~~~~~~~~~~
      |                      -
      |                      static_cast<     -
      |                                       > (                      )
./code/4ed_api_implementation.cpp:1813:60: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
 1813 |             Editing_File *file = (Editing_File*)workspace->user_back_ptr;
      |                                                            ^~~~~~~~~~~~~
      |                                  -
      |                                  static_cast<  -
      |                                                > (                      )
./code/4ed_api_implementation.cpp:1818:44: warning: use of old-style cast to ‘struct View*’ [-Wold-style-cast]
 1818 |             View *vptr = (View*)workspace->user_back_ptr;
      |                                            ^~~~~~~~~~~~~
      |                          -------
      |                          static_cast<View*> (           )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1823:13: note: in expansion of macro ‘InvalidPath’
 1823 |             InvalidPath;
      |             ^~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope get_managed_scope_with_multiple_dependencies(Application_Links*, Managed_Scope*, i32)’:
./code/4ed_api_implementation.cpp:1832:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1832 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1866:17: note: in expansion of macro ‘Assert’
 1866 |                 Assert(object != 0);
      |                 ^~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1867:38: note: in expansion of macro ‘push_array’
 1867 |                 Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1867:38: note: in expansion of macro ‘push_array’
 1867 |                 Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1867:38: note: in expansion of macro ‘push_array’
 1867 |                 Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct get_managed_scope_with_multiple_dependencies(Application_Links*, Managed_Scope*, i32)::Node_Ptr*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_implementation.cpp:1867:38: note: in expansion of macro ‘push_array’
 1867 |                 Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                      ^~~~~~~~~~
./code/4ed_api_implementation.cpp:1875:63: warning: use of old-style cast to ‘struct Lifetime_Key*’ [-Wold-style-cast]
 1875 |                 Lifetime_Key *key = (Lifetime_Key*)workspace->user_back_ptr;
      |                                                               ^~~~~~~~~~~~~
      |                                     -
      |                                     static_cast<  -
      |                                                   > (                      )
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1880:46: note: in expansion of macro ‘push_array’
 1880 |                         Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1880:46: note: in expansion of macro ‘push_array’
 1880 |                         Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1880:46: note: in expansion of macro ‘push_array’
 1880 |                         Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct get_managed_scope_with_multiple_dependencies(Application_Links*, Managed_Scope*, i32)::Node_Ptr*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_implementation.cpp:1880:46: note: in expansion of macro ‘push_array’
 1880 |                         Node_Ptr *new_node = push_array(scratch, Node_Ptr, 1);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1890:17: note: in expansion of macro ‘InvalidPath’
 1890 |                 InvalidPath;
      |                 ^~~~~~~~~~~
./code/4ed_api_implementation.cpp:1897:84: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 1897 |         Lifetime_Object **object_ptr_array = push_array(scratch, Lifetime_Object*, member_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1897:46: note: in expansion of macro ‘push_array’
 1897 |         Lifetime_Object **object_ptr_array = push_array(scratch, Lifetime_Object*, member_count);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1897:46: note: in expansion of macro ‘push_array’
 1897 |         Lifetime_Object **object_ptr_array = push_array(scratch, Lifetime_Object*, member_count);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1897:46: note: in expansion of macro ‘push_array’
 1897 |         Lifetime_Object **object_ptr_array = push_array(scratch, Lifetime_Object*, member_count);
      |                                              ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘union Lifetime_Object**’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed_api_implementation.cpp:1897:46: note: in expansion of macro ‘push_array’
 1897 |         Lifetime_Object **object_ptr_array = push_array(scratch, Lifetime_Object*, member_count);
      |                                              ^~~~~~~~~~
./code/4ed_api_implementation.cpp:1907:56: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
 1907 |         result = (Managed_Scope)key->dynamic_workspace.scope_id;
      |                                                        ^~~~~~~~
      |                  -
      |                  static_cast<  -
      |                                > (                             )
./code/4ed_api_implementation.cpp: In function ‘b32 managed_scope_clear_contents(Application_Links*, Managed_Scope)’:
./code/4ed_api_implementation.cpp:1916:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1916 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 managed_scope_clear_self_all_dependent_scopes(Application_Links*, Managed_Scope)’:
./code/4ed_api_implementation.cpp:1929:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1929 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:1934:9: note: in expansion of macro ‘Assert’
 1934 |         Assert(object != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘Base_Allocator* managed_scope_allocator(Application_Links*, Managed_Scope)’:
./code/4ed_api_implementation.cpp:1944:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1944 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘u64 managed_id_group_highest_id(Application_Links*, String_Const_u8)’:
./code/4ed_api_implementation.cpp:1955:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1955 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_ID managed_id_declare(Application_Links*, String_Const_u8, String_Const_u8)’:
./code/4ed_api_implementation.cpp:1963:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1963 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_ID managed_id_get(Application_Links*, String_Const_u8, String_Const_u8)’:
./code/4ed_api_implementation.cpp:1970:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1970 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void* managed_scope_get_attachment(Application_Links*, Managed_Scope, Managed_ID, u64)’:
./code/4ed_api_implementation.cpp:1977:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1977 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_implementation.cpp:1989:32: note: in expansion of macro ‘string_u8_litexpr’
 1989 |             print_message(app, string_u8_litexpr(M));
      |                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_implementation.cpp:1989:32: note: in expansion of macro ‘string_u8_litexpr’
 1989 |             print_message(app, string_u8_litexpr(M));
      |                                ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_implementation.cpp:1989:32: note: in expansion of macro ‘string_u8_litexpr’
 1989 |             print_message(app, string_u8_litexpr(M));
      |                                ^~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 managed_scope_attachment_erase(Application_Links*, Managed_Scope, Managed_ID)’:
./code/4ed_api_implementation.cpp:1998:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 1998 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Object alloc_managed_memory_in_scope(Application_Links*, Managed_Scope, i32, i32)’:
./code/4ed_api_implementation.cpp:2012:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2012 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Object alloc_buffer_markers_on_buffer(Application_Links*, Buffer_ID, i32, Managed_Scope*)’:
./code/4ed_api_implementation.cpp:2024:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2024 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Object_Ptr_And_Workspace get_dynamic_object_ptrs(Models*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2044:31: warning: conversion from ‘Managed_Object’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
 2044 |     u32 hi_id = (object >> 32)&max_u32;
      |                 ~~~~~~~~~~~~~~^~~~~~~~
./code/4ed_api_implementation.cpp:2048:129: warning: use of old-style cast to ‘union Managed_Object_Standard_Header*’ [-Wold-style-cast]
 2048 |         Managed_Object_Standard_Header *header = (Managed_Object_Standard_Header*)dynamic_workspace_get_pointer(workspace, lo_id);
      |                                                                                                                                 ^
      |                                                  -
      |                                                  static_cast<                    -
      |                                                                                  > (                                             )
./code/4ed_api_implementation.cpp: In function ‘u32 managed_object_get_item_size(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2060:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2060 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘u32 managed_object_get_item_count(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2072:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2072 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void* managed_object_get_pointer(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2084:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2084 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Object_Type managed_object_get_type(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2092:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2092 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Managed_Scope managed_object_get_containing_scope(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2107:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2107 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2108:31: warning: conversion from ‘Managed_Object’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
 2108 |     u32 hi_id = (object >> 32)&max_u32;
      |                 ~~~~~~~~~~~~~~^~~~~~~~
./code/4ed_api_implementation.cpp:2111:31: warning: use of old-style cast to ‘Managed_Scope’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2111 |         return((Managed_Scope)hi_id);
      |                               ^~~~~
      |                -
      |                static_cast<  -
      |                              > (   )
./code/4ed_api_implementation.cpp: In function ‘b32 managed_object_free(Application_Links*, Managed_Object)’:
./code/4ed_api_implementation.cpp:2119:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2119 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2120:31: warning: conversion from ‘Managed_Object’ {aka ‘long unsigned int’} to ‘u32’ {aka ‘unsigned int’} may change value [-Wconversion]
 2120 |     u32 hi_id = (object >> 32)&max_u32;
      |                 ~~~~~~~~~~~~~~^~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 managed_object_store_data(Application_Links*, Managed_Object, u32, u32, void*)’:
./code/4ed_api_implementation.cpp:2133:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2133 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2139:15: warning: comparison of unsigned expression in ‘>= 0’ is always true [-Wtype-limits]
 2139 |         if (0 <= first_index && first_index + count <= item_count){
      |             ~~^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 managed_object_load_data(Application_Links*, Managed_Object, u32, u32, void*)’:
./code/4ed_api_implementation.cpp:2152:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2152 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2158:15: warning: comparison of unsigned expression in ‘>= 0’ is always true [-Wtype-limits]
 2158 |         if (0 <= first_index && first_index + count <= item_count){
      |             ~~^~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘User_Input get_next_input_raw(Application_Links*)’:
./code/4ed_api_implementation.cpp:2171:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2171 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2173:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 2173 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:2176:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 2176 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/4ed_api_implementation.cpp:2177:43: warning: use of old-style cast to ‘struct Co_Out*’ [-Wold-style-cast]
 2177 |         Co_Out *out = (Co_Out*)coroutine->out;
      |                                           ^~~
      |                       ---------
      |                       static_cast<Co_Out*> ( )
./code/4ed_api_implementation.cpp:2180:40: warning: use of old-style cast to ‘struct Co_In*’ [-Wold-style-cast]
 2180 |         Co_In *in = (Co_In*)coroutine->in;
      |                                        ^~
      |                     --------
      |                     static_cast<Co_In*> ()
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed_api_implementation.cpp:2185:28: note: in expansion of macro ‘string_u8_litexpr’
 2185 |         print_message(app, string_u8_litexpr(M));
      |                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed_api_implementation.cpp:2185:28: note: in expansion of macro ‘string_u8_litexpr’
 2185 |         print_message(app, string_u8_litexpr(M));
      |                            ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed_api_implementation.cpp:2185:28: note: in expansion of macro ‘string_u8_litexpr’
 2185 |         print_message(app, string_u8_litexpr(M));
      |                            ^~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2171:13: warning: unused variable ‘models’ [-Wunused-variable]
 2171 |     Models *models = (Models*)app->cmd_context;
      |             ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘i64 get_current_input_sequence_number(Application_Links*)’:
./code/4ed_api_implementation.cpp:2194:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2194 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘User_Input get_current_input(Application_Links*)’:
./code/4ed_api_implementation.cpp:2201:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2201 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void set_current_input(Application_Links*, User_Input*)’:
./code/4ed_api_implementation.cpp:2208:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2208 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void leave_current_input_unhandled(Application_Links*)’:
./code/4ed_api_implementation.cpp:2214:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2214 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void set_custom_hook(Application_Links*, Hook_ID, void (*)())’:
./code/4ed_api_implementation.cpp:2220:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2220 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2224:60: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*)’ {aka ‘int (*)(struct Application_Links*)’} [-Wold-style-cast]
 2224 |             models->buffer_viewer_update = (Hook_Function*)func_ptr;
      |                                                            ^~~~~~~~
      |                                            ------------------------
      |                                            reinterpret_cast<Hook_Function*> (func_ptr)
./code/4ed_api_implementation.cpp:2228:56: warning: use of old-style cast to ‘union Vec2_f32 (*)(union Vec2_f32, b32, f32, void*)’ {aka ‘union Vec2_f32 (*)(union Vec2_f32, int, float, void*)’} [-Wold-style-cast]
 2228 |             models->delta_rule = (Delta_Rule_Function*)func_ptr;
      |                                                        ^~~~~~~~
      |                                  -
      |                                  reinterpret_cast<    -
      |                                                       > (      )
./code/4ed_api_implementation.cpp:2232:68: warning: use of old-style cast to ‘void (*)(struct Application_Links*)’ [-Wold-style-cast]
 2232 |             models->view_event_handler = (Custom_Command_Function*)func_ptr;
      |                                                                    ^~~~~~~~
      |                                          -
      |                                          reinterpret_cast<        -
      |                                                                   > (      )
./code/4ed_api_implementation.cpp:2236:44: warning: use of old-style cast to ‘void (*)(struct Application_Links*, struct Frame_Info)’ [-Wold-style-cast]
 2236 |             models->tick = (Tick_Function*)func_ptr;
      |                                            ^~~~~~~~
      |                            ------------------------
      |                            reinterpret_cast<Tick_Function*> (func_ptr)
./code/4ed_api_implementation.cpp:2240:62: warning: use of old-style cast to ‘void (*)(struct Application_Links*, struct Frame_Info, View_ID)’ {aka ‘void (*)(struct Application_Links*, struct Frame_Info, int)’} [-Wold-style-cast]
 2240 |             models->render_caller = (Render_Caller_Function*)func_ptr;
      |                                                              ^~~~~~~~
      |                                     -
      |                                     reinterpret_cast<       -
      |                                                             > (      )
./code/4ed_api_implementation.cpp:2244:88: warning: use of old-style cast to ‘void (*)(struct Application_Links*, struct Frame_Info)’ [-Wold-style-cast]
 2244 |             models->whole_screen_render_caller = (Whole_Screen_Render_Caller_Function*)func_ptr;
      |                                                                                        ^~~~~~~~
      |                                                  -
      |                                                  reinterpret_cast<                    -
      |                                                                                       > (      )
./code/4ed_api_implementation.cpp:2248:76: warning: use of old-style cast to ‘void (*)(struct Application_Links*, struct Buffer_Name_Conflict_Entry*, i32)’ {aka ‘void (*)(struct Application_Links*, struct Buffer_Name_Conflict_Entry*, int)’} [-Wold-style-cast]
 2248 |             models->buffer_name_resolver = (Buffer_Name_Resolver_Function*)func_ptr;
      |                                                                            ^~~~~~~~
      |                                            -
      |                                            reinterpret_cast<              -
      |                                                                           > (      )
./code/4ed_api_implementation.cpp:2252:59: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*, Buffer_ID)’ {aka ‘int (*)(struct Application_Links*, int)’} [-Wold-style-cast]
 2252 |             models->begin_buffer = (Buffer_Hook_Function*)func_ptr;
      |                                                           ^~~~~~~~
      |                                    -
      |                                    reinterpret_cast<     -
      |                                                          > (      )
./code/4ed_api_implementation.cpp:2256:57: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*, Buffer_ID)’ {aka ‘int (*)(struct Application_Links*, int)’} [-Wold-style-cast]
 2256 |             models->end_buffer = (Buffer_Hook_Function*)func_ptr;
      |                                                         ^~~~~~~~
      |                                  -
      |                                  reinterpret_cast<     -
      |                                                        > (      )
./code/4ed_api_implementation.cpp:2260:55: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*, Buffer_ID)’ {aka ‘int (*)(struct Application_Links*, int)’} [-Wold-style-cast]
 2260 |             models->new_file = (Buffer_Hook_Function*)func_ptr;
      |                                                       ^~~~~~~~
      |                                -
      |                                reinterpret_cast<     -
      |                                                      > (      )
./code/4ed_api_implementation.cpp:2264:56: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*, Buffer_ID)’ {aka ‘int (*)(struct Application_Links*, int)’} [-Wold-style-cast]
 2264 |             models->save_file = (Buffer_Hook_Function*)func_ptr;
      |                                                        ^~~~~~~~
      |                                 -
      |                                 reinterpret_cast<     -
      |                                                       > (      )
./code/4ed_api_implementation.cpp:2268:70: warning: use of old-style cast to ‘i32 (*)(struct Application_Links*, Buffer_ID, union Range_i64, union Range_Cursor)’ {aka ‘int (*)(struct Application_Links*, int, union Range_i64, union Range_Cursor)’} [-Wold-style-cast]
 2268 |             models->buffer_edit_range = (Buffer_Edit_Range_Function*)func_ptr;
      |                                                                      ^~~~~~~~
      |                                         -
      |                                         reinterpret_cast<           -
      |                                                                     > (      )
./code/4ed_api_implementation.cpp:2272:62: warning: use of old-style cast to ‘union Rect_f32 (*)(struct Application_Links*, View_ID, union Rect_f32)’ {aka ‘union Rect_f32 (*)(struct Application_Links*, int, union Rect_f32)’} [-Wold-style-cast]
 2272 |             models->buffer_region = (Buffer_Region_Function*)func_ptr;
      |                                                              ^~~~~~~~
      |                                     -
      |                                     reinterpret_cast<       -
      |                                                             > (      )
./code/4ed_api_implementation.cpp:2276:53: warning: use of old-style cast to ‘struct Layout_Item_List (*)(struct Application_Links*, struct Arena*, Buffer_ID, union Range_i64, Face_ID, f32)’ {aka ‘struct Layout_Item_List (*)(struct Application_Links*, struct Arena*, int, union Range_i64, unsigned int, float)’} [-Wold-style-cast]
 2276 |             models->layout_func = (Layout_Function*)func_ptr;
      |                                                     ^~~~~~~~
      |                                   -
      |                                   reinterpret_cast<-
      |                                                    > (      )
./code/4ed_api_implementation.cpp:2280:72: warning: use of old-style cast to ‘void (*)(struct Application_Links*, View_ID, Buffer_ID, Buffer_ID)’ {aka ‘void (*)(struct Application_Links*, int, int, int)’} [-Wold-style-cast]
 2280 |             models->view_change_buffer = (View_Change_Buffer_Function*)func_ptr;
      |                                                                        ^~~~~~~~
      |                                          -
      |                                          reinterpret_cast<            -
      |                                                                       > (      )
./code/4ed_api_implementation.cpp:2221:12: warning: switch missing default case [-Wswitch-default]
 2221 |     switch (hook_id){
      |            ^
./code/4ed_api_implementation.cpp: In function ‘void (* get_custom_hook(Application_Links*, Hook_ID))()’:
./code/4ed_api_implementation.cpp:2288:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2288 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2292:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2292 |             result = (Void_Func*)models->buffer_viewer_update;
      |                                          ^~~~~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (          )
./code/4ed_api_implementation.cpp:2296:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2296 |             result = (Void_Func*)models->delta_rule;
      |                                          ^~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> ()
./code/4ed_api_implementation.cpp:2300:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2300 |             result = (Void_Func*)models->view_event_handler;
      |                                          ^~~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (        )
./code/4ed_api_implementation.cpp:2304:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2304 |             result = (Void_Func*)models->tick;
      |                                          ^~~~
      |                      ------------------------
      |                      reinterpret_cast<Void_Func*> (models->tick)
./code/4ed_api_implementation.cpp:2308:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2308 |             result = (Void_Func*)models->render_caller;
      |                                          ^~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (   )
./code/4ed_api_implementation.cpp:2312:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2312 |             result = (Void_Func*)models->whole_screen_render_caller;
      |                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (                )
./code/4ed_api_implementation.cpp:2316:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2316 |             result = (Void_Func*)models->buffer_name_resolver;
      |                                          ^~~~~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (          )
./code/4ed_api_implementation.cpp:2320:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2320 |             result = (Void_Func*)models->begin_buffer;
      |                                          ^~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (  )
./code/4ed_api_implementation.cpp:2324:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2324 |             result = (Void_Func*)models->end_buffer;
      |                                          ^~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> ()
./code/4ed_api_implementation.cpp:2328:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2328 |             result = (Void_Func*)models->new_file;
      |                                          ^~~~~~~~
      |                      ----------------------------
      |                      reinterpret_cast<Void_Func*> (models->new_file)
./code/4ed_api_implementation.cpp:2332:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2332 |             result = (Void_Func*)models->save_file;
      |                                          ^~~~~~~~~
      |                      -----------------------------
      |                      reinterpret_cast<Void_Func*> (models->save_file)
./code/4ed_api_implementation.cpp:2336:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2336 |             result = (Void_Func*)models->buffer_edit_range;
      |                                          ^~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (       )
./code/4ed_api_implementation.cpp:2340:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2340 |             result = (Void_Func*)models->buffer_region;
      |                                          ^~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (   )
./code/4ed_api_implementation.cpp:2344:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2344 |             result = (Void_Func*)models->layout_func;
      |                                          ^~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> ( )
./code/4ed_api_implementation.cpp:2348:42: warning: use of old-style cast to ‘void (*)()’ [-Wold-style-cast]
 2348 |             result = (Void_Func*)models->view_change_buffer;
      |                                          ^~~~~~~~~~~~~~~~~~
      |                      ------------
      |                      reinterpret_cast<Void_Func*> (        )
./code/4ed_api_implementation.cpp:2289:12: warning: switch missing default case [-Wswitch-default]
 2289 |     switch (hook_id){
      |            ^
./code/4ed_api_implementation.cpp: In function ‘b32 set_custom_hook_memory_size(Application_Links*, Hook_ID, u64)’:
./code/4ed_api_implementation.cpp:2356:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2356 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Mouse_State get_mouse_state(Application_Links*)’:
./code/4ed_api_implementation.cpp:2374:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2374 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 get_active_query_bars(Application_Links*, View_ID, i32, Query_Bar_Ptr_Array*)’:
./code/4ed_api_implementation.cpp:2381:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2381 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 start_query_bar(Application_Links*, Query_Bar*, u32)’:
./code/4ed_api_implementation.cpp:2403:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2403 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2401:61: warning: unused parameter ‘flags’ [-Wunused-parameter]
 2401 | start_query_bar(Application_Links *app, Query_Bar *bar, u32 flags)
      |                                                         ~~~~^~~~~
./code/4ed_api_implementation.cpp: In function ‘void end_query_bar(Application_Links*, Query_Bar*, u32)’:
./code/4ed_api_implementation.cpp:2417:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2417 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2415:59: warning: unused parameter ‘flags’ [-Wunused-parameter]
 2415 | end_query_bar(Application_Links *app, Query_Bar *bar, u32 flags)
      |                                                       ~~~~^~~~~
./code/4ed_api_implementation.cpp: In function ‘void clear_all_query_bars(Application_Links*, View_ID)’:
./code/4ed_api_implementation.cpp:2425:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2425 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void print_message(Application_Links*, String_Const_u8)’:
./code/4ed_api_implementation.cpp:2435:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2435 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 log_string(Application_Links*, String_Const_u8)’:
./code/4ed_api_implementation.cpp:2444:31: warning: unused parameter ‘app’ [-Wunused-parameter]
 2444 | log_string(Application_Links *app, String_Const_u8 str){
      |            ~~~~~~~~~~~~~~~~~~~^~~
./code/4ed_api_implementation.cpp: In function ‘Face_ID get_largest_face_id(Application_Links*)’:
./code/4ed_api_implementation.cpp:2451:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2451 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 set_global_face(Application_Links*, Face_ID)’:
./code/4ed_api_implementation.cpp:2458:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2458 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘History_Record_Index buffer_history_get_max_record_index(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:2470:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2470 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void buffer_history__fill_record_info(Record*, Record_Info*)’:
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:279:32: note: in expansion of macro ‘AssertBreak’
  279 | #define AssertMessageAlways(m) AssertBreak(m)
      |                                ^~~~~~~~~~~
./code/custom/4coder_base_types.h:285:26: note: in expansion of macro ‘AssertMessageAlways’
  285 | #define AssertMessage(m) AssertMessageAlways(m)
      |                          ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:296:21: note: in expansion of macro ‘AssertMessage’
  296 | #define InvalidPath AssertMessage("invalid path")
      |                     ^~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2497:13: note: in expansion of macro ‘InvalidPath’
 2497 |             InvalidPath;
      |             ^~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Record_Info buffer_history_get_record_info(Application_Links*, Buffer_ID, History_Record_Index)’:
./code/4ed_api_implementation.cpp:2504:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2504 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Record_Info buffer_history_get_group_sub_record(Application_Links*, Buffer_ID, History_Record_Index, i32)’:
./code/4ed_api_implementation.cpp:2536:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2536 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘History_Record_Index buffer_history_get_current_state_index(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:2579:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2579 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_history_set_current_state_index(Application_Links*, Buffer_ID, History_Record_Index)’:
./code/4ed_api_implementation.cpp:2590:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2590 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_history_merge_record_range(Application_Links*, Buffer_ID, History_Record_Index, History_Record_Index, Record_Merge_Flag)’:
./code/4ed_api_implementation.cpp:2605:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2605 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_history_clear_after_current_state(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:2616:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2616 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void global_history_edit_group_begin(Application_Links*)’:
./code/4ed_api_implementation.cpp:2628:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2628 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void global_history_edit_group_end(Application_Links*)’:
./code/4ed_api_implementation.cpp:2634:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2634 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘b32 buffer_set_face(Application_Links*, Buffer_ID, Face_ID)’:
./code/4ed_api_implementation.cpp:2641:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2641 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Face_Description get_face_description(Application_Links*, Face_ID)’:
./code/4ed_api_implementation.cpp:2658:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2658 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2668:59: warning: conversion to ‘u32’ {aka ‘unsigned int’} from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
 2668 |         description.parameters.pt_size = models->settings.font_size;
      |                                          ~~~~~~~~~~~~~~~~~^~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Face_Metrics get_face_metrics(Application_Links*, Face_ID)’:
./code/4ed_api_implementation.cpp:2676:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2676 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Face_Advance_Map get_face_advance_map(Application_Links*, Face_ID)’:
./code/4ed_api_implementation.cpp:2689:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2689 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Face_ID get_face_id(Application_Links*, Buffer_ID)’:
./code/4ed_api_implementation.cpp:2703:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2703 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Face_ID try_create_new_face(Application_Links*, Face_Description*)’:
./code/4ed_api_implementation.cpp:2720:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2720 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2722:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 2722 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:2725:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 2725 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2726:9: note: in expansion of macro ‘Assert’
 2726 |         Assert(coroutine != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp:2727:43: warning: use of old-style cast to ‘struct Co_Out*’ [-Wold-style-cast]
 2727 |         Co_Out *out = (Co_Out*)coroutine->out;
      |                                           ^~~
      |                       ---------
      |                       static_cast<Co_Out*> ( )
./code/4ed_api_implementation.cpp:2731:40: warning: use of old-style cast to ‘struct Co_In*’ [-Wold-style-cast]
 2731 |         Co_In *in = (Co_In*)coroutine->in;
      |                                        ^~
      |                     --------
      |                     static_cast<Co_In*> ()
./code/4ed_api_implementation.cpp: In function ‘b32 try_modify_face(Application_Links*, Face_ID, Face_Description*)’:
./code/4ed_api_implementation.cpp:2749:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2749 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2751:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 2751 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:2754:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 2754 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2755:9: note: in expansion of macro ‘Assert’
 2755 |         Assert(coroutine != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp:2756:43: warning: use of old-style cast to ‘struct Co_Out*’ [-Wold-style-cast]
 2756 |         Co_Out *out = (Co_Out*)coroutine->out;
      |                                           ^~~
      |                       ---------
      |                       static_cast<Co_Out*> ( )
./code/4ed_api_implementation.cpp:2761:40: warning: use of old-style cast to ‘struct Co_In*’ [-Wold-style-cast]
 2761 |         Co_In *in = (Co_In*)coroutine->in;
      |                                        ^~
      |                     --------
      |                     static_cast<Co_In*> ()
./code/4ed_api_implementation.cpp: In function ‘b32 try_release_face(Application_Links*, Face_ID, Face_ID)’:
./code/4ed_api_implementation.cpp:2776:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2776 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Const_u8 push_hot_directory(Application_Links*, Arena*)’:
./code/4ed_api_implementation.cpp:2786:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2786 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void set_hot_directory(Application_Links*, String_Const_u8)’:
./code/4ed_api_implementation.cpp:2795:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2795 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void send_exit_signal(Application_Links*)’:
./code/4ed_api_implementation.cpp:2803:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2803 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void hard_exit(Application_Links*)’:
./code/4ed_api_implementation.cpp:2810:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2810 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void set_window_title(Application_Links*, String_Const_u8)’:
./code/4ed_api_implementation.cpp:2817:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2817 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:2819:59: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2819 |     u64 cap_before_null = (u64)(models->title_capacity - 1);
      |                                                           ^
      |                           -----
      |                           static_cast<u64> (               )
./code/4ed_api_implementation.cpp: In function ‘void acquire_global_frame_mutex(Application_Links*)’:
./code/4ed_api_implementation.cpp:2828:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 2828 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:2830:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 2830 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2831:9: note: in expansion of macro ‘Assert’
 2831 |         Assert(coroutine != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp:2832:43: warning: use of old-style cast to ‘struct Co_Out*’ [-Wold-style-cast]
 2832 |         Co_Out *out = (Co_Out*)coroutine->out;
      |                                           ^~~
      |                       ---------
      |                       static_cast<Co_Out*> ( )
./code/4ed_api_implementation.cpp: In function ‘void release_global_frame_mutex(Application_Links*)’:
./code/4ed_api_implementation.cpp:2844:78: warning: use of old-style cast to ‘struct Thread_Context_Extra_Info*’ [-Wold-style-cast]
 2844 |     Thread_Context_Extra_Info *tctx_info = (Thread_Context_Extra_Info*)tctx->user_data;
      |                                                                              ^~~~~~~~~
      |                                            -
      |                                            static_cast<               -
      |                                                                       > (             )
./code/4ed_api_implementation.cpp:2846:55: warning: use of old-style cast to ‘struct Coroutine*’ [-Wold-style-cast]
 2846 |         Coroutine *coroutine = (Coroutine*)tctx_info->coroutine;
      |                                                       ^~~~~~~~~
      |                                ------------
      |                                static_cast<Coroutine*> (       )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2847:9: note: in expansion of macro ‘Assert’
 2847 |         Assert(coroutine != 0);
      |         ^~~~~~
./code/4ed_api_implementation.cpp:2848:43: warning: use of old-style cast to ‘struct Co_Out*’ [-Wold-style-cast]
 2848 |         Co_Out *out = (Co_Out*)coroutine->out;
      |                                           ^~~
      |                       ---------
      |                       static_cast<Co_Out*> ( )
./code/4ed_api_implementation.cpp: In function ‘Vec2_f32 draw_string_oriented(Application_Links*, Face_ID, ARGB_Color, String_Const_u8, Vec2_f32, u32, Vec2_f32)’:
./code/4ed_api_implementation.cpp:2864:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2864 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘f32 get_string_advance(Application_Links*, Face_ID, String_Const_u8)’:
./code/4ed_api_implementation.cpp:2880:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2880 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void draw_rectangle(Application_Links*, Rect_f32, f32, ARGB_Color)’:
./code/4ed_api_implementation.cpp:2887:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2887 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void draw_rectangle_outline(Application_Links*, Rect_f32, f32, f32, ARGB_Color)’:
./code/4ed_api_implementation.cpp:2895:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2895 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 draw_set_clip(Application_Links*, Rect_f32)’:
./code/4ed_api_implementation.cpp:2903:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2903 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Text_Layout_ID text_layout_create(Application_Links*, Buffer_ID, Rect_f32, Buffer_Point)’:
./code/4ed_api_implementation.cpp:2909:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2909 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2944:28: note: in expansion of macro ‘push_array_zero’
 2944 |         Arena *arena_ptr = push_array_zero(&arena, Arena, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2944:28: note: in expansion of macro ‘push_array_zero’
 2944 |         Arena *arena_ptr = push_array_zero(&arena, Arena, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2944:28: note: in expansion of macro ‘push_array_zero’
 2944 |         Arena *arena_ptr = push_array_zero(&arena, Arena, 1);
      |                            ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Arena*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_implementation.cpp:2944:28: note: in expansion of macro ‘push_array_zero’
 2944 |         Arena *arena_ptr = push_array_zero(&arena, Arena, 1);
      |                            ^~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2946:75: warning: conversion to ‘long unsigned int’ from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 2946 |         ARGB_Color *colors_array = push_array_zero(arena_ptr, ARGB_Color, item_count);
./code/custom/4coder_base_types.cpp:3230:86: note: in definition of macro ‘push_array_zero’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                      ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2946:36: note: in expansion of macro ‘push_array_zero’
 2946 |         ARGB_Color *colors_array = push_array_zero(arena_ptr, ARGB_Color, item_count);
      |                                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2946:36: note: in expansion of macro ‘push_array_zero’
 2946 |         ARGB_Color *colors_array = push_array_zero(arena_ptr, ARGB_Color, item_count);
      |                                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp:2946:36: note: in expansion of macro ‘push_array_zero’
 2946 |         ARGB_Color *colors_array = push_array_zero(arena_ptr, ARGB_Color, item_count);
      |                                    ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘ARGB_Color*’ {aka ‘unsigned int*’} [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed_api_implementation.cpp:2946:36: note: in expansion of macro ‘push_array_zero’
 2946 |         ARGB_Color *colors_array = push_array_zero(arena_ptr, ARGB_Color, item_count);
      |                                    ^~~~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 text_layout_region(Application_Links*, Text_Layout_ID)’:
./code/4ed_api_implementation.cpp:2956:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2956 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Buffer_ID text_layout_get_buffer(Application_Links*, Text_Layout_ID)’:
./code/4ed_api_implementation.cpp:2967:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2967 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Range_i64 text_layout_get_visible_range(Application_Links*, Text_Layout_ID)’:
./code/4ed_api_implementation.cpp:2978:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2978 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Range_f32 text_layout_line_on_screen(Application_Links*, Text_Layout_ID, i64)’:
./code/4ed_api_implementation.cpp:2989:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 2989 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Rect_f32 text_layout_character_on_screen(Application_Links*, Text_Layout_ID, i64)’:
./code/4ed_api_implementation.cpp:3032:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3032 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:3064:21: warning: unused variable ‘is_first_item’ [-Wunused-variable]
 3064 |                 b32 is_first_item = true;
      |                     ^~~~~~~~~~~~~
./code/4ed_api_implementation.cpp: In function ‘void paint_text_color(Application_Links*, Text_Layout_ID, Range_i64, ARGB_Color)’:
./code/4ed_api_implementation.cpp:3096:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3096 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:3097:14: warning: unused variable ‘result’ [-Wunused-variable]
 3097 |     Rect_f32 result = {};
      |              ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘void paint_text_color_blend(Application_Links*, Text_Layout_ID, Range_i64, ARGB_Color, f32)’:
./code/4ed_api_implementation.cpp:3113:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3113 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:3114:14: warning: unused variable ‘result’ [-Wunused-variable]
 3114 |     Rect_f32 result = {};
      |              ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘b32 text_layout_free(Application_Links*, Text_Layout_ID)’:
./code/4ed_api_implementation.cpp:3135:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3135 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void draw_text_layout(Application_Links*, Text_Layout_ID, ARGB_Color, ARGB_Color)’:
./code/4ed_api_implementation.cpp:3141:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3141 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘void open_color_picker(Application_Links*, Color_Picker*)’:
./code/4ed_api_implementation.cpp:3151:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3151 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:3151:13: warning: unused variable ‘models’ [-Wunused-variable]
 3151 |     Models *models = (Models*)app->cmd_context;
      |             ^~~~~~
./code/4ed_api_implementation.cpp: In function ‘void animate_in_n_milliseconds(Application_Links*, u32)’:
./code/4ed_api_implementation.cpp:3161:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3161 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘String_Match_List buffer_find_all_matches(Application_Links*, Arena*, Buffer_ID, i32, Range_i64, String_Const_u8, Character_Predicate*, Scan_Direction)’:
./code/4ed_api_implementation.cpp:3174:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3174 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp:3190:58: warning: conversion to ‘u64’ {aka ‘long unsigned int’} from ‘i64’ {aka ‘long int’} may change the sign of the result [-Wsign-conversion]
 3190 |                                         direction, range.min, buffer, string_id);
      |                                                    ~~~~~~^~~
./code/4ed_api_implementation.cpp: In function ‘Profile_Global_List* get_core_profile_list(Application_Links*)’:
./code/4ed_api_implementation.cpp:3201:36: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3201 |     Models *models = (Models*)app->cmd_context;
      |                                    ^~~~~~~~~~~
      |                      ---------
      |                      static_cast<Models*> (   )
./code/4ed_api_implementation.cpp: In function ‘Doc_Cluster* get_custom_layer_boundary_docs(Application_Links*, Arena*)’:
./code/4ed_api_implementation.cpp:3206:51: warning: unused parameter ‘app’ [-Wunused-parameter]
 3206 | get_custom_layer_boundary_docs(Application_Links *app, Arena *arena){
      |                                ~~~~~~~~~~~~~~~~~~~^~~
./code/4ed.cpp: In function ‘void init_command_line_settings(App_Settings*, Plat_Settings*, i32, char**)’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed.cpp:30:51: note: in expansion of macro ‘string_u8_litexpr’
   30 |             if (string_match(SCu8(long_arg_name), string_u8_litexpr("custom"))){
      |                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed.cpp:30:51: note: in expansion of macro ‘string_u8_litexpr’
   30 |             if (string_match(SCu8(long_arg_name), string_u8_litexpr("custom"))){
      |                                                   ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed.cpp:30:51: note: in expansion of macro ‘string_u8_litexpr’
   30 |             if (string_match(SCu8(long_arg_name), string_u8_litexpr("custom"))){
      |                                                   ^~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:124:
./code/4ed.cpp:44:36: warning: switch missing default case [-Wswitch-default]
   44 |                             switch (arg[1]){
      |                                    ^
./code/4ed.cpp:71:67: warning: use of old-style cast to ‘b8’ {aka ‘signed char’} [-Wold-style-cast]
   71 |                         plat_settings->custom_dll_is_strict = (b8)strict;
      |                                                                   ^~~~~~
      |                                                               ----------
      |                                                               static_cast<b8> (strict)
./code/4ed.cpp:83:77: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   83 |                             i32 w = (i32)string_to_integer(SCu8(argv[i]), 10);
      |                                                                             ^
      |                                     -----
      |                                     static_cast<i32> (                       )
./code/4ed.cpp:84:81: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
   84 |                             i32 h = (i32)string_to_integer(SCu8(argv[i + 1]), 10);
      |                                                                                 ^
      |                                     -----
      |                                     static_cast<i32> (                           )
./code/4ed.cpp:109:77: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  109 |                             i32 x = (i32)string_to_integer(SCu8(argv[i]), 10);
      |                                                                             ^
      |                                     -----
      |                                     static_cast<i32> (                       )
./code/4ed.cpp:110:81: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  110 |                             i32 y = (i32)string_to_integer(SCu8(argv[i + 1]), 10);
      |                                                                                 ^
      |                                     -----
      |                                     static_cast<i32> (                           )
./code/4ed.cpp:133:91: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
  133 |                             settings->font_size = (i32)string_to_integer(SCu8(argv[i]), 10);
      |                                                                                           ^
      |                                                   -----
      |                                                   static_cast<i32> (                       )
./code/4ed.cpp:39:24: warning: switch missing default case [-Wswitch-default]
   39 |                 switch (action){
      |                        ^
./code/4ed.cpp:39:24: warning: enumeration value ‘CLAct_Ignore’ not handled in switch [-Wswitch]
./code/4ed.cpp:39:24: warning: enumeration value ‘CLAct_COUNT’ not handled in switch [-Wswitch]
./code/4ed.cpp:36:16: warning: switch missing default case [-Wswitch-default]
   36 |         switch (mode){
      |                ^
./code/4ed.cpp: In function ‘Models* models_init()’:
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:171:22: note: in expansion of macro ‘push_array_zero’
  171 |     Models *models = push_array_zero(&arena, Models, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:171:22: note: in expansion of macro ‘push_array_zero’
  171 |     Models *models = push_array_zero(&arena, Models, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:90: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:171:22: note: in expansion of macro ‘push_array_zero’
  171 |     Models *models = push_array_zero(&arena, Models, 1);
      |                      ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3230:119: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
 3230 | #define push_array_zero(a,T,c) ((T*)linalloc_wrap_zero(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                       ^
./code/4ed.cpp:171:22: note: in expansion of macro ‘push_array_zero’
  171 |     Models *models = push_array_zero(&arena, Models, 1);
      |                      ^~~~~~~~~~~~~~~
./code/4ed.cpp: At global scope:
./code/4ed.cpp:191:27: warning: no previous declaration for ‘void* app_read_command_line(Thread_Context*, String_Const_u8, Plat_Settings*, char***, i32**, i32, char**)’ [-Wmissing-declarations]
  191 | App_Read_Command_Line_Sig(app_read_command_line){
      |                           ^~~~~~~~~~~~~~~~~~~~~
./code/4ed.h:36:7: note: in definition of macro ‘App_Read_Command_Line_Sig’
   36 | void *name(Thread_Context *tctx,\
      |       ^~~~
./code/4ed.cpp: In function ‘void* app_read_command_line(Thread_Context*, String_Const_u8, Plat_Settings*, char***, i32**, i32, char**)’:
./code/4ed.h:36:28: warning: unused parameter ‘tctx’ [-Wunused-parameter]
   36 | void *name(Thread_Context *tctx,\
      |            ~~~~~~~~~~~~~~~~^~~~
./code/4ed.cpp:191:1: note: in expansion of macro ‘App_Read_Command_Line_Sig’
  191 | App_Read_Command_Line_Sig(app_read_command_line){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.h:37:17: warning: unused parameter ‘current_directory’ [-Wunused-parameter]
   37 | String_Const_u8 current_directory,\
      | ~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
./code/4ed.cpp:191:1: note: in expansion of macro ‘App_Read_Command_Line_Sig’
  191 | App_Read_Command_Line_Sig(app_read_command_line){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp: At global scope:
./code/4ed.cpp:203:14: warning: no previous declaration for ‘void app_init(Thread_Context*, Render_Target*, void*, String_Const_u8, Custom_API)’ [-Wmissing-declarations]
  203 | App_Init_Sig(app_init){
      |              ^~~~~~~~
./code/4ed.h:52:6: note: in definition of macro ‘App_Init_Sig’
   52 | void name(Thread_Context *tctx,     \
      |      ^~~~
./code/4ed.cpp: In function ‘void app_init(Thread_Context*, Render_Target*, void*, String_Const_u8, Custom_API)’:
./code/4ed.cpp:204:31: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  204 |     Models *models = (Models*)base_ptr;
      |                               ^~~~~~~~
      |                      -----------------
      |                      static_cast<Models*> (base_ptr)
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed.cpp:220:5: note: in expansion of macro ‘Assert’
  220 |     Assert(custom_init != 0);
      |     ^~~~~~
./code/4ed.cpp:233:75: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  233 |         models->view_set.views = push_array(arena, View, models->view_set.max);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:233:34: note: in expansion of macro ‘push_array’
  233 |         models->view_set.views = push_array(arena, View, models->view_set.max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:233:34: note: in expansion of macro ‘push_array’
  233 |         models->view_set.views = push_array(arena, View, models->view_set.max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:233:34: note: in expansion of macro ‘push_array’
  233 |         models->view_set.views = push_array(arena, View, models->view_set.max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct View*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:233:34: note: in expansion of macro ‘push_array’
  233 |         models->view_set.views = push_array(arena, View, models->view_set.max);
      |                                  ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:35: warning: use of old-style cast to ‘i32’ {aka ‘int’} [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                   ^~~~
./code/4ed.cpp:266:85: note: in expansion of macro ‘string_expand’
  266 |         String8 full_path = push_u8_stringf(arena, "%.*sfonts/liberation-mono.ttf", string_expand(binary_path));
      |                                                                                     ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2986:52: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 2986 | #define string_expand(s) (i32)(s).size, (char*)(s).str
      |                                                    ^~~
./code/4ed.cpp:266:85: note: in expansion of macro ‘string_expand’
  266 |         String8 full_path = push_u8_stringf(arena, "%.*sfonts/liberation-mono.ttf", string_expand(binary_path));
      |                                                                                     ^~~~~~~~~~~~~
./code/4ed.cpp:281:59: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  281 |     models->title_space = push_array(arena, char, models->title_capacity);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:281:27: note: in expansion of macro ‘push_array’
  281 |     models->title_space = push_array(arena, char, models->title_capacity);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:281:27: note: in expansion of macro ‘push_array’
  281 |     models->title_space = push_array(arena, char, models->title_capacity);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:281:27: note: in expansion of macro ‘push_array’
  281 |     models->title_space = push_array(arena, char, models->title_capacity);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:281:27: note: in expansion of macro ‘push_array’
  281 |     models->title_space = push_array(arena, char, models->title_capacity);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/4ed.cpp:297:11: note: in expansion of macro ‘str8_lit’
  297 |         { str8_lit("*messages*"), &models->message_buffer , true , },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/4ed.cpp:297:11: note: in expansion of macro ‘str8_lit’
  297 |         { str8_lit("*messages*"), &models->message_buffer , true , },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/4ed.cpp:298:11: note: in expansion of macro ‘str8_lit’
  298 |         { str8_lit("*scratch*") , &models->scratch_buffer , false, },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/4ed.cpp:298:11: note: in expansion of macro ‘str8_lit’
  298 |         { str8_lit("*scratch*") , &models->scratch_buffer , false, },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/4ed.cpp:299:11: note: in expansion of macro ‘str8_lit’
  299 |         { str8_lit("*log*")     , &models->log_buffer     , true , },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/4ed.cpp:299:11: note: in expansion of macro ‘str8_lit’
  299 |         { str8_lit("*log*")     , &models->log_buffer     , true , },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                             ^
./code/4ed.cpp:300:11: note: in expansion of macro ‘str8_lit’
  300 |         { str8_lit("*keyboard*"), &models->keyboard_buffer, true , },
      |           ^~~~~~~~
./code/custom/4coder_base_types.h:971:22: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
  971 | #define str8_lit(s) {(u8*)(s), sizeof(s) - 1}
      |                      ^~~~~~~~
./code/4ed.cpp:300:11: note: in expansion of macro ‘str8_lit’
  300 |         { str8_lit("*keyboard*"), &models->keyboard_buffer, true , },
      |           ^~~~~~~~
./code/4ed.cpp:307:23: warning: comparison of integer expressions of different signedness: ‘i32’ {aka ‘int’} and ‘long unsigned int’ [-Wsign-compare]
  307 |     for (i32 i = 0; i < ArrayCount(init_files); ++i){
./code/4ed.cpp:306:11: warning: unused variable ‘heap’ [-Wunused-variable]
  306 |     Heap *heap = &models->heap;
      |           ^~~~
./code/4ed.h:53:16: warning: unused parameter ‘target’ [-Wunused-parameter]
   53 | Render_Target *target,    \
      | ~~~~~~~~~~~~~~~^~~~~~
./code/4ed.cpp:203:1: note: in expansion of macro ‘App_Init_Sig’
  203 | App_Init_Sig(app_init){
      | ^~~~~~~~~~~~
./code/4ed.cpp: At global scope:
./code/4ed.cpp:336:14: warning: no previous declaration for ‘Application_Step_Result app_step(Thread_Context*, Render_Target*, void*, Application_Step_Input*)’ [-Wmissing-declarations]
  336 | App_Step_Sig(app_step){
      |              ^~~~~~~~
./code/4ed.h:81:1: note: in definition of macro ‘App_Step_Sig’
   81 | name(Thread_Context *tctx,                 \
      | ^~~~
./code/4ed.cpp: In function ‘Application_Step_Result app_step(Thread_Context*, Render_Target*, void*, Application_Step_Input*)’:
./code/4ed.cpp:337:31: warning: use of old-style cast to ‘struct Models*’ [-Wold-style-cast]
  337 |     Models *models = (Models*)base_ptr;
      |                               ^~~~~~~~
      |                      -----------------
      |                      static_cast<Models*> (base_ptr)
./code/4ed.cpp:366:98: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  366 |         Child_Process **processes_to_free = push_array(scratch, Child_Process*, child_processes->active_child_process_count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:366:45: note: in expansion of macro ‘push_array’
  366 |         Child_Process **processes_to_free = push_array(scratch, Child_Process*, child_processes->active_child_process_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:366:45: note: in expansion of macro ‘push_array’
  366 |         Child_Process **processes_to_free = push_array(scratch, Child_Process*, child_processes->active_child_process_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:366:45: note: in expansion of macro ‘push_array’
  366 |         Child_Process **processes_to_free = push_array(scratch, Child_Process*, child_processes->active_child_process_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct Child_Process**’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:366:45: note: in expansion of macro ‘push_array’
  366 |         Child_Process **processes_to_free = push_array(scratch, Child_Process*, child_processes->active_child_process_count);
      |                                             ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:370:22: note: in expansion of macro ‘push_array’
  370 |         char *dest = push_array(scratch, char, max);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:370:22: note: in expansion of macro ‘push_array’
  370 |         char *dest = push_array(scratch, char, max);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:370:22: note: in expansion of macro ‘push_array’
  370 |         char *dest = push_array(scratch, char, max);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘char*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:370:22: note: in expansion of macro ‘push_array’
  370 |         char *dest = push_array(scratch, char, max);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed.cpp:375:44: note: in expansion of macro ‘CastFromMember’
  375 |             Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:375:44: note: in expansion of macro ‘CastFromMember’
  375 |             Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:375:44: note: in expansion of macro ‘CastFromMember’
  375 |             Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:375:44: note: in expansion of macro ‘CastFromMember’
  375 |             Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Child_Process*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed.cpp:375:44: note: in expansion of macro ‘CastFromMember’
  375 |             Child_Process *child_process = CastFromMember(Child_Process, node, node);
      |                                            ^~~~~~~~~~~~~~
./code/4ed.cpp:382:17: warning: variable ‘edited_file’ set but not used [-Wunused-but-set-variable]
  382 |             b32 edited_file = false;
      |                 ^~~~~~~~~~~
./code/4ed.cpp:450:59: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  450 |         event.mouse_wheel.value = (f32)(input->mouse.wheel);
      |                                                           ^
      |                                   -----
      |                                   static_cast<f32> (       )
./code/4ed.cpp:510:75: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  510 |         file_names.vals = push_array(scratch, String_Const_u8, file_names.count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:510:27: note: in expansion of macro ‘push_array’
  510 |         file_names.vals = push_array(scratch, String_Const_u8, file_names.count);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:510:27: note: in expansion of macro ‘push_array’
  510 |         file_names.vals = push_array(scratch, String_Const_u8, file_names.count);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:510:27: note: in expansion of macro ‘push_array’
  510 |         file_names.vals = push_array(scratch, String_Const_u8, file_names.count);
      |                           ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:510:27: note: in expansion of macro ‘push_array’
  510 |         file_names.vals = push_array(scratch, String_Const_u8, file_names.count);
      |                           ^~~~~~~~~~
./code/4ed.cpp:517:65: warning: conversion to ‘long unsigned int’ from ‘i32’ {aka ‘int’} may change the sign of the result [-Wsign-conversion]
  517 |         flags.vals = push_array(scratch, String_Const_u8, flags.count);
./code/custom/4coder_base_types.cpp:3229:89: note: in definition of macro ‘push_array’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                         ^
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:517:22: note: in expansion of macro ‘push_array’
  517 |         flags.vals = push_array(scratch, String_Const_u8, flags.count);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:517:22: note: in expansion of macro ‘push_array’
  517 |         flags.vals = push_array(scratch, String_Const_u8, flags.count);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/custom/4coder_base_types.cpp:2991:38: note: in expansion of macro ‘string_u8_litexpr’
 2991 | #define file_name_line_number_lit_u8 string_u8_litexpr(file_name_line_number)
      |                                      ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:93: note: in expansion of macro ‘file_name_line_number_lit_u8’
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                             ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed.cpp:517:22: note: in expansion of macro ‘push_array’
  517 |         flags.vals = push_array(scratch, String_Const_u8, flags.count);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3229:122: warning: use of old-style cast to ‘struct String_Const_u8*’ [-Wold-style-cast]
 3229 | #define push_array(a,T,c) ((T*)linalloc_wrap_unintialized(linalloc_push((a), sizeof(T)*(c), file_name_line_number_lit_u8)))
      |                                                                                                                          ^
./code/4ed.cpp:517:22: note: in expansion of macro ‘push_array’
  517 |         flags.vals = push_array(scratch, String_Const_u8, flags.count);
      |                      ^~~~~~~~~~
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed.cpp:594:9: note: in expansion of macro ‘Assert’
  594 |         Assert(view != 0);
      |         ^~~~~~
./code/4ed.cpp:616:24: warning: switch missing default case [-Wswitch-default]
  616 |                 switch (consume_rule){
      |                        ^
./code/4ed.cpp:596:16: warning: switch missing default case [-Wswitch-default]
  596 |         switch (models->state){
      |                ^
./code/4ed.cpp:596:16: warning: enumeration value ‘APP_STATE_COUNT’ not handled in switch [-Wswitch]
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed.cpp:673:17: note: in expansion of macro ‘Assert’
  673 |                 Assert(dependent_text->kind == InputEventKind_TextInsert);
      |                 ^~~~~~
./code/4ed.cpp:700:50: warning: use of old-style cast to ‘f64’ {aka ‘double’} [-Wold-style-cast]
  700 |         literal_dt = (f32)((f64)(elapsed_useconds)/1000000.f);
      |                                                  ^
      |                            -----
      |                            static_cast<f64> (     )
./code/4ed.cpp:700:61: warning: use of old-style cast to ‘f32’ {aka ‘float’} [-Wold-style-cast]
  700 |         literal_dt = (f32)((f64)(elapsed_useconds)/1000000.f);
      |                                                             ^
      |                      -----
      |                      static_cast<f32> (                      )
./code/custom/4coder_base_types.h:277:33: warning: use of old-style cast to ‘i32*’ {aka ‘int*’} [-Wold-style-cast]
  277 | #define AssertBreak(m) (*((i32*)0) = 0xA11E)
      |                                 ^
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:278:44: note: in expansion of macro ‘AssertBreak’
  278 | #define AssertAlways(c) Stmnt( if (!(c)) { AssertBreak(c); } )
      |                                            ^~~~~~~~~~~
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed.cpp:724:9: note: in expansion of macro ‘Assert’
  724 |         Assert(working_set->has_external_mod_sentinel.next != 0);
      |         ^~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed.cpp:730:38: note: in expansion of macro ‘CastFromMember’
  730 |                 Editing_File *file = CastFromMember(Editing_File, external_mod_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:730:38: note: in expansion of macro ‘CastFromMember’
  730 |                 Editing_File *file = CastFromMember(Editing_File, external_mod_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:730:38: note: in expansion of macro ‘CastFromMember’
  730 |                 Editing_File *file = CastFromMember(Editing_File, external_mod_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:730:38: note: in expansion of macro ‘CastFromMember’
  730 |                 Editing_File *file = CastFromMember(Editing_File, external_mod_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Editing_File*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed.cpp:730:38: note: in expansion of macro ‘CastFromMember’
  730 |                 Editing_File *file = CastFromMember(Editing_File, external_mod_node, node);
      |                                      ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:48: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                ^
./code/4ed.cpp:766:28: note: in expansion of macro ‘CastFromMember’
  766 |             Panel *panel = CastFromMember(Panel, node, node);
      |                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:255:27: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  255 | #define Member(S,m) (((S*)0)->m)
      |                           ^
./code/custom/4coder_base_types.h:252:28: note: in definition of macro ‘PtrDif’
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                            ^
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:257:39: note: in expansion of macro ‘Member’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                                       ^~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:766:28: note: in expansion of macro ‘CastFromMember’
  766 |             Panel *panel = CastFromMember(Panel, node, node);
      |                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:29: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                             ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:766:28: note: in expansion of macro ‘CastFromMember’
  766 |             Panel *panel = CastFromMember(Panel, node, node);
      |                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:252:40: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
  252 | #define PtrDif(a,b) ((u8*)(a) - (u8*)(b))
      |                                        ^
./code/custom/4coder_base_types.h:253:21: note: in expansion of macro ‘PtrDif’
  253 | #define PtrAsInt(a) PtrDif(a,0)
      |                     ^~~~~~
./code/custom/4coder_base_types.h:257:29: note: in expansion of macro ‘PtrAsInt’
  257 | #define OffsetOfMember(S,m) PtrAsInt(&Member(S,m))
      |                             ^~~~~~~~
./code/custom/4coder_base_types.h:260:52: note: in expansion of macro ‘OffsetOfMember’
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                    ^~~~~~~~~~~~~~
./code/4ed.cpp:766:28: note: in expansion of macro ‘CastFromMember’
  766 |             Panel *panel = CastFromMember(Panel, node, node);
      |                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:260:72: warning: use of old-style cast to ‘struct Panel*’ [-Wold-style-cast]
  260 | #define CastFromMember(S,m,ptr) (S*)( (u8*)(ptr) - OffsetOfMember(S,m) )
      |                                                                        ^
./code/4ed.cpp:766:28: note: in expansion of macro ‘CastFromMember’
  766 |             Panel *panel = CastFromMember(Panel, node, node);
      |                            ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.h:549:28: warning: operation on ‘models->Models::wind_down_stack’ may be undefined [-Wsequence-point]
  549 | #define sll_stack_pop_(h) h=h=h->next
      |                            ^
./code/custom/4coder_base_types.h:555:27: note: in expansion of macro ‘sll_stack_pop_’
  555 | #define sll_stack_pop(h) (sll_stack_pop_((h)))
      |                           ^~~~~~~~~~~~~~
./code/4ed.cpp:792:9: note: in expansion of macro ‘sll_stack_pop’
  792 |         sll_stack_pop(models->wind_down_stack);
      |         ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:42: warning: use of old-style cast to ‘u8*’ {aka ‘unsigned char*’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                          ^
./code/4ed.cpp:805:37: note: in expansion of macro ‘string_u8_litexpr’
  805 |                 print_message(&app, string_u8_litexpr(M));
      |                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:35: warning: cast from type ‘const char*’ to type ‘u8*’ {aka ‘unsigned char*’} casts away qualifiers [-Wcast-qual]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                   ^~~~~~~~
./code/4ed.cpp:805:37: note: in expansion of macro ‘string_u8_litexpr’
  805 |                 print_message(&app, string_u8_litexpr(M));
      |                                     ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2983:64: warning: use of old-style cast to ‘u64’ {aka ‘long unsigned int’} [-Wold-style-cast]
 2983 | #define string_u8_litexpr(s) SCu8((u8*)(s), (u64)(sizeof(s) - 1))
      |                                                                ^
./code/4ed.cpp:805:37: note: in expansion of macro ‘string_u8_litexpr’
  805 |                 print_message(&app, string_u8_litexpr(M));
      |                                     ^~~~~~~~~~~~~~~~~
./code/4ed.cpp: At global scope:
./code/4ed.cpp:868:34: warning: no previous declaration for ‘App_Functions app_get_functions()’ [-Wmissing-declarations]
  868 | extern "C" App_Get_Functions_Sig(app_get_functions){
      |                                  ^~~~~~~~~~~~~~~~~
./code/4ed.h:102:51: note: in definition of macro ‘App_Get_Functions_Sig’
  102 | #define App_Get_Functions_Sig(name) App_Functions name()
      |                                                   ^~~~
./code/4ed_api_implementation.cpp:74:1: warning: ‘b32 is_running_coroutine(Application_Links*)’ defined but not used [-Wunused-function]
   74 | is_running_coroutine(Application_Links *app){
      | ^~~~~~~~~~~~~~~~~~~~
./code/4ed_edit.cpp:88:1: warning: ‘i32 edit_fix_markers__compute_scroll_y(i32, i32, f32)’ defined but not used [-Wunused-function]
   88 | edit_fix_markers__compute_scroll_y(i32 line_height, i32 old_y_val, f32 new_y_val_aligned){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:805:1: warning: ‘void global_set_font_and_update_files(Models*, Face*)’ defined but not used [-Wunused-function]
  805 | global_set_font_and_update_files(Models *models, Face *new_global_face){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:791:1: warning: ‘void adjust_views_looking_at_file_to_new_cursor(Thread_Context*, Models*, Editing_File*)’ defined but not used [-Wunused-function]
  791 | adjust_views_looking_at_file_to_new_cursor(Thread_Context *tctx, Models *models, Editing_File *file){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:776:1: warning: ‘b32 file_is_viewed(Layout*, Editing_File*)’ defined but not used [-Wunused-function]
  776 | file_is_viewed(Layout *layout, Editing_File *file){
      | ^~~~~~~~~~~~~~
./code/4ed_view.cpp:659:1: warning: ‘void co_full_abort(Thread_Context*, Models*, View*)’ defined but not used [-Wunused-function]
  659 | co_full_abort(Thread_Context *tctx, Models *models, View *view){
      | ^~~~~~~~~~~~~
./code/4ed_view.cpp:292:1: warning: ‘i64 view_line_character_difference(Thread_Context*, Models*, View*, i64, i64)’ defined but not used [-Wunused-function]
  292 | view_line_character_difference(Thread_Context *tctx, Models *models, View *view,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:281:1: warning: ‘Line_Shift_Character view_line_shift_characters(Thread_Context*, Models*, View*, i64, i64)’ defined but not used [-Wunused-function]
  281 | view_line_shift_characters(Thread_Context *tctx, Models *models, View *view,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:271:1: warning: ‘Buffer_Point view_move_buffer_point(Thread_Context*, Models*, View*, Buffer_Point, Vec2_f32)’ defined but not used [-Wunused-function]
  271 | view_move_buffer_point(Thread_Context *tctx, Models *models, View *view,
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:260:1: warning: ‘Vec2_f32 view_buffer_point_difference(Thread_Context*, Models*, View*, Buffer_Point, Buffer_Point)’ defined but not used [-Wunused-function]
  260 | view_buffer_point_difference(Thread_Context *tctx, Models *models, View *view,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_view.cpp:171:1: warning: ‘f32 view_height(Thread_Context*, Models*, View*)’ defined but not used [-Wunused-function]
  171 | view_height(Thread_Context *tctx, Models *models, View *view){
      | ^~~~~~~~~~~
./code/4ed_view.cpp:87:1: warning: ‘i32 view_get_index(Live_Views*, View*)’ defined but not used [-Wunused-function]
   87 | view_get_index(Live_Views *live_set, View *view){
      | ^~~~~~~~~~~~~~
./code/4ed_layout.cpp:325:1: warning: ‘void layout_set_margin(Layout*, i32)’ defined but not used [-Wunused-function]
  325 | layout_set_margin(Layout *layout, i32 margin){
      | ^~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp:13:1: warning: ‘Panel_Split make_panel_split(Panel_Split_Kind, i32)’ defined but not used [-Wunused-function]
   13 | make_panel_split(Panel_Split_Kind kind, i32 v){
      | ^~~~~~~~~~~~~~~~
./code/4ed_cli.cpp:24:1: warning: ‘void child_process_container_release(Child_Process_Container*, Models*)’ defined but not used [-Wunused-function]
   24 | child_process_container_release(Child_Process_Container *container, Models *models){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_hot_directory.cpp:64:1: warning: ‘void hot_directory_reload(Arena*, Hot_Directory*)’ defined but not used [-Wunused-function]
   64 | hot_directory_reload(Arena *scratch, Hot_Directory *hot_directory){
      | ^~~~~~~~~~~~~~~~~~~~
./code/4ed_hot_directory.cpp:48:1: warning: ‘void hot_directory_fixup(Hot_Directory*)’ defined but not used [-Wunused-function]
   48 | hot_directory_fixup(Hot_Directory *hot_directory){
      | ^~~~~~~~~~~~~~~~~~~
./code/4ed_working_set.cpp:195:1: warning: ‘Editing_File* get_file_from_identifier(Working_Set*, Buffer_Identifier)’ defined but not used [-Wunused-function]
  195 | get_file_from_identifier(Working_Set *working_set, Buffer_Identifier buffer){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_file.cpp:78:1: warning: ‘b32 file_can_save(Editing_File*)’ defined but not used [-Wunused-function]
   78 | file_can_save(Editing_File *file){
      | ^~~~~~~~~~~~~
./code/4ed_buffer.cpp:661:1: warning: ‘b32 buffer_invert_batch(Arena*, Gap_Buffer*, Edit*, Edit*, i64)’ defined but not used [-Wunused-function]
  661 | buffer_invert_batch(Arena *arena, Gap_Buffer *buffer, Edit *edits, Edit *inverse, i64 count){
      | ^~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:307:1: warning: ‘String_Const_u8 buffer_eol_convert_out(Arena*, Gap_Buffer*, Range_i64)’ defined but not used [-Wunused-function]
  307 | buffer_eol_convert_out(Arena *arena, Gap_Buffer *buffer, Range_i64 range){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/4ed_buffer.cpp:176:1: warning: ‘b32 buffer_good(Gap_Buffer*)’ defined but not used [-Wunused-function]
  176 | buffer_good(Gap_Buffer *buffer){
      | ^~~~~~~~~~~
./code/4ed_render_target.cpp:346:1: warning: ‘f32 font_string_width(Render_Target*, Face*, u8*)’ defined but not used [-Wunused-function]
  346 | font_string_width(Render_Target *target, Face *face, u8 *str){
      | ^~~~~~~~~~~~~~~~~
./code/4ed_render_target.cpp:336:1: warning: ‘f32 draw_string(Render_Target*, Face*, u8*, Vec2_f32, u32)’ defined but not used [-Wunused-function]
  336 | draw_string(Render_Target *target, Face *face, u8 *str, Vec2_f32 point, u32 color){
      | ^~~~~~~~~~~
./code/4ed_render_target.cpp:331:1: warning: ‘f32 draw_string(Render_Target*, Face*, u8*, Vec2_f32, u32, u32, Vec2_f32)’ defined but not used [-Wunused-function]
  331 | draw_string(Render_Target *target, Face *face, u8 *str, Vec2_f32 point, u32 color, u32 flags, Vec2_f32 delta){
      | ^~~~~~~~~~~
./code/4ed_render_target.cpp:326:1: warning: ‘f32 draw_string(Render_Target*, Face*, String_Const_u8, Vec2_f32, u32)’ defined but not used [-Wunused-function]
  326 | draw_string(Render_Target *target, Face *face, String_Const_u8 string, Vec2_f32 point, u32 color){
      | ^~~~~~~~~~~
./code/4ed_font_set.cpp:131:1: warning: ‘Face_ID font_set_get_fallback_face(Font_Set*)’ defined but not used [-Wunused-function]
  131 | font_set_get_fallback_face(Font_Set *set){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:101:
./code/docs/4ed_doc_helper.cpp:161:1: warning: ‘void doc_api_check_full_coverage(Arena*, Doc_Cluster*, API_Definition*)’ defined but not used [-Wunused-function]
  161 | doc_api_check_full_coverage(Arena *arena, Doc_Cluster *cluster, API_Definition *api_def){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/docs/4ed_doc_helper.cpp:137:1: warning: ‘Doc_Block* doc_function_examples(Arena*, Doc_Function*)’ defined but not used [-Wunused-function]
  137 | doc_function_examples(Arena *arena, Doc_Function *func){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_doc_content_types.cpp:197:1: warning: ‘Doc_Content* doc_text(Arena*, Doc_Content_List*, char*)’ defined but not used [-Wunused-function]
  197 | doc_text(Arena *arena, Doc_Content_List *list, char *string){
      | ^~~~~~~~
./code/custom/4coder_doc_content_types.cpp:151:1: warning: ‘void doc_log(Arena*, Doc_Cluster*, char*)’ defined but not used [-Wunused-function]
  151 | doc_log(Arena *arena, Doc_Cluster *cluster, char *str){
      | ^~~~~~~
./code/custom/4coder_doc_content_types.cpp:135:1: warning: ‘Doc_Paragraph* new_doc_par_table(Arena*, Doc_Block*)’ defined but not used [-Wunused-function]
  135 | new_doc_par_table(Arena *arena, Doc_Block *block){
      | ^~~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:315:1: warning: ‘API_Definition_List api_parse_source(Arena*, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
  315 | api_parse_source(Arena *arena, String_Const_u8 source_name, String_Const_u8 source){
      | ^~~~~~~~~~~~~~~~
./code/4ed_api_parser.cpp:200:1: warning: ‘String_Const_u8 api_parse__restringize_token_range(Arena*, String_Const_u8, Token*, Token*)’ defined but not used [-Wunused-function]
  200 | api_parse__restringize_token_range(Arena *arena, String_Const_u8 source, Token *token, Token *token_end){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:605:1: warning: ‘void api_list_check(Arena*, API_Definition_List*, API_Definition_List*, API_Check_Flag, List_String_Const_u8*)’ defined but not used [-Wunused-function]
  605 | api_list_check(Arena *arena, API_Definition_List *correct, API_Definition_List *remote, API_Check_Flag flags, List_String_Const_u8 *error_list){
      | ^~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:421:1: warning: ‘b32 api_definition_generate_api_includes(Arena*, API_Definition*, Generated_Group, API_Generation_Flag)’ defined but not used [-Wunused-function]
  421 | api_definition_generate_api_includes(Arena *arena, API_Definition *api, Generated_Group group, API_Generation_Flag flags){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:146:1: warning: ‘b32 api_type_match(API_Type*, API_Type*)’ defined but not used [-Wunused-function]
  146 | api_type_match(API_Type *a, API_Type *b){
      | ^~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:132:1: warning: ‘API_Type* api_get_type(API_Definition*, String_Const_u8)’ defined but not used [-Wunused-function]
  132 | api_get_type(API_Definition *api, String_Const_u8 name){
      | ^~~~~~~~~~~~
./code/4ed_api_definition.cpp:31:1: warning: ‘API_Call* api_call_with_location(Arena*, API_Definition*, char*, char*, char*)’ defined but not used [-Wunused-function]
   31 | api_call_with_location(Arena *arena, API_Definition *api, char *name, char *type, char *location){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:658:1: warning: ‘Token_Relex token_relex(Token_List, i64, Token*, i64, i64)’ defined but not used [-Wunused-function]
  658 | token_relex(Token_List relex_list, i64 new_pos_to_old_pos_shift, Token *tokens, i64 relex_first, i64 relex_last){
      | ^~~~~~~~~~~
./code/custom/4coder_token.cpp:637:1: warning: ‘i64 token_relex_resync(Token_Array*, i64, i64)’ defined but not used [-Wunused-function]
  637 | token_relex_resync(Token_Array *tokens, i64 edit_range_first, i64 look_ahead_repeats){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:616:1: warning: ‘i64 token_relex_first(Token_Array*, i64, i64)’ defined but not used [-Wunused-function]
  616 | token_relex_first(Token_Array *tokens, i64 edit_range_first, i64 backup_repeats){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:599:1: warning: ‘void token_drop_eof(Token_List*)’ defined but not used [-Wunused-function]
  599 | token_drop_eof(Token_List *list){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:582:1: warning: ‘b32 token_it_dec(Token_Iterator*)’ defined but not used [-Wunused-function]
  582 | token_it_dec(Token_Iterator *it){
      | ^~~~~~~~~~~~
./code/custom/4coder_token.cpp:552:1: warning: ‘b32 token_it_dec_non_whitespace(Token_Iterator*)’ defined but not used [-Wunused-function]
  552 | token_it_dec_non_whitespace(Token_Iterator *it){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:537:1: warning: ‘b32 token_it_inc_non_whitespace(Token_Iterator*)’ defined but not used [-Wunused-function]
  537 | token_it_inc_non_whitespace(Token_Iterator *it){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:522:1: warning: ‘b32 token_it_dec_all(Token_Iterator*)’ defined but not used [-Wunused-function]
  522 | token_it_dec_all(Token_Iterator *it){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:507:1: warning: ‘b32 token_it_inc_all(Token_Iterator*)’ defined but not used [-Wunused-function]
  507 | token_it_inc_all(Token_Iterator *it){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:492:1: warning: ‘i64 token_it_index(Token_Iterator*)’ defined but not used [-Wunused-function]
  492 | token_it_index(Token_Iterator *it){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:461:1: warning: ‘Token_Iterator token_iterator(Token_Iterator_Array)’ defined but not used [-Wunused-function]
  461 | token_iterator(Token_Iterator_Array it){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:309:1: warning: ‘Token_Iterator_List token_iterator_pos(u64, Token_List*, i64)’ defined but not used [-Wunused-function]
  309 | token_iterator_pos(u64 user_id, Token_List *list, i64 pos){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:167:1: warning: ‘Token_Iterator_Array token_iterator_pos(u64, Token*, i64, i64)’ defined but not used [-Wunused-function]
  167 | token_iterator_pos(u64 user_id, Token *tokens, i64 count, i64 pos){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:162:1: warning: ‘Token_Iterator_Array token_iterator(u64, Token_Array*)’ defined but not used [-Wunused-function]
  162 | token_iterator(u64 user_id, Token_Array *tokens){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:157:1: warning: ‘Token_Iterator_Array token_iterator(u64, Token*, i64)’ defined but not used [-Wunused-function]
  157 | token_iterator(u64 user_id, Token *tokens, i64 count){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:152:1: warning: ‘Token_Iterator_Array token_iterator(u64, Token_Array*, Token*)’ defined but not used [-Wunused-function]
  152 | token_iterator(u64 user_id, Token_Array *tokens, Token *token){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:147:1: warning: ‘Token_Iterator_Array token_iterator(u64, Token*, i64, Token*)’ defined but not used [-Wunused-function]
  147 | token_iterator(u64 user_id, Token *tokens, i64 count, Token *token){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:142:1: warning: ‘Token_Iterator_Array token_iterator_index(u64, Token_Array*, i64)’ defined but not used [-Wunused-function]
  142 | token_iterator_index(u64 user_id, Token_Array *tokens, i64 token_index){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:122:1: warning: ‘Token* token_from_pos(Token_Array*, u64)’ defined but not used [-Wunused-function]
  122 | token_from_pos(Token_Array *tokens, u64 pos){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:116:1: warning: ‘Token* token_from_pos(Token*, i64, i64)’ defined but not used [-Wunused-function]
  116 | token_from_pos(Token *tokens, i64 count, i64 pos){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:62:1: warning: ‘Token_Array token_array_from_list(Arena*, Token_List*)’ defined but not used [-Wunused-function]
   62 | token_array_from_list(Arena *arena, Token_List *list){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_token.cpp:50:1: warning: ‘Token_Array token_array_from_list_always_copy(Arena*, Token_List*)’ defined but not used [-Wunused-function]
   50 | token_array_from_list_always_copy(Arena *arena, Token_List *list){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:92:
./code/generated/font_api.cpp:2:1: warning: ‘void font_api_fill_vtable(API_VTable_font*)’ defined but not used [-Wunused-function]
    2 | font_api_fill_vtable(API_VTable_font *vtable){
      | ^~~~~~~~~~~~~~~~~~~~
In file included from ./code/4ed_app_target.cpp:90:
./code/generated/graphics_api.cpp:2:1: warning: ‘void graphics_api_fill_vtable(API_VTable_graphics*)’ defined but not used [-Wunused-function]
    2 | graphics_api_fill_vtable(API_VTable_graphics *vtable){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_codepoint_map.cpp:60:1: warning: ‘f32 font_get_average_glyph_advance_range(Face_Advance_Map*, Face_Metrics*, u32, u32, f32)’ defined but not used [-Wunused-function]
   60 | font_get_average_glyph_advance_range(Face_Advance_Map *map, Face_Metrics *metrics,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_codepoint_map.cpp:48:1: warning: ‘f32 font_get_max_glyph_advance_range(Face_Advance_Map*, Face_Metrics*, u32, u32, f32)’ defined but not used [-Wunused-function]
   48 | font_get_max_glyph_advance_range(Face_Advance_Map *map, Face_Metrics *metrics,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_codepoint_map.cpp:23:1: warning: ‘u16 codepoint_index_map_count(Codepoint_Index_Map*)’ defined but not used [-Wunused-function]
   23 | codepoint_index_map_count(Codepoint_Index_Map *map){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:771:1: warning: ‘void map_set_binding_l(Mapping*, Command_Map*, void (*)(Application_Links*), u32, u32, ...)’ defined but not used [-Wunused-function]
  771 | map_set_binding_l(Mapping *mapping, Command_Map *map, Custom_Command_Function *custom, u32 code1, u32 code2, ...){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:682:1: warning: ‘void command_trigger_stringize(Arena*, List_String_Const_u8*, Command_Trigger*)’ defined but not used [-Wunused-function]
  682 | command_trigger_stringize(Arena *arena, List_String_Const_u8 *list, Command_Trigger *trigger){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:662:1: warning: ‘void map_set_binding_text_input(Mapping*, Command_Map_ID, Command_Binding)’ defined but not used [-Wunused-function]
  662 | map_set_binding_text_input(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:655:1: warning: ‘void map_set_binding_core(Mapping*, Command_Map_ID, Command_Binding, Core_Code, Input_Modifier_Set*)’ defined but not used [-Wunused-function]
  655 | map_set_binding_core(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding,
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:648:1: warning: ‘void map_set_binding_mouse(Mapping*, Command_Map_ID, Command_Binding, Mouse_Code, Input_Modifier_Set*)’ defined but not used [-Wunused-function]
  648 | map_set_binding_mouse(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding,
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:641:1: warning: ‘void map_set_binding_key(Mapping*, Command_Map_ID, Command_Binding, Key_Code, Input_Modifier_Set*)’ defined but not used [-Wunused-function]
  641 | map_set_binding_key(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding,
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:634:1: warning: ‘void map_set_binding(Mapping*, Command_Map_ID, Command_Binding, u32, u32, Input_Modifier_Set*)’ defined but not used [-Wunused-function]
  634 | map_set_binding(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding,
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:628:1: warning: ‘void map_null_parent(Mapping*, Command_Map_ID)’ defined but not used [-Wunused-function]
  628 | map_null_parent(Mapping *mapping, Command_Map_ID map_id){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:622:1: warning: ‘void map_set_parent(Mapping*, Command_Map*, Command_Map_ID)’ defined but not used [-Wunused-function]
  622 | map_set_parent(Mapping *mapping, Command_Map *map, Command_Map_ID parent_id){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:615:1: warning: ‘void map_set_parent(Mapping*, Command_Map_ID, Command_Map_ID)’ defined but not used [-Wunused-function]
  615 | map_set_parent(Mapping *mapping, Command_Map_ID map_id, Command_Map_ID parent_id){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:609:1: warning: ‘Command_Trigger_List map_get_triggers_recursive(Arena*, Mapping*, Command_Map_ID, Command_Binding)’ defined but not used [-Wunused-function]
  609 | map_get_triggers_recursive(Arena *arena, Mapping *mapping, Command_Map_ID map_id, Command_Binding binding){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:603:1: warning: ‘Command_Trigger_List map_get_triggers_non_recursive(Mapping*, Command_Map_ID, Command_Binding)’ defined but not used [-Wunused-function]
  603 | map_get_triggers_non_recursive(Mapping *mapping, Command_Map_ID map_id, Command_Binding binding){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:597:1: warning: ‘Command_Binding map_get_binding_recursive(Mapping*, Command_Map_ID, Input_Event*)’ defined but not used [-Wunused-function]
  597 | map_get_binding_recursive(Mapping *mapping, Command_Map_ID map_id, Input_Event *event){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:591:1: warning: ‘Command_Binding map_get_binding_non_recursive(Mapping*, Command_Map_ID, Input_Event*)’ defined but not used [-Wunused-function]
  591 | map_get_binding_non_recursive(Mapping *mapping, Command_Map_ID map_id, Input_Event *event){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:585:1: warning: ‘Command_Binding_List* map_get_binding_list_on_key(Mapping*, Command_Map_ID, Key_Code)’ defined but not used [-Wunused-function]
  585 | map_get_binding_list_on_key(Mapping *mapping, Command_Map_ID map_id, Key_Code code){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:520:1: warning: ‘Command_Binding_List* map_get_binding_list_on_core(Command_Map*, Core_Code)’ defined but not used [-Wunused-function]
  520 | map_get_binding_list_on_core(Command_Map *map, Core_Code code){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:510:1: warning: ‘Command_Binding_List* map_get_binding_list_on_mouse_button(Command_Map*, Mouse_Code)’ defined but not used [-Wunused-function]
  510 | map_get_binding_list_on_mouse_button(Command_Map *map, Mouse_Code code){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:175:1: warning: ‘void mapping_release_map(Mapping*, Command_Map*)’ defined but not used [-Wunused-function]
  175 | mapping_release_map(Mapping *mapping, Command_Map *map){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:164:1: warning: ‘Command_Map* mapping_get_or_make_map(Mapping*, Command_Map_ID)’ defined but not used [-Wunused-function]
  164 | mapping_get_or_make_map(Mapping *mapping, Command_Map_ID id){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:155:1: warning: ‘Command_Map_ID mapping_validate_id(Mapping*, Command_Map_ID)’ defined but not used [-Wunused-function]
  155 | mapping_validate_id(Mapping *mapping, Command_Map_ID id){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:128:1: warning: ‘void mapping_release(Thread_Context*, Mapping*)’ defined but not used [-Wunused-function]
  128 | mapping_release(Thread_Context *tctx, Mapping *mapping){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:118:1: warning: ‘void mapping_init(Thread_Context*, Mapping*)’ defined but not used [-Wunused-function]
  118 | mapping_init(Thread_Context *tctx, Mapping *mapping){
      | ^~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:87:1: warning: ‘void mapping__free_binding_list(Mapping*, Command_Binding_List*)’ defined but not used [-Wunused-function]
   87 | mapping__free_binding_list(Mapping *mapping, Command_Binding_List *binding_list){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:70:1: warning: ‘void mapping__free_modified_binding(Mapping*, Command_Modified_Binding*)’ defined but not used [-Wunused-function]
   70 | mapping__free_modified_binding(Mapping *mapping, Command_Modified_Binding *binding){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_command_map.cpp:52:1: warning: ‘void mapping__free_map(Mapping*, Command_Map*)’ defined but not used [-Wunused-function]
   52 | mapping__free_map(Mapping *mapping, Command_Map *map){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:868:1: warning: ‘void table_clear(Table_Data_Data*)’ defined but not used [-Wunused-function]
  868 | table_clear(Table_Data_Data *table){
      | ^~~~~~~~~~~
./code/custom/4coder_table.cpp:854:1: warning: ‘b32 table_erase(Table_Data_Data*, String_Const_u8)’ defined but not used [-Wunused-function]
  854 | table_erase(Table_Data_Data *table, String_Const_u8 key){
      | ^~~~~~~~~~~
./code/custom/4coder_table.cpp:829:1: warning: ‘b32 table_insert(Table_Data_Data*, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
  829 | table_insert(Table_Data_Data *table, String_Const_u8 key, String_Const_u8 val){
      | ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:793:1: warning: ‘b32 table_read(Table_Data_Data*, String_Const_u8, String_Const_u8*)’ defined but not used [-Wunused-function]
  793 | table_read(Table_Data_Data *table, String_Const_u8 key, String_Const_u8 *val_out){
      | ^~~~~~~~~~
./code/custom/4coder_table.cpp:783:1: warning: ‘b32 table_read_key(Table_Data_Data*, Table_Lookup, String_Const_u8*)’ defined but not used [-Wunused-function]
  783 | table_read_key(Table_Data_Data *table, Table_Lookup lookup, String_Const_u8 *key_out){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:692:1: warning: ‘void table_clear(Table_u64_Data*)’ defined but not used [-Wunused-function]
  692 | table_clear(Table_u64_Data *table){
      | ^~~~~~~~~~~
./code/custom/4coder_table.cpp:613:1: warning: ‘b32 table_read(Table_u64_Data*, u64, String_Const_u8*)’ defined but not used [-Wunused-function]
  613 | table_read(Table_u64_Data *table, u64 key, String_Const_u8 *val_out){
      | ^~~~~~~~~~
./code/custom/4coder_table.cpp:437:1: warning: ‘b32 table_read_key(Table_Data_u64*, Table_Lookup, String_Const_u8*)’ defined but not used [-Wunused-function]
  437 | table_read_key(Table_Data_u64 *table, Table_Lookup lookup, String_Const_u8 *key_out){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:344:1: warning: ‘void table_clear(Table_u32_u16*)’ defined but not used [-Wunused-function]
  344 | table_clear(Table_u32_u16 *table){
      | ^~~~~~~~~~~
./code/custom/4coder_table.cpp:338:1: warning: ‘b32 table_erase(Table_u32_u16*, u32)’ defined but not used [-Wunused-function]
  338 | table_erase(Table_u32_u16 *table, u32 key){
      | ^~~~~~~~~~~
./code/custom/4coder_table.cpp:301:1: warning: ‘b32 table_insert(Table_u32_u16*, u32, u16)’ defined but not used [-Wunused-function]
  301 | table_insert(Table_u32_u16 *table, u32 key, u16 val){
      | ^~~~~~~~~~~~
./code/custom/4coder_table.cpp:183:1: warning: ‘void table_clear(Table_u64_u64*)’ defined but not used [-Wunused-function]
  183 | table_clear(Table_u64_u64 *table){
      | ^~~~~~~~~~~
./code/custom/4coder_hash_functions.cpp:68:1: warning: ‘u64 table_hash(void*, i32, u64)’ defined but not used [-Wunused-function]
   68 | table_hash(void *v, i32 it_size, u64 size){
      | ^~~~~~~~~~
./code/custom/4coder_profile.cpp:138:1: warning: ‘void thread_profile_record_pop(Application_Links*, u64, Profile_ID)’ defined but not used [-Wunused-function]
  138 | thread_profile_record_pop(Application_Links *app, u64 time, Profile_ID id){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:132:1: warning: ‘Profile_ID thread_profile_record_push(Application_Links*, u64, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
  132 | thread_profile_record_push(Application_Links *app, u64 time,
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_profile.cpp:85:1: warning: ‘void profile_thread_set_name(Thread_Context*, Profile_Global_List*, String_Const_u8)’ defined but not used [-Wunused-function]
   85 | profile_thread_set_name(Thread_Context *tctx, Profile_Global_List *list, String_Const_u8 name){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:391:1: warning: ‘Input_Event parse_keyboard_event(Arena*, String_Const_u8)’ defined but not used [-Wunused-function]
  391 | parse_keyboard_event(Arena *arena, String_Const_u8 text){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:282:1: warning: ‘Input_Event* push_input_event(Arena*, Input_List*)’ defined but not used [-Wunused-function]
  282 | push_input_event(Arena *arena, Input_List *list){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:189:1: warning: ‘b32 match_core_code(Input_Event*, Core_Code)’ defined but not used [-Wunused-function]
  189 | match_core_code(Input_Event *event, Core_Code code){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:174:1: warning: ‘b32 match_key_code(Input_Event*, Key_Code)’ defined but not used [-Wunused-function]
  174 | match_key_code(Input_Event *event, Key_Code code){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:165:1: warning: ‘String_Const_u8 to_writable(Input_Event*)’ defined but not used [-Wunused-function]
  165 | to_writable(Input_Event *event){
      | ^~~~~~~~~~~
./code/custom/4coder_events.cpp:149:1: warning: ‘Input_Event event_next_text_event(Input_Event*)’ defined but not used [-Wunused-function]
  149 | event_next_text_event(Input_Event *event){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:144:1: warning: ‘b32 event_is_dead_key(Input_Event*)’ defined but not used [-Wunused-function]
  144 | event_is_dead_key(Input_Event *event){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:134:1: warning: ‘b32 is_modified(Input_Event*)’ defined but not used [-Wunused-function]
  134 | is_modified(Input_Event *event){
      | ^~~~~~~~~~~
./code/custom/4coder_events.cpp:121:1: warning: ‘b32 is_unmodified_key(Input_Event*)’ defined but not used [-Wunused-function]
  121 | is_unmodified_key(Input_Event *event){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_events.cpp:115:1: warning: ‘b32 has_modifier(Input_Event*, Key_Code)’ defined but not used [-Wunused-function]
  115 | has_modifier(Input_Event *event, Key_Code modifier){
      | ^~~~~~~~~~~~
./code/custom/4coder_events.cpp:71:1: warning: ‘void set_modifier(Input_Modifier_Set_Fixed*, Key_Code, b32)’ defined but not used [-Wunused-function]
   71 | set_modifier(Input_Modifier_Set_Fixed *set, Key_Code mod, b32 val){
      | ^~~~~~~~~~~~
./code/custom/4coder_events.cpp:40:1: warning: ‘void copy_modifier_set(Input_Modifier_Set_Fixed*, Input_Modifier_Set*)’ defined but not used [-Wunused-function]
   40 | copy_modifier_set(Input_Modifier_Set_Fixed *dst, Input_Modifier_Set *set){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp:310:1: warning: ‘String_Const_u8 date_time_format(Arena*, char*, Date_Time*)’ defined but not used [-Wunused-function]
  310 | date_time_format(Arena *arena, char *format, Date_Time *date_time){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp:299:1: warning: ‘void date_time_format(Arena*, List_String_Const_u8*, char*, Date_Time*)’ defined but not used [-Wunused-function]
  299 | date_time_format(Arena *arena, List_String_Const_u8 *list, char *format, Date_Time *date_time){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp:54:1: warning: ‘void string_list_pushf(Arena*, List_String_Const_char*, char*, ...)’ defined but not used [-Wunused-function]
   54 | string_list_pushf(Arena *arena, List_String_Const_char *list, char *format, ...){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_stringf.cpp:25:1: warning: ‘String_Const_u8 push_stringf(Arena*, char*, ...)’ defined but not used [-Wunused-function]
   25 | push_stringf(Arena *arena, char *format, ...){
      | ^~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:140:1: warning: ‘String_Match_List string_match_list_merge_front_to_back(String_Match_List*, String_Match_List*)’ defined but not used [-Wunused-function]
  140 | string_match_list_merge_front_to_back(String_Match_List *a, String_Match_List *b){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:83:1: warning: ‘void string_match_list_filter_remove_buffer_predicate(Application_Links*, String_Match_List*, b32 (*)(Application_Links*, Buffer_ID))’ defined but not used [-Wunused-function]
   83 | string_match_list_filter_remove_buffer_predicate(Application_Links *app, String_Match_List *list, Buffer_Predicate *predicate){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:68:1: warning: ‘void string_match_list_filter_remove_buffer(String_Match_List*, Buffer_ID)’ defined but not used [-Wunused-function]
   68 | string_match_list_filter_remove_buffer(String_Match_List *list, Buffer_ID buffer){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:51:1: warning: ‘void string_match_list_filter_flags(String_Match_List*, String_Match_Flag, String_Match_Flag)’ defined but not used [-Wunused-function]
   51 | string_match_list_filter_flags(String_Match_List *list, String_Match_Flag must_have_flags, String_Match_Flag must_not_have_flags){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_string_match.cpp:32:1: warning: ‘String_Match_List string_match_list_join(String_Match_List*, String_Match_List*)’ defined but not used [-Wunused-function]
   32 | string_match_list_join(String_Match_List *a, String_Match_List *b){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7325:1: warning: ‘Date_Time date_time_from_time_stamp(u64)’ defined but not used [-Wunused-function]
 7325 | date_time_from_time_stamp(u64 time_stamp){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7306:1: warning: ‘u64 time_stamp_from_date_time(Date_Time*)’ defined but not used [-Wunused-function]
 7306 | time_stamp_from_date_time(Date_Time *date_time){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7259:1: warning: ‘String_Const_u8 data_decode_from_base64(Arena*, u8*, u64)’ defined but not used [-Wunused-function]
 7259 | data_decode_from_base64(Arena *arena, u8 *str, u64 size){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7220:1: warning: ‘String_Const_u8 string_base64_encode_from_binary(Arena*, void*, u64)’ defined but not used [-Wunused-function]
 7220 | string_base64_encode_from_binary(Arena *arena, void *data, u64 size){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7215:1: warning: ‘u64 string_to_integer(String_Const_char, u32)’ defined but not used [-Wunused-function]
 7215 | string_to_integer(String_Const_char string, u32 radix){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7176:1: warning: ‘b32 string_is_integer(String_Const_u8, u32)’ defined but not used [-Wunused-function]
 7176 | string_is_integer(String_Const_u8 string, u32 radix){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7133:1: warning: ‘u64 digit_count_from_integer(u64, u32)’ defined but not used [-Wunused-function]
 7133 | digit_count_from_integer(u64 x, u32 radix){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7093:1: warning: ‘String_Const_u8 string_interpret_escapes(Arena*, String_Const_u8)’ defined but not used [-Wunused-function]
 7093 | string_interpret_escapes(Arena *arena, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:7002:1: warning: ‘b32 data_is_ascii(String_Const_u8)’ defined but not used [-Wunused-function]
 7002 | data_is_ascii(String_Const_u8 data){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6990:1: warning: ‘String_Const_u32 string_replace(Arena*, String_Const_u32, String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 6990 | string_replace(Arena *arena, String_Const_u32 source, String_Const_u32 needle, String_Const_u32 replacement){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6986:1: warning: ‘String_Const_u16 string_replace(Arena*, String_Const_u16, String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 6986 | string_replace(Arena *arena, String_Const_u16 source, String_Const_u16 needle, String_Const_u16 replacement){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6982:1: warning: ‘String_Const_u8 string_replace(Arena*, String_Const_u8, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 6982 | string_replace(Arena *arena, String_Const_u8 source, String_Const_u8 needle, String_Const_u8 replacement){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6978:1: warning: ‘String_Const_char string_replace(Arena*, String_Const_char, String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 6978 | string_replace(Arena *arena, String_Const_char source, String_Const_char needle, String_Const_char replacement){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6854:1: warning: ‘Line_Ending_Kind string_guess_line_ending_kind(String_Const_u8)’ defined but not used [-Wunused-function]
 6854 | string_guess_line_ending_kind(String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6841:1: warning: ‘List_String_Const_u32 string_list_u32_from_any(Arena*, List_String_Const_Any)’ defined but not used [-Wunused-function]
 6841 | string_list_u32_from_any(Arena *arena, List_String_Const_Any list){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6831:1: warning: ‘List_String_Const_u16 string_list_u16_from_any(Arena*, List_String_Const_Any)’ defined but not used [-Wunused-function]
 6831 | string_list_u16_from_any(Arena *arena, List_String_Const_Any list){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6821:1: warning: ‘List_String_Const_u8 string_list_u8_from_any(Arena*, List_String_Const_Any)’ defined but not used [-Wunused-function]
 6821 | string_list_u8_from_any(Arena *arena, List_String_Const_Any list){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6811:1: warning: ‘List_String_Const_char string_list_char_from_any(Arena*, List_String_Const_Any)’ defined but not used [-Wunused-function]
 6811 | string_list_char_from_any(Arena *arena, List_String_Const_Any list){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6799:1: warning: ‘String_Const_Any string_any_from_any(Arena*, String_Encoding, String_Const_Any)’ defined but not used [-Wunused-function]
 6799 | string_any_from_any(Arena *arena, String_Encoding encoding, String_Const_Any string){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6306:1: warning: ‘void string_list_reverse(List_String_Const_u32*)’ defined but not used [-Wunused-function]
 6306 | string_list_reverse(List_String_Const_u32 *list){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6293:1: warning: ‘void string_list_reverse(List_String_Const_u16*)’ defined but not used [-Wunused-function]
 6293 | string_list_reverse(List_String_Const_u16 *list){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6267:1: warning: ‘void string_list_reverse(List_String_Const_char*)’ defined but not used [-Wunused-function]
 6267 | string_list_reverse(List_String_Const_char *list){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6262:1: warning: ‘b32 string_wildcard_match_insensitive(List_String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 6262 | string_wildcard_match_insensitive(List_String_Const_u8 list, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6258:1: warning: ‘b32 string_wildcard_match(List_String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 6258 | string_wildcard_match(List_String_Const_u8 list, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6207:1: warning: ‘List_String_Const_u8 string_split_wildcards(Arena*, String_Const_u8)’ defined but not used [-Wunused-function]
 6207 | string_split_wildcards(Arena *arena, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6199:1: warning: ‘String_Const_u32 string_condense_whitespace(Arena*, String_Const_u32)’ defined but not used [-Wunused-function]
 6199 | string_condense_whitespace(Arena *arena, String_Const_u32 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6192:1: warning: ‘String_Const_u16 string_condense_whitespace(Arena*, String_Const_u16)’ defined but not used [-Wunused-function]
 6192 | string_condense_whitespace(Arena *arena, String_Const_u16 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6185:1: warning: ‘String_Const_u8 string_condense_whitespace(Arena*, String_Const_u8)’ defined but not used [-Wunused-function]
 6185 | string_condense_whitespace(Arena *arena, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6178:1: warning: ‘String_Const_char string_condense_whitespace(Arena*, String_Const_char)’ defined but not used [-Wunused-function]
 6178 | string_condense_whitespace(Arena *arena, String_Const_char string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6165:1: warning: ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u32*, String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 6165 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u32 *list, String_Const_u32 needle, String_Const_u32 new_value){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6153:1: warning: ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u16*, String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 6153 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u16 *list, String_Const_u16 needle, String_Const_u16 new_value){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6141:1: warning: ‘void string_list_rewrite_nodes(Arena*, List_String_Const_u8*, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 6141 | string_list_rewrite_nodes(Arena *arena, List_String_Const_u8 *list, String_Const_u8 needle, String_Const_u8 new_value){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:6129:1: warning: ‘void string_list_rewrite_nodes(Arena*, List_String_Const_char*, String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 6129 | string_list_rewrite_nodes(Arena *arena, List_String_Const_char *list, String_Const_char needle, String_Const_char new_value){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5983:1: warning: ‘List_String_Const_u32 string_split_needle(Arena*, String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 5983 | string_split_needle(Arena *arena, String_Const_u32 string, String_Const_u32 needle){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5967:1: warning: ‘List_String_Const_u16 string_split_needle(Arena*, String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 5967 | string_split_needle(Arena *arena, String_Const_u16 string, String_Const_u16 needle){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5951:1: warning: ‘List_String_Const_u8 string_split_needle(Arena*, String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 5951 | string_split_needle(Arena *arena, String_Const_u8 string, String_Const_u8 needle){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5935:1: warning: ‘List_String_Const_char string_split_needle(Arena*, String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 5935 | string_split_needle(Arena *arena, String_Const_char string, String_Const_char needle){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5845:1: warning: ‘String_Const_u32 string_list_flatten(Arena*, List_String_Const_u32)’ defined but not used [-Wunused-function]
 5845 | string_list_flatten(Arena *arena, List_String_Const_u32 string){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5841:1: warning: ‘String_Const_u16 string_list_flatten(Arena*, List_String_Const_u16)’ defined but not used [-Wunused-function]
 5841 | string_list_flatten(Arena *arena, List_String_Const_u16 string){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5833:1: warning: ‘String_Const_char string_list_flatten(Arena*, List_String_Const_char)’ defined but not used [-Wunused-function]
 5833 | string_list_flatten(Arena *arena, List_String_Const_char string){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5813:1: warning: ‘String_Const_u32 string_list_flatten(Arena*, List_String_Const_u32, String_Const_u32 (*)(String_Const_u32), String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5813 | string_list_flatten(Arena *arena, List_String_Const_u32 list, String_u32_Mod_Function_Type *mod, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5809:1: warning: ‘String_Const_u16 string_list_flatten(Arena*, List_String_Const_u16, String_Const_u16 (*)(String_Const_u16), String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5809 | string_list_flatten(Arena *arena, List_String_Const_u16 list, String_u16_Mod_Function_Type *mod, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5805:1: warning: ‘String_Const_u8 string_list_flatten(Arena*, List_String_Const_u8, String_Const_u8 (*)(String_Const_u8), String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5805 | string_list_flatten(Arena *arena, List_String_Const_u8 list, String_u8_Mod_Function_Type *mod, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5801:1: warning: ‘String_Const_char string_list_flatten(Arena*, List_String_Const_char, String_Const_char (*)(String_Const_char), String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5801 | string_list_flatten(Arena *arena, List_String_Const_char list, String_char_Mod_Function_Type *mod, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5797:1: warning: ‘String_Const_u32 string_list_flatten(Arena*, List_String_Const_u32, String_Const_u32, String_Separator_Flag, String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5797 | string_list_flatten(Arena *arena, List_String_Const_u32 list, String_Const_u32 separator, String_Separator_Flag separator_flags, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5793:1: warning: ‘String_Const_u16 string_list_flatten(Arena*, List_String_Const_u16, String_Const_u16, String_Separator_Flag, String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5793 | string_list_flatten(Arena *arena, List_String_Const_u16 list, String_Const_u16 separator, String_Separator_Flag separator_flags, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5789:1: warning: ‘String_Const_u8 string_list_flatten(Arena*, List_String_Const_u8, String_Const_u8, String_Separator_Flag, String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5789 | string_list_flatten(Arena *arena, List_String_Const_u8 list, String_Const_u8 separator, String_Separator_Flag separator_flags, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5785:1: warning: ‘String_Const_char string_list_flatten(Arena*, List_String_Const_char, String_Const_char, String_Separator_Flag, String_Fill_Terminate_Rule)’ defined but not used [-Wunused-function]
 5785 | string_list_flatten(Arena *arena, List_String_Const_char list, String_Const_char separator, String_Separator_Flag separator_flags, String_Fill_Terminate_Rule rule){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5641:1: warning: ‘void string_list_push_overlap(Arena*, List_String_Const_u32*, u32, String_Const_u32)’ defined but not used [-Wunused-function]
 5641 | string_list_push_overlap(Arena *arena, List_String_Const_u32 *list, u32 overlap, String_Const_u32 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5616:1: warning: ‘void string_list_push_overlap(Arena*, List_String_Const_u16*, u16, String_Const_u16)’ defined but not used [-Wunused-function]
 5616 | string_list_push_overlap(Arena *arena, List_String_Const_u16 *list, u16 overlap, String_Const_u16 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5591:1: warning: ‘void string_list_push_overlap(Arena*, List_String_Const_u8*, u8, String_Const_u8)’ defined but not used [-Wunused-function]
 5591 | string_list_push_overlap(Arena *arena, List_String_Const_u8 *list, u8 overlap, String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5566:1: warning: ‘void string_list_push_overlap(Arena*, List_String_Const_char*, char, String_Const_char)’ defined but not used [-Wunused-function]
 5566 | string_list_push_overlap(Arena *arena, List_String_Const_char *list, char overlap, String_Const_char string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5558:1: warning: ‘void string_list_push(List_String_Const_Any*, List_String_Const_Any*)’ defined but not used [-Wunused-function]
 5558 | string_list_push(List_String_Const_Any *list, List_String_Const_Any *src_list){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5550:1: warning: ‘void string_list_push(List_String_Const_u32*, List_String_Const_u32*)’ defined but not used [-Wunused-function]
 5550 | string_list_push(List_String_Const_u32 *list, List_String_Const_u32 *src_list){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5543:1: warning: ‘void string_list_push(List_String_Const_u16*, List_String_Const_u16*)’ defined but not used [-Wunused-function]
 5543 | string_list_push(List_String_Const_u16 *list, List_String_Const_u16 *src_list){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5529:1: warning: ‘void string_list_push(List_String_Const_char*, List_String_Const_char*)’ defined but not used [-Wunused-function]
 5529 | string_list_push(List_String_Const_char *list, List_String_Const_char *src_list){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5517:1: warning: ‘void string_list_push(Arena*, List_String_Const_Any*, String_Const_Any)’ defined but not used [-Wunused-function]
 5517 | string_list_push(Arena *arena, List_String_Const_Any *list, String_Const_Any string){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5477:1: warning: ‘void string_list_push(List_String_Const_u32*, Node_String_Const_u32*)’ defined but not used [-Wunused-function]
 5477 | string_list_push(List_String_Const_u32 *list, Node_String_Const_u32 *node){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5471:1: warning: ‘void string_list_push(List_String_Const_u16*, Node_String_Const_u16*)’ defined but not used [-Wunused-function]
 5471 | string_list_push(List_String_Const_u16 *list, Node_String_Const_u16 *node){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5465:1: warning: ‘void string_list_push(List_String_Const_u8*, Node_String_Const_u8*)’ defined but not used [-Wunused-function]
 5465 | string_list_push(List_String_Const_u8 *list, Node_String_Const_u8 *node){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5459:1: warning: ‘void string_list_push(List_String_Const_char*, Node_String_Const_char*)’ defined but not used [-Wunused-function]
 5459 | string_list_push(List_String_Const_char *list, Node_String_Const_char *node){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5436:1: warning: ‘String_Const_Any push_string_copy(Arena*, u64, String_Const_Any)’ defined but not used [-Wunused-function]
 5436 | push_string_copy(Arena *arena, u64 size, String_Const_Any src){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5382:1: warning: ‘String_Const_Any string_const_any_push(Arena*, u64, String_Encoding)’ defined but not used [-Wunused-function]
 5382 | string_const_any_push(Arena *arena, u64 size, String_Encoding encoding){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5336:1: warning: ‘String_Any string_any_push(Arena*, u64, String_Encoding)’ defined but not used [-Wunused-function]
 5336 | string_any_push(Arena *arena, u64 size, String_Encoding encoding){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5269:1: warning: ‘b32 string_append_character(String_u32*, u32)’ defined but not used [-Wunused-function]
 5269 | string_append_character(String_u32 *dst, u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5265:1: warning: ‘b32 string_append_character(String_u16*, u16)’ defined but not used [-Wunused-function]
 5265 | string_append_character(String_u16 *dst, u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5261:1: warning: ‘b32 string_append_character(String_u8*, u8)’ defined but not used [-Wunused-function]
 5261 | string_append_character(String_u8 *dst, u8 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5199:1: warning: ‘String_Const_u32 string_mod_replace_character(String_Const_u32, u32, u32)’ defined but not used [-Wunused-function]
 5199 | string_mod_replace_character(String_Const_u32 str, u32 o, u32 n){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5191:1: warning: ‘String_Const_u16 string_mod_replace_character(String_Const_u16, u16, u16)’ defined but not used [-Wunused-function]
 5191 | string_mod_replace_character(String_Const_u16 str, u16 o, u16 n){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5183:1: warning: ‘String_Const_u8 string_mod_replace_character(String_Const_u8, u8, u8)’ defined but not used [-Wunused-function]
 5183 | string_mod_replace_character(String_Const_u8 str, u8 o, u8 n){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5175:1: warning: ‘String_Const_char string_mod_replace_character(String_Const_char, char, char)’ defined but not used [-Wunused-function]
 5175 | string_mod_replace_character(String_Const_char str, char o, char n){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5167:1: warning: ‘String_Const_u32 string_mod_lower(String_Const_u32)’ defined but not used [-Wunused-function]
 5167 | string_mod_lower(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5160:1: warning: ‘String_Const_u16 string_mod_lower(String_Const_u16)’ defined but not used [-Wunused-function]
 5160 | string_mod_lower(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5153:1: warning: ‘String_Const_u8 string_mod_lower(String_Const_u8)’ defined but not used [-Wunused-function]
 5153 | string_mod_lower(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5146:1: warning: ‘String_Const_char string_mod_lower(String_Const_char)’ defined but not used [-Wunused-function]
 5146 | string_mod_lower(String_Const_char str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5139:1: warning: ‘String_Const_u32 string_mod_upper(String_Const_u32)’ defined but not used [-Wunused-function]
 5139 | string_mod_upper(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5132:1: warning: ‘String_Const_u16 string_mod_upper(String_Const_u16)’ defined but not used [-Wunused-function]
 5132 | string_mod_upper(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5125:1: warning: ‘String_Const_u8 string_mod_upper(String_Const_u8)’ defined but not used [-Wunused-function]
 5125 | string_mod_upper(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5118:1: warning: ‘String_Const_char string_mod_upper(String_Const_char)’ defined but not used [-Wunused-function]
 5118 | string_mod_upper(String_Const_char str){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5103:1: warning: ‘i32 string_compare_insensitive(String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 5103 | string_compare_insensitive(String_Const_u32 a, String_Const_u32 b){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5089:1: warning: ‘i32 string_compare_insensitive(String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 5089 | string_compare_insensitive(String_Const_u16 a, String_Const_u16 b){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5075:1: warning: ‘i32 string_compare_insensitive(String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 5075 | string_compare_insensitive(String_Const_u8 a, String_Const_u8 b){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5061:1: warning: ‘i32 string_compare_insensitive(String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 5061 | string_compare_insensitive(String_Const_char a, String_Const_char b){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5046:1: warning: ‘i32 string_compare(String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 5046 | string_compare(String_Const_u32 a, String_Const_u32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5032:1: warning: ‘i32 string_compare(String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 5032 | string_compare(String_Const_u16 a, String_Const_u16 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:5004:1: warning: ‘i32 string_compare(String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 5004 | string_compare(String_Const_char a, String_Const_char b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4999:1: warning: ‘b32 string_has_substr(String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 4999 | string_has_substr(String_Const_u8 str, String_Const_u8 needle){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4994:1: warning: ‘b32 string_has_substr(String_Const_u8, String_Const_u8, String_Match_Rule)’ defined but not used [-Wunused-function]
 4994 | string_has_substr(String_Const_u8 str, String_Const_u8 needle, String_Match_Rule rule){
      | ^~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4989:1: warning: ‘u64 string_find_first_insensitive(String_Const_u32, String_Const_u32)’ defined but not used [-Wunused-function]
 4989 | string_find_first_insensitive(String_Const_u32 str, String_Const_u32 needle){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4985:1: warning: ‘u64 string_find_first_insensitive(String_Const_u16, String_Const_u16)’ defined but not used [-Wunused-function]
 4985 | string_find_first_insensitive(String_Const_u16 str, String_Const_u16 needle){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4981:1: warning: ‘u64 string_find_first_insensitive(String_Const_u8, String_Const_u8)’ defined but not used [-Wunused-function]
 4981 | string_find_first_insensitive(String_Const_u8 str, String_Const_u8 needle){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4977:1: warning: ‘u64 string_find_first_insensitive(String_Const_char, String_Const_char)’ defined but not used [-Wunused-function]
 4977 | string_find_first_insensitive(String_Const_char str, String_Const_char needle){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4732:1: warning: ‘b32 string_match(String_Const_Any, String_Const_Any)’ defined but not used [-Wunused-function]
 4732 | string_match(String_Const_Any a, String_Const_Any b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4666:1: warning: ‘String_Const_u32 string_skip_chop_whitespace(String_Const_u32)’ defined but not used [-Wunused-function]
 4666 | string_skip_chop_whitespace(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4658:1: warning: ‘String_Const_u16 string_skip_chop_whitespace(String_Const_u16)’ defined but not used [-Wunused-function]
 4658 | string_skip_chop_whitespace(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4650:1: warning: ‘String_Const_u8 string_skip_chop_whitespace(String_Const_u8)’ defined but not used [-Wunused-function]
 4650 | string_skip_chop_whitespace(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4642:1: warning: ‘String_Const_char string_skip_chop_whitespace(String_Const_char)’ defined but not used [-Wunused-function]
 4642 | string_skip_chop_whitespace(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4635:1: warning: ‘String_Const_u32 string_chop_whitespace(String_Const_u32)’ defined but not used [-Wunused-function]
 4635 | string_chop_whitespace(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4629:1: warning: ‘String_Const_u16 string_chop_whitespace(String_Const_u16)’ defined but not used [-Wunused-function]
 4629 | string_chop_whitespace(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4623:1: warning: ‘String_Const_u8 string_chop_whitespace(String_Const_u8)’ defined but not used [-Wunused-function]
 4623 | string_chop_whitespace(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4617:1: warning: ‘String_Const_char string_chop_whitespace(String_Const_char)’ defined but not used [-Wunused-function]
 4617 | string_chop_whitespace(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4610:1: warning: ‘String_Const_u32 string_skip_whitespace(String_Const_u32)’ defined but not used [-Wunused-function]
 4610 | string_skip_whitespace(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4604:1: warning: ‘String_Const_u16 string_skip_whitespace(String_Const_u16)’ defined but not used [-Wunused-function]
 4604 | string_skip_whitespace(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4598:1: warning: ‘String_Const_u8 string_skip_whitespace(String_Const_u8)’ defined but not used [-Wunused-function]
 4598 | string_skip_whitespace(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4592:1: warning: ‘String_Const_char string_skip_whitespace(String_Const_char)’ defined but not used [-Wunused-function]
 4592 | string_skip_whitespace(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4583:1: warning: ‘String_Const_u32 string_file_without_extension(String_Const_u32)’ defined but not used [-Wunused-function]
 4583 | string_file_without_extension(String_Const_u32 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4575:1: warning: ‘String_Const_u16 string_file_without_extension(String_Const_u16)’ defined but not used [-Wunused-function]
 4575 | string_file_without_extension(String_Const_u16 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4567:1: warning: ‘String_Const_u8 string_file_without_extension(String_Const_u8)’ defined but not used [-Wunused-function]
 4567 | string_file_without_extension(String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4559:1: warning: ‘String_Const_char string_file_without_extension(String_Const_char)’ defined but not used [-Wunused-function]
 4559 | string_file_without_extension(String_Const_char string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4554:1: warning: ‘String_Const_u32 string_file_extension(String_Const_u32)’ defined but not used [-Wunused-function]
 4554 | string_file_extension(String_Const_u32 string){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4550:1: warning: ‘String_Const_u16 string_file_extension(String_Const_u16)’ defined but not used [-Wunused-function]
 4550 | string_file_extension(String_Const_u16 string){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4546:1: warning: ‘String_Const_u8 string_file_extension(String_Const_u8)’ defined but not used [-Wunused-function]
 4546 | string_file_extension(String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4542:1: warning: ‘String_Const_char string_file_extension(String_Const_char)’ defined but not used [-Wunused-function]
 4542 | string_file_extension(String_Const_char string){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4533:1: warning: ‘String_Const_u8 string_front_folder_of_path(String_Const_u8)’ defined but not used [-Wunused-function]
 4533 | string_front_folder_of_path(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4522:1: warning: ‘String_Const_u8 string_remove_front_folder_of_path(String_Const_u8)’ defined but not used [-Wunused-function]
 4522 | string_remove_front_folder_of_path(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4513:1: warning: ‘String_Const_u32 string_front_of_path(String_Const_u32)’ defined but not used [-Wunused-function]
 4513 | string_front_of_path(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4505:1: warning: ‘String_Const_u16 string_front_of_path(String_Const_u16)’ defined but not used [-Wunused-function]
 4505 | string_front_of_path(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4489:1: warning: ‘String_Const_char string_front_of_path(String_Const_char)’ defined but not used [-Wunused-function]
 4489 | string_front_of_path(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4477:1: warning: ‘String_Const_u32 string_remove_front_of_path(String_Const_u32)’ defined but not used [-Wunused-function]
 4477 | string_remove_front_of_path(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4466:1: warning: ‘String_Const_u16 string_remove_front_of_path(String_Const_u16)’ defined but not used [-Wunused-function]
 4466 | string_remove_front_of_path(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4455:1: warning: ‘String_Const_u8 string_remove_front_of_path(String_Const_u8)’ defined but not used [-Wunused-function]
 4455 | string_remove_front_of_path(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4444:1: warning: ‘String_Const_char string_remove_front_of_path(String_Const_char)’ defined but not used [-Wunused-function]
 4444 | string_remove_front_of_path(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4432:1: warning: ‘b32 string_looks_like_drive_letter(String_Const_u8)’ defined but not used [-Wunused-function]
 4432 | string_looks_like_drive_letter(String_Const_u8 string){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4417:1: warning: ‘String_Const_u32 string_remove_last_folder(String_Const_u32)’ defined but not used [-Wunused-function]
 4417 | string_remove_last_folder(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4403:1: warning: ‘String_Const_u16 string_remove_last_folder(String_Const_u16)’ defined but not used [-Wunused-function]
 4403 | string_remove_last_folder(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4375:1: warning: ‘String_Const_char string_remove_last_folder(String_Const_char)’ defined but not used [-Wunused-function]
 4375 | string_remove_last_folder(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4340:1: warning: ‘u64 string_find_first_slash(String_Const_u32)’ defined but not used [-Wunused-function]
 4340 | string_find_first_slash(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4334:1: warning: ‘u64 string_find_first_slash(String_Const_u16)’ defined but not used [-Wunused-function]
 4334 | string_find_first_slash(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4328:1: warning: ‘u64 string_find_first_slash(String_Const_u8)’ defined but not used [-Wunused-function]
 4328 | string_find_first_slash(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4322:1: warning: ‘u64 string_find_first_slash(String_Const_char)’ defined but not used [-Wunused-function]
 4322 | string_find_first_slash(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4261:1: warning: ‘i64 string_find_last_whitespace(String_Const_u32)’ defined but not used [-Wunused-function]
 4261 | string_find_last_whitespace(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4254:1: warning: ‘i64 string_find_last_whitespace(String_Const_u16)’ defined but not used [-Wunused-function]
 4254 | string_find_last_whitespace(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4247:1: warning: ‘i64 string_find_last_whitespace(String_Const_u8)’ defined but not used [-Wunused-function]
 4247 | string_find_last_whitespace(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4240:1: warning: ‘i64 string_find_last_whitespace(String_Const_char)’ defined but not used [-Wunused-function]
 4240 | string_find_last_whitespace(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4234:1: warning: ‘u64 string_find_first_whitespace(String_Const_u32)’ defined but not used [-Wunused-function]
 4234 | string_find_first_whitespace(String_Const_u32 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4228:1: warning: ‘u64 string_find_first_whitespace(String_Const_u16)’ defined but not used [-Wunused-function]
 4228 | string_find_first_whitespace(String_Const_u16 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4222:1: warning: ‘u64 string_find_first_whitespace(String_Const_u8)’ defined but not used [-Wunused-function]
 4222 | string_find_first_whitespace(String_Const_u8 str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4216:1: warning: ‘u64 string_find_first_whitespace(String_Const_char)’ defined but not used [-Wunused-function]
 4216 | string_find_first_whitespace(String_Const_char str){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4140:1: warning: ‘String_Const_u32 string_substring(String_Const_u32, Range_i64)’ defined but not used [-Wunused-function]
 4140 | string_substring(String_Const_u32 str, Range_i64 range){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4136:1: warning: ‘String_Const_u16 string_substring(String_Const_u16, Range_i64)’ defined but not used [-Wunused-function]
 4136 | string_substring(String_Const_u16 str, Range_i64 range){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4128:1: warning: ‘String_Const_char string_substring(String_Const_char, Range_i64)’ defined but not used [-Wunused-function]
 4128 | string_substring(String_Const_char str, Range_i64 range){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4117:1: warning: ‘String_Const_Any string_chop(String_Const_Any, u64)’ defined but not used [-Wunused-function]
 4117 | string_chop(String_Const_Any str, u64 n){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4081:1: warning: ‘String_Const_Any string_skip(String_Const_Any, u64)’ defined but not used [-Wunused-function]
 4081 | string_skip(String_Const_Any str, u64 n){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4041:1: warning: ‘String_Const_Any string_postfix(String_Const_Any, u64)’ defined but not used [-Wunused-function]
 4041 | string_postfix(String_Const_Any str, u64 size){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:4001:1: warning: ‘String_Const_Any string_prefix(String_Const_Any, u64)’ defined but not used [-Wunused-function]
 4001 | string_prefix(String_Const_Any str, u64 size){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3938:1: warning: ‘b32 character_is_alpha_numeric_unicode(u32)’ defined but not used [-Wunused-function]
 3938 | character_is_alpha_numeric_unicode(u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3934:1: warning: ‘b32 character_is_alpha_numeric_unicode(u16)’ defined but not used [-Wunused-function]
 3934 | character_is_alpha_numeric_unicode(u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3930:1: warning: ‘b32 character_is_alpha_numeric_unicode(u8)’ defined but not used [-Wunused-function]
 3930 | character_is_alpha_numeric_unicode(u8 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3925:1: warning: ‘b32 character_is_alpha_unicode(u32)’ defined but not used [-Wunused-function]
 3925 | character_is_alpha_unicode(u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3921:1: warning: ‘b32 character_is_alpha_unicode(u16)’ defined but not used [-Wunused-function]
 3921 | character_is_alpha_unicode(u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3917:1: warning: ‘b32 character_is_alpha_unicode(u8)’ defined but not used [-Wunused-function]
 3917 | character_is_alpha_unicode(u8 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3911:1: warning: ‘b32 character_is_alpha_numeric(u32)’ defined but not used [-Wunused-function]
 3911 | character_is_alpha_numeric(u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3907:1: warning: ‘b32 character_is_alpha_numeric(u16)’ defined but not used [-Wunused-function]
 3907 | character_is_alpha_numeric(u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3899:1: warning: ‘b32 character_is_alpha_numeric(char)’ defined but not used [-Wunused-function]
 3899 | character_is_alpha_numeric(char c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3894:1: warning: ‘b32 character_is_alpha(u32)’ defined but not used [-Wunused-function]
 3894 | character_is_alpha(u32 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3890:1: warning: ‘b32 character_is_alpha(u16)’ defined but not used [-Wunused-function]
 3890 | character_is_alpha(u16 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3882:1: warning: ‘b32 character_is_alpha(char)’ defined but not used [-Wunused-function]
 3882 | character_is_alpha(char c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3874:1: warning: ‘b32 character_is_base64(u32)’ defined but not used [-Wunused-function]
 3874 | character_is_base64(u32 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3867:1: warning: ‘b32 character_is_base64(u16)’ defined but not used [-Wunused-function]
 3867 | character_is_base64(u16 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3860:1: warning: ‘b32 character_is_base64(u8)’ defined but not used [-Wunused-function]
 3860 | character_is_base64(u8 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3853:1: warning: ‘b32 character_is_base64(char)’ defined but not used [-Wunused-function]
 3853 | character_is_base64(char c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3848:1: warning: ‘b32 character_is_base16(u32)’ defined but not used [-Wunused-function]
 3848 | character_is_base16(u32 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3844:1: warning: ‘b32 character_is_base16(u16)’ defined but not used [-Wunused-function]
 3844 | character_is_base16(u16 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3836:1: warning: ‘b32 character_is_base16(char)’ defined but not used [-Wunused-function]
 3836 | character_is_base16(char c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3831:1: warning: ‘b32 character_is_base10(u32)’ defined but not used [-Wunused-function]
 3831 | character_is_base10(u32 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3827:1: warning: ‘b32 character_is_base10(u16)’ defined but not used [-Wunused-function]
 3827 | character_is_base10(u16 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3823:1: warning: ‘b32 character_is_base10(u8)’ defined but not used [-Wunused-function]
 3823 | character_is_base10(u8 c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3819:1: warning: ‘b32 character_is_base10(char)’ defined but not used [-Wunused-function]
 3819 | character_is_base10(char c){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3740:1: warning: ‘b32 character_is_lower_unicode(u32)’ defined but not used [-Wunused-function]
 3740 | character_is_lower_unicode(u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3736:1: warning: ‘b32 character_is_lower_unicode(u16)’ defined but not used [-Wunused-function]
 3736 | character_is_lower_unicode(u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3732:1: warning: ‘b32 character_is_lower_unicode(u8)’ defined but not used [-Wunused-function]
 3732 | character_is_lower_unicode(u8 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3727:1: warning: ‘b32 character_is_lower(u32)’ defined but not used [-Wunused-function]
 3727 | character_is_lower(u32 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3723:1: warning: ‘b32 character_is_lower(u16)’ defined but not used [-Wunused-function]
 3723 | character_is_lower(u16 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3719:1: warning: ‘b32 character_is_lower(u8)’ defined but not used [-Wunused-function]
 3719 | character_is_lower(u8 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3715:1: warning: ‘b32 character_is_lower(char)’ defined but not used [-Wunused-function]
 3715 | character_is_lower(char c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3710:1: warning: ‘b32 character_is_upper(u32)’ defined but not used [-Wunused-function]
 3710 | character_is_upper(u32 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3706:1: warning: ‘b32 character_is_upper(u16)’ defined but not used [-Wunused-function]
 3706 | character_is_upper(u16 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3702:1: warning: ‘b32 character_is_upper(u8)’ defined but not used [-Wunused-function]
 3702 | character_is_upper(u8 c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3698:1: warning: ‘b32 character_is_upper(char)’ defined but not used [-Wunused-function]
 3698 | character_is_upper(char c){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3676:1: warning: ‘b32 character_is_basic_ascii(u32)’ defined but not used [-Wunused-function]
 3676 | character_is_basic_ascii(u32 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3672:1: warning: ‘b32 character_is_basic_ascii(u16)’ defined but not used [-Wunused-function]
 3672 | character_is_basic_ascii(u16 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3668:1: warning: ‘b32 character_is_basic_ascii(u8)’ defined but not used [-Wunused-function]
 3668 | character_is_basic_ascii(u8 c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3664:1: warning: ‘b32 character_is_basic_ascii(char)’ defined but not used [-Wunused-function]
 3664 | character_is_basic_ascii(char c){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3306:1: warning: ‘void tctx__free_arena_node(Thread_Context*, Arena_Node*)’ defined but not used [-Wunused-function]
 3306 | tctx__free_arena_node(Thread_Context *tctx, Arena_Node *node){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3277:1: warning: ‘void thread_ctx_release(Thread_Context*)’ defined but not used [-Wunused-function]
 3277 | thread_ctx_release(Thread_Context *tctx){
      | ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3236:1: warning: ‘Temp_Memory begin_temp(Cursor*)’ defined but not used [-Wunused-function]
 3236 | begin_temp(Cursor *cursor){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:3110:1: warning: ‘void linalloc_clear(Cursor*)’ defined but not used [-Wunused-function]
 3110 | linalloc_clear(Cursor *cursor){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:3071:1: warning: ‘Cursor make_cursor(Base_Allocator*, u64)’ defined but not used [-Wunused-function]
 3071 | make_cursor(Base_Allocator *allocator, u64 size){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2989:26: warning: ‘string_u8_empty’ defined but not used [-Wunused-variable]
 2989 | function String_Const_u8 string_u8_empty = {(u8*)"", 0};
      |                          ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2988:28: warning: ‘string_empty’ defined but not used [-Wunused-variable]
 2988 | function String_Const_char string_empty = {"", 0};
      |                            ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2976:1: warning: ‘String_Const_Any SCany(String_Const_u32)’ defined but not used [-Wunused-function]
 2976 | SCany(String_Const_u32 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2970:1: warning: ‘String_Const_Any SCany(String_Const_u16)’ defined but not used [-Wunused-function]
 2970 | SCany(String_Const_u16 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2964:1: warning: ‘String_Const_Any SCany(String_Const_u8)’ defined but not used [-Wunused-function]
 2964 | SCany(String_Const_u8 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2958:1: warning: ‘String_Const_Any SCany(String_Const_char)’ defined but not used [-Wunused-function]
 2958 | SCany(String_Const_char str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2946:1: warning: ‘String_Const_Any SCany(void*, String_Encoding)’ defined but not used [-Wunused-function]
 2946 | SCany(void *str, String_Encoding encoding){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2941:1: warning: ‘String_Const_u16 SCu16(wchar_t*)’ defined but not used [-Wunused-function]
 2941 | SCu16(wchar_t *str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2937:1: warning: ‘String_Const_u16 SCu16(wchar_t*, u64)’ defined but not used [-Wunused-function]
 2937 | SCu16(wchar_t *str, u64 size){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2928:1: warning: ‘String_Const_u8 SCu8(char*, char*)’ defined but not used [-Wunused-function]
 2928 | SCu8(char *first, char *one_past_last){
      | ^~~~
./code/custom/4coder_base_types.cpp:2910:1: warning: ‘String_Const_u32 SCu32(String_u32)’ defined but not used [-Wunused-function]
 2910 | SCu32(String_u32 string){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2906:1: warning: ‘String_Const_u16 SCu16(String_u16)’ defined but not used [-Wunused-function]
 2906 | SCu16(String_u16 string){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2902:1: warning: ‘String_Const_u8 SCu8(String_u8)’ defined but not used [-Wunused-function]
 2902 | SCu8(String_u8 string){
      | ^~~~
./code/custom/4coder_base_types.cpp:2898:1: warning: ‘String_Const_char SCchar(String_char)’ defined but not used [-Wunused-function]
 2898 | SCchar(String_char string){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:2861:1: warning: ‘String_Const_Any SCany(void*, void*, String_Encoding)’ defined but not used [-Wunused-function]
 2861 | SCany(void *str, void *one_past_last, String_Encoding encoding){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2811:1: warning: ‘String_Const_Any SCany(void*, u64, String_Encoding)’ defined but not used [-Wunused-function]
 2811 | SCany(void *str, u64 size, String_Encoding encoding){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2783:1: warning: ‘String_Any SCany(String_u32)’ defined but not used [-Wunused-function]
 2783 | SCany(String_u32 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2777:1: warning: ‘String_Any SCany(String_u16)’ defined but not used [-Wunused-function]
 2777 | SCany(String_u16 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2771:1: warning: ‘String_Any SCany(String_u8)’ defined but not used [-Wunused-function]
 2771 | SCany(String_u8 str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2765:1: warning: ‘String_Any SCany(String_char)’ defined but not used [-Wunused-function]
 2765 | SCany(String_char str){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2759:1: warning: ‘String_u32 Su32(String_Const_u32, u64)’ defined but not used [-Wunused-function]
 2759 | Su32(String_Const_u32 str, u64 cap){
      | ^~~~
./code/custom/4coder_base_types.cpp:2754:1: warning: ‘String_u16 Su16(String_Const_u16, u64)’ defined but not used [-Wunused-function]
 2754 | Su16(String_Const_u16 str, u64 cap){
      | ^~~~
./code/custom/4coder_base_types.cpp:2749:1: warning: ‘String_u8 Su8(String_Const_u8, u64)’ defined but not used [-Wunused-function]
 2749 | Su8(String_Const_u8 str, u64 cap){
      | ^~~
./code/custom/4coder_base_types.cpp:2744:1: warning: ‘String_char Schar(String_Const_char, u64)’ defined but not used [-Wunused-function]
 2744 | Schar(String_Const_char str, u64 cap){
      | ^~~~~
./code/custom/4coder_base_types.cpp:2732:1: warning: ‘String_Any Sany(void*, String_Encoding)’ defined but not used [-Wunused-function]
 2732 | Sany(void *str, String_Encoding encoding){
      | ^~~~
./code/custom/4coder_base_types.cpp:2695:1: warning: ‘String_Any Sany(void*, void*, String_Encoding)’ defined but not used [-Wunused-function]
 2695 | Sany(void *str, void *one_past_last, String_Encoding encoding){
      | ^~~~
./code/custom/4coder_base_types.cpp:2666:1: warning: ‘String_Any Sany(void*, u64, String_Encoding)’ defined but not used [-Wunused-function]
 2666 | Sany(void *str, u64 size, String_Encoding encoding){
      | ^~~~
./code/custom/4coder_base_types.cpp:2633:1: warning: ‘String_Any Sany(void*, u64, u64, String_Encoding)’ defined but not used [-Wunused-function]
 2633 | Sany(void *str, u64 size, u64 cap, String_Encoding encoding){
      | ^~~~
./code/custom/4coder_base_types.cpp:2570:1: warning: ‘Side flip_side(Side)’ defined but not used [-Wunused-function]
 2570 | flip_side(Side side){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2555:1: warning: ‘Scan_Direction flip_direction(Scan_Direction)’ defined but not used [-Wunused-function]
 2555 | flip_direction(Scan_Direction direction){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2548:1: warning: ‘Rect_f32_Pair rect_split_left_right_lerp(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2548 | rect_split_left_right_lerp(Rect_f32 rect, f32 t){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2543:1: warning: ‘Rect_f32_Pair rect_split_top_bottom_lerp(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2543 | rect_split_top_bottom_lerp(Rect_f32 rect, f32 t){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2538:1: warning: ‘Rect_f32_Pair rect_split_left_right_neg(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2538 | rect_split_left_right_neg(Rect_f32 rect, f32 x){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2533:1: warning: ‘Rect_f32_Pair rect_split_top_bottom_neg(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2533 | rect_split_top_bottom_neg(Rect_f32 rect, f32 y){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2528:1: warning: ‘Rect_f32_Pair rect_split_left_right(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2528 | rect_split_left_right(Rect_f32 rect, f32 x){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2523:1: warning: ‘Rect_f32_Pair rect_split_top_bottom(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2523 | rect_split_top_bottom(Rect_f32 rect, f32 y){
      | ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2484:1: warning: ‘Rect_f32 rect_intersect(Rect_f32, Rect_f32)’ defined but not used [-Wunused-function]
 2484 | rect_intersect(Rect_f32 a, Rect_f32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2476:1: warning: ‘Rect_i32 rect_union(Rect_i32, Rect_i32)’ defined but not used [-Wunused-function]
 2476 | rect_union(Rect_i32 a, Rect_i32 b){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2466:1: warning: ‘Rect_i32 rect_intersect(Rect_i32, Rect_i32)’ defined but not used [-Wunused-function]
 2466 | rect_intersect(Rect_i32 a, Rect_i32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2461:1: warning: ‘Vec2_f32 rect_half_dim(Rect_f32)’ defined but not used [-Wunused-function]
 2461 | rect_half_dim(Rect_f32 r){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2457:1: warning: ‘Vec2_i32 rect_half_dim(Rect_i32)’ defined but not used [-Wunused-function]
 2457 | rect_half_dim(Rect_i32 r){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2451:1: warning: ‘b32 rect_overlap(Rect_f32, Rect_f32)’ defined but not used [-Wunused-function]
 2451 | rect_overlap(Rect_f32 a, Rect_f32 b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2446:1: warning: ‘b32 rect_overlap(Rect_i32, Rect_i32)’ defined but not used [-Wunused-function]
 2446 | rect_overlap(Rect_i32 a, Rect_i32 b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2441:1: warning: ‘f32 rect_area(Rect_f32)’ defined but not used [-Wunused-function]
 2441 | rect_area(Rect_f32 r){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2437:1: warning: ‘i32 rect_area(Rect_i32)’ defined but not used [-Wunused-function]
 2437 | rect_area(Rect_i32 r){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:2411:1: warning: ‘Vec2_i32 rect_center(Rect_i32)’ defined but not used [-Wunused-function]
 2411 | rect_center(Rect_i32 r){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2398:1: warning: ‘Range_f32 rect_y(Rect_f32)’ defined but not used [-Wunused-function]
 2398 | rect_y(Rect_f32 r){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:2394:1: warning: ‘Range_f32 rect_x(Rect_f32)’ defined but not used [-Wunused-function]
 2394 | rect_x(Rect_f32 r){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:2385:1: warning: ‘i32 rect_height(Rect_i32)’ defined but not used [-Wunused-function]
 2385 | rect_height(Rect_i32 r){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2381:1: warning: ‘i32 rect_width(Rect_i32)’ defined but not used [-Wunused-function]
 2381 | rect_width(Rect_i32 r){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2377:1: warning: ‘Range_i32 rect_y(Rect_i32)’ defined but not used [-Wunused-function]
 2377 | rect_y(Rect_i32 r){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:2373:1: warning: ‘Range_i32 rect_x(Rect_i32)’ defined but not used [-Wunused-function]
 2373 | rect_x(Rect_i32 r){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:2359:1: warning: ‘Rect_f32 rect_inner(Rect_f32, f32)’ defined but not used [-Wunused-function]
 2359 | rect_inner(Rect_f32 r, f32 m){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2346:1: warning: ‘b32 rect_contains_point(Rect_f32, Vec2_f32)’ defined but not used [-Wunused-function]
 2346 | rect_contains_point(Rect_f32 a, Vec2_f32 b){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2337:1: warning: ‘b32 rect_equals(Rect_f32, Rect_f32)’ defined but not used [-Wunused-function]
 2337 | rect_equals(Rect_f32 a, Rect_f32 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2333:1: warning: ‘b32 rect_equals(Rect_i32, Rect_i32)’ defined but not used [-Wunused-function]
 2333 | rect_equals(Rect_i32 a, Rect_i32 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2322:1: warning: ‘Rect_f32 Rf32(Range_f32, Range_f32)’ defined but not used [-Wunused-function]
 2322 | Rf32(Range_f32 x, Range_f32 y){
      | ^~~~
./code/custom/4coder_base_types.cpp:2318:1: warning: ‘Rect_i32 Ri32(Range_i32, Range_i32)’ defined but not used [-Wunused-function]
 2318 | Ri32(Range_i32 x, Range_i32 y){
      | ^~~~
./code/custom/4coder_base_types.cpp:2312:1: warning: ‘Rect_f32 Rf32_xy_wh(Vec2_f32, Vec2_f32)’ defined but not used [-Wunused-function]
 2312 | Rf32_xy_wh(Vec2_f32 p0, Vec2_f32 d){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2307:1: warning: ‘Rect_i32 Ri32_xy_wh(Vec2_i32, Vec2_i32)’ defined but not used [-Wunused-function]
 2307 | Ri32_xy_wh(Vec2_i32 p0, Vec2_i32 d){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2301:1: warning: ‘Rect_f32 Rf32_xy_wh(f32, f32, f32, f32)’ defined but not used [-Wunused-function]
 2301 | Rf32_xy_wh(f32 x0, f32 y0, f32 w, f32 h){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2296:1: warning: ‘Rect_i32 Ri32_xy_wh(i32, i32, i32, i32)’ defined but not used [-Wunused-function]
 2296 | Ri32_xy_wh(i32 x0, i32 y0, i32 w, i32 h){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2285:1: warning: ‘Rect_i32 Ri32(Rect_f32)’ defined but not used [-Wunused-function]
 2285 | Ri32(Rect_f32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:2274:1: warning: ‘Rect_i32 Ri32(Vec2_i32, Vec2_i32)’ defined but not used [-Wunused-function]
 2274 | Ri32(Vec2_i32 p0, Vec2_i32 p1){
      | ^~~~
./code/custom/4coder_base_types.cpp:2252:1: warning: ‘i64 replace_range_shift(i64, i64, u64)’ defined but not used [-Wunused-function]
 2252 | replace_range_shift(i64 start, i64 end, u64 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2248:1: warning: ‘i64 replace_range_shift(u64, u64)’ defined but not used [-Wunused-function]
 2248 | replace_range_shift(u64 replace_length, u64 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2240:1: warning: ‘i64 replace_range_shift(i64, i64, i64)’ defined but not used [-Wunused-function]
 2240 | replace_range_shift(i64 start, i64 end, i64 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2236:1: warning: ‘i64 replace_range_shift(i64, i64)’ defined but not used [-Wunused-function]
 2236 | replace_range_shift(i64 replace_length, i64 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2232:1: warning: ‘i32 replace_range_shift(Range_i32, i32)’ defined but not used [-Wunused-function]
 2232 | replace_range_shift(Range_i32 range, i32 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2228:1: warning: ‘i32 replace_range_shift(i32, i32, i32)’ defined but not used [-Wunused-function]
 2228 | replace_range_shift(i32 start, i32 end, i32 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2224:1: warning: ‘i32 replace_range_shift(i32, i32)’ defined but not used [-Wunused-function]
 2224 | replace_range_shift(i32 replace_length, i32 insert_length){
      | ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2208:1: warning: ‘f32 range_distance(Range_f32, Range_f32)’ defined but not used [-Wunused-function]
 2208 | range_distance(Range_f32 a, Range_f32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2195:1: warning: ‘u64 range_distance(Range_u64, Range_u64)’ defined but not used [-Wunused-function]
 2195 | range_distance(Range_u64 a, Range_u64 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2169:1: warning: ‘i32 range_distance(Range_i32, Range_i32)’ defined but not used [-Wunused-function]
 2169 | range_distance(Range_i32 a, Range_i32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2164:1: warning: ‘f32 range_side(Range_f32, Side)’ defined but not used [-Wunused-function]
 2164 | range_side(Range_f32 a, Side side){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2160:1: warning: ‘u64 range_side(Range_u64, Side)’ defined but not used [-Wunused-function]
 2160 | range_side(Range_u64 a, Side side){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2156:1: warning: ‘i64 range_side(Range_i64, Side)’ defined but not used [-Wunused-function]
 2156 | range_side(Range_i64 a, Side side){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2152:1: warning: ‘i32 range_side(Range_i32, Side)’ defined but not used [-Wunused-function]
 2152 | range_side(Range_i32 a, Side side){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2147:1: warning: ‘b32 range_is_valid(Range_f32)’ defined but not used [-Wunused-function]
 2147 | range_is_valid(Range_f32 a){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2143:1: warning: ‘b32 range_is_valid(Range_u64)’ defined but not used [-Wunused-function]
 2143 | range_is_valid(Range_u64 a){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2139:1: warning: ‘b32 range_is_valid(Range_i64)’ defined but not used [-Wunused-function]
 2139 | range_is_valid(Range_i64 a){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2135:1: warning: ‘b32 range_is_valid(Range_i32)’ defined but not used [-Wunused-function]
 2135 | range_is_valid(Range_i32 a){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2128:1: warning: ‘Range_f32 range_clamp_size(Range_f32, f32)’ defined but not used [-Wunused-function]
 2128 | range_clamp_size(Range_f32 a, f32 max_size){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2122:1: warning: ‘Range_u64 range_clamp_size(Range_u64, u64)’ defined but not used [-Wunused-function]
 2122 | range_clamp_size(Range_u64 a, u64 max_size){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2116:1: warning: ‘Range_i64 range_clamp_size(Range_i64, i64)’ defined but not used [-Wunused-function]
 2116 | range_clamp_size(Range_i64 a, i64 max_size){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2110:1: warning: ‘Range_i32 range_clamp_size(Range_i32, i32)’ defined but not used [-Wunused-function]
 2110 | range_clamp_size(Range_i32 a, i32 max_size){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2105:1: warning: ‘Range_f32 rectify(Range_f32)’ defined but not used [-Wunused-function]
 2105 | rectify(Range_f32 a){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:2101:1: warning: ‘Range_u64 rectify(Range_u64)’ defined but not used [-Wunused-function]
 2101 | rectify(Range_u64 a){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:2097:1: warning: ‘Range_i64 rectify(Range_i64)’ defined but not used [-Wunused-function]
 2097 | rectify(Range_i64 a){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:2093:1: warning: ‘Range_i32 rectify(Range_i32)’ defined but not used [-Wunused-function]
 2093 | rectify(Range_i32 a){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:2086:1: warning: ‘f32 range_size_inclusive(Range_f32)’ defined but not used [-Wunused-function]
 2086 | range_size_inclusive(Range_f32 a){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2080:1: warning: ‘u64 range_size_inclusive(Range_u64)’ defined but not used [-Wunused-function]
 2080 | range_size_inclusive(Range_u64 a){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2068:1: warning: ‘i32 range_size_inclusive(Range_i32)’ defined but not used [-Wunused-function]
 2068 | range_size_inclusive(Range_i32 a){
      | ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2061:1: warning: ‘f32 range_size(Range_f32)’ defined but not used [-Wunused-function]
 2061 | range_size(Range_f32 a){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2055:1: warning: ‘u64 range_size(Range_u64)’ defined but not used [-Wunused-function]
 2055 | range_size(Range_u64 a){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2043:1: warning: ‘i32 range_size(Range_i32)’ defined but not used [-Wunused-function]
 2043 | range_size(Range_i32 a){
      | ^~~~~~~~~~
./code/custom/4coder_base_types.cpp:2038:1: warning: ‘b32 range_contains(Range_f32, f32)’ defined but not used [-Wunused-function]
 2038 | range_contains(Range_f32 a, f32 p){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2034:1: warning: ‘b32 range_contains(Range_u64, u64)’ defined but not used [-Wunused-function]
 2034 | range_contains(Range_u64 a, u64 p){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2030:1: warning: ‘b32 range_contains(Range_i64, i64)’ defined but not used [-Wunused-function]
 2030 | range_contains(Range_i64 a, i64 p){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2026:1: warning: ‘b32 range_contains(Range_i32, i32)’ defined but not used [-Wunused-function]
 2026 | range_contains(Range_i32 a, i32 p){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2021:1: warning: ‘b32 range_inclusive_contains(Range_f32, f32)’ defined but not used [-Wunused-function]
 2021 | range_inclusive_contains(Range_f32 a, f32 p){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2017:1: warning: ‘b32 range_contains_inclusive(Range_u64, u64)’ defined but not used [-Wunused-function]
 2017 | range_contains_inclusive(Range_u64 a, u64 p){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2009:1: warning: ‘b32 range_contains_inclusive(Range_i32, i32)’ defined but not used [-Wunused-function]
 2009 | range_contains_inclusive(Range_i32 a, i32 p){
      | ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2004:1: warning: ‘Range_f32 range_union(Range_f32, Range_f32)’ defined but not used [-Wunused-function]
 2004 | range_union(Range_f32 a, Range_f32 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:2000:1: warning: ‘Range_u64 range_union(Range_u64, Range_u64)’ defined but not used [-Wunused-function]
 2000 | range_union(Range_u64 a, Range_u64 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1996:1: warning: ‘Range_i64 range_union(Range_i64, Range_i64)’ defined but not used [-Wunused-function]
 1996 | range_union(Range_i64 a, Range_i64 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1992:1: warning: ‘Range_i32 range_union(Range_i32, Range_i32)’ defined but not used [-Wunused-function]
 1992 | range_union(Range_i32 a, Range_i32 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1983:1: warning: ‘Range_f32 range_intersect(Range_f32, Range_f32)’ defined but not used [-Wunused-function]
 1983 | range_intersect(Range_f32 a, Range_f32 b){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1975:1: warning: ‘Range_u64 range_intersect(Range_u64, Range_u64)’ defined but not used [-Wunused-function]
 1975 | range_intersect(Range_u64 a, Range_u64 b){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1967:1: warning: ‘Range_i64 range_intersect(Range_i64, Range_i64)’ defined but not used [-Wunused-function]
 1967 | range_intersect(Range_i64 a, Range_i64 b){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1959:1: warning: ‘Range_i32 range_intersect(Range_i32, Range_i32)’ defined but not used [-Wunused-function]
 1959 | range_intersect(Range_i32 a, Range_i32 b){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1935:1: warning: ‘Range_f32 range_margin(Range_f32, f32)’ defined but not used [-Wunused-function]
 1935 | range_margin(Range_f32 range, f32 margin){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1929:1: warning: ‘Range_u64 range_margin(Range_u64, u64)’ defined but not used [-Wunused-function]
 1929 | range_margin(Range_u64 range, u64 margin){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1923:1: warning: ‘Range_i64 range_margin(Range_i64, i64)’ defined but not used [-Wunused-function]
 1923 | range_margin(Range_i64 range, i64 margin){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1917:1: warning: ‘Range_i32 range_margin(Range_i32, i32)’ defined but not used [-Wunused-function]
 1917 | range_margin(Range_i32 range, i32 margin){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1911:1: warning: ‘Range_f32& operator-=(Range_f32&, f32)’ defined but not used [-Wunused-function]
 1911 | operator-=(Range_f32 &r, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1906:1: warning: ‘Range_u64& operator-=(Range_u64&, u64)’ defined but not used [-Wunused-function]
 1906 | operator-=(Range_u64 &r, u64 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1901:1: warning: ‘Range_i64& operator-=(Range_i64&, i64)’ defined but not used [-Wunused-function]
 1901 | operator-=(Range_i64 &r, i64 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1896:1: warning: ‘Range_i32& operator-=(Range_i32&, i32)’ defined but not used [-Wunused-function]
 1896 | operator-=(Range_i32 &r, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1885:1: warning: ‘Range_u64& operator+=(Range_u64&, u64)’ defined but not used [-Wunused-function]
 1885 | operator+=(Range_u64 &r, u64 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1880:1: warning: ‘Range_i64& operator+=(Range_i64&, i64)’ defined but not used [-Wunused-function]
 1880 | operator+=(Range_i64 &r, i64 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1875:1: warning: ‘Range_i32& operator+=(Range_i32&, i32)’ defined but not used [-Wunused-function]
 1875 | operator+=(Range_i32 &r, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1836:1: warning: ‘b32 operator==(Range_f32, Range_f32)’ defined but not used [-Wunused-function]
 1836 | operator==(Range_f32 a, Range_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1832:1: warning: ‘b32 operator==(Range_u64, Range_u64)’ defined but not used [-Wunused-function]
 1832 | operator==(Range_u64 a, Range_u64 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1828:1: warning: ‘b32 operator==(Range_i64, Range_i64)’ defined but not used [-Wunused-function]
 1828 | operator==(Range_i64 a, Range_i64 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1824:1: warning: ‘b32 operator==(Range_i32, Range_i32)’ defined but not used [-Wunused-function]
 1824 | operator==(Range_i32 a, Range_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1821:18: warning: ‘If32_neg_inf’ defined but not used [-Wunused-variable]
 1821 | global Range_f32 If32_neg_inf = {max_f32, -max_f32};
      |                  ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1820:18: warning: ‘Iu64_neg_inf’ defined but not used [-Wunused-variable]
 1820 | global Range_u64 Iu64_neg_inf = {max_u64, 0};
      |                  ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1818:18: warning: ‘Ii32_neg_inf’ defined but not used [-Wunused-variable]
 1818 | global Range_i32 Ii32_neg_inf = {max_i32, min_i32};
      |                  ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1814:1: warning: ‘Range_u64 Iu64(Range_i32)’ defined but not used [-Wunused-function]
 1814 | Iu64(Range_i32 r){
      | ^~~~
./code/custom/4coder_base_types.cpp:1808:1: warning: ‘Range_f32 If32()’ defined but not used [-Wunused-function]
 1808 | If32(){
      | ^~~~
./code/custom/4coder_base_types.cpp:1803:1: warning: ‘Range_u64 Iu64()’ defined but not used [-Wunused-function]
 1803 | Iu64(){
      | ^~~~
./code/custom/4coder_base_types.cpp:1798:1: warning: ‘Range_i64 Ii64()’ defined but not used [-Wunused-function]
 1798 | Ii64(){
      | ^~~~
./code/custom/4coder_base_types.cpp:1793:1: warning: ‘Range_i32 Ii32()’ defined but not used [-Wunused-function]
 1793 | Ii32(){
      | ^~~~
./code/custom/4coder_base_types.cpp:1787:1: warning: ‘Range_f32 If32(f32)’ defined but not used [-Wunused-function]
 1787 | If32(f32 a){
      | ^~~~
./code/custom/4coder_base_types.cpp:1782:1: warning: ‘Range_u64 Iu64(u64)’ defined but not used [-Wunused-function]
 1782 | Iu64(u64 a){
      | ^~~~
./code/custom/4coder_base_types.cpp:1772:1: warning: ‘Range_i32 Ii32(i32)’ defined but not used [-Wunused-function]
 1772 | Ii32(i32 a){
      | ^~~~
./code/custom/4coder_base_types.cpp:1767:1: warning: ‘Range_f32 If32_size(f32, f32)’ defined but not used [-Wunused-function]
 1767 | If32_size(f32 pos, f32 size){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1763:1: warning: ‘Range_u64 Iu64_size(u64, u64)’ defined but not used [-Wunused-function]
 1763 | Iu64_size(u64 pos, u64 size){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1755:1: warning: ‘Range_i32 Ii32_size(i32, i32)’ defined but not used [-Wunused-function]
 1755 | Ii32_size(i32 pos, i32 size){
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1691:1: warning: ‘Vec4_f32 hsla_to_rgba(Vec4_f32)’ defined but not used [-Wunused-function]
 1691 | hsla_to_rgba(Vec4_f32 hsla){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1635:1: warning: ‘Vec4_f32 rgba_to_hsla(Vec4_f32)’ defined but not used [-Wunused-function]
 1635 | rgba_to_hsla(Vec4_f32 rgba){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1627:1: warning: ‘ARGB_Color color_blend(ARGB_Color, f32, ARGB_Color)’ defined but not used [-Wunused-function]
 1627 | color_blend(ARGB_Color a, f32 t, ARGB_Color b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1596:1: warning: ‘b32 operator!=(Rect_i32, Rect_i32)’ defined but not used [-Wunused-function]
 1596 | operator!=(Rect_i32 a, Rect_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1580:1: warning: ‘f32 clamp_range(Range_f32, f32)’ defined but not used [-Wunused-function]
 1580 | clamp_range(Range_f32 range, f32 x){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:1575:1: warning: ‘f32 lerp(Range_f32, f32)’ defined but not used [-Wunused-function]
 1575 | lerp(Range_f32 range, f32 t){
      | ^~~~
./code/custom/4coder_base_types.cpp:1568:1: warning: ‘Range_f32 lerp(f32, Range_f32, f32)’ defined but not used [-Wunused-function]
 1568 | lerp(f32 a, Range_f32 x, f32 b){
      | ^~~~
./code/custom/4coder_base_types.cpp:1561:1: warning: ‘Range_f32 unlerp(f32, Range_f32, f32)’ defined but not used [-Wunused-function]
 1561 | unlerp(f32 a, Range_f32 x, f32 b){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:1547:1: warning: ‘f32 unlerp(u64, u64, u64)’ defined but not used [-Wunused-function]
 1547 | unlerp(u64 a, u64 x, u64 b){
      | ^~~~~~
./code/custom/4coder_base_types.cpp:1528:1: warning: ‘Vec3_f32 lerp(Vec3_f32, f32, Vec3_f32)’ defined but not used [-Wunused-function]
 1528 | lerp(Vec3_f32 a, f32 t, Vec3_f32 b){
      | ^~~~
./code/custom/4coder_base_types.cpp:1523:1: warning: ‘Vec2_f32 lerp(Vec2_f32, f32, Vec2_f32)’ defined but not used [-Wunused-function]
 1523 | lerp(Vec2_f32 a, f32 t, Vec2_f32 b){
      | ^~~~
./code/custom/4coder_base_types.cpp:1518:1: warning: ‘i32 lerp(i32, f32, i32)’ defined but not used [-Wunused-function]
 1518 | lerp(i32 a, f32 t, i32 b){
      | ^~~~
./code/custom/4coder_base_types.cpp:1513:1: warning: ‘f32 lerp(f32, Range_f32)’ defined but not used [-Wunused-function]
 1513 | lerp(f32 t, Range_f32 x){
      | ^~~~
./code/custom/4coder_base_types.cpp:1501:1: warning: ‘Vec4_f32 hadamard(Vec4_f32, Vec4_f32)’ defined but not used [-Wunused-function]
 1501 | hadamard(Vec4_f32 a, Vec4_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1497:1: warning: ‘Vec3_f32 hadamard(Vec3_f32, Vec3_f32)’ defined but not used [-Wunused-function]
 1497 | hadamard(Vec3_f32 a, Vec3_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1490:1: warning: ‘b32 near_zero(Vec4_f32)’ defined but not used [-Wunused-function]
 1490 | near_zero(Vec4_f32 p){ return(near_zero(p, epsilon_f32)); }
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1488:1: warning: ‘b32 near_zero(Vec3_f32)’ defined but not used [-Wunused-function]
 1488 | near_zero(Vec3_f32 p){ return(near_zero(p, epsilon_f32)); }
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1486:1: warning: ‘b32 near_zero(Vec2_f32)’ defined but not used [-Wunused-function]
 1486 | near_zero(Vec2_f32 p){ return(near_zero(p, epsilon_f32)); }
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1484:1: warning: ‘b32 near_zero(f32)’ defined but not used [-Wunused-function]
 1484 | near_zero(f32 p){ return(near_zero(p, epsilon_f32)); }
      | ^~~~~~~~~
./code/custom/4coder_base_types.cpp:1454:1: warning: ‘b32 operator!=(Vec4_f32, Vec4_f32)’ defined but not used [-Wunused-function]
 1454 | operator!=(Vec4_f32 a, Vec4_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1450:1: warning: ‘b32 operator!=(Vec3_f32, Vec3_f32)’ defined but not used [-Wunused-function]
 1450 | operator!=(Vec3_f32 a, Vec3_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1442:1: warning: ‘b32 operator!=(Vec4_i32, Vec4_i32)’ defined but not used [-Wunused-function]
 1442 | operator!=(Vec4_i32 a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1438:1: warning: ‘b32 operator!=(Vec3_i32, Vec3_i32)’ defined but not used [-Wunused-function]
 1438 | operator!=(Vec3_i32 a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1430:1: warning: ‘b32 operator!=(Vec4_i16, Vec4_i16)’ defined but not used [-Wunused-function]
 1430 | operator!=(Vec4_i16 a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1426:1: warning: ‘b32 operator!=(Vec3_i16, Vec3_i16)’ defined but not used [-Wunused-function]
 1426 | operator!=(Vec3_i16 a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1422:1: warning: ‘b32 operator!=(Vec2_i16, Vec2_i16)’ defined but not used [-Wunused-function]
 1422 | operator!=(Vec2_i16 a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1418:1: warning: ‘b32 operator!=(Vec4_i8, Vec4_i8)’ defined but not used [-Wunused-function]
 1418 | operator!=(Vec4_i8 a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1414:1: warning: ‘b32 operator!=(Vec3_i8, Vec3_i8)’ defined but not used [-Wunused-function]
 1414 | operator!=(Vec3_i8 a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1410:1: warning: ‘b32 operator!=(Vec2_i8, Vec2_i8)’ defined but not used [-Wunused-function]
 1410 | operator!=(Vec2_i8 a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1405:1: warning: ‘b32 operator==(Vec4_f32, Vec4_f32)’ defined but not used [-Wunused-function]
 1405 | operator==(Vec4_f32 a, Vec4_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1401:1: warning: ‘b32 operator==(Vec3_f32, Vec3_f32)’ defined but not used [-Wunused-function]
 1401 | operator==(Vec3_f32 a, Vec3_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1393:1: warning: ‘b32 operator==(Vec4_i32, Vec4_i32)’ defined but not used [-Wunused-function]
 1393 | operator==(Vec4_i32 a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1389:1: warning: ‘b32 operator==(Vec3_i32, Vec3_i32)’ defined but not used [-Wunused-function]
 1389 | operator==(Vec3_i32 a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1381:1: warning: ‘b32 operator==(Vec4_i16, Vec4_i16)’ defined but not used [-Wunused-function]
 1381 | operator==(Vec4_i16 a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1377:1: warning: ‘b32 operator==(Vec3_i16, Vec3_i16)’ defined but not used [-Wunused-function]
 1377 | operator==(Vec3_i16 a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1373:1: warning: ‘b32 operator==(Vec2_i16, Vec2_i16)’ defined but not used [-Wunused-function]
 1373 | operator==(Vec2_i16 a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1369:1: warning: ‘b32 operator==(Vec4_i8, Vec4_i8)’ defined but not used [-Wunused-function]
 1369 | operator==(Vec4_i8 a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1365:1: warning: ‘b32 operator==(Vec3_i8, Vec3_i8)’ defined but not used [-Wunused-function]
 1365 | operator==(Vec3_i8 a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1361:1: warning: ‘b32 operator==(Vec2_i8, Vec2_i8)’ defined but not used [-Wunused-function]
 1361 | operator==(Vec2_i8 a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1352:1: warning: ‘Vec4_f32& operator/=(Vec4_f32&, f32)’ defined but not used [-Wunused-function]
 1352 | operator/=(Vec4_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1345:1: warning: ‘Vec3_f32& operator/=(Vec3_f32&, f32)’ defined but not used [-Wunused-function]
 1345 | operator/=(Vec3_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1339:1: warning: ‘Vec2_f32& operator/=(Vec2_f32&, f32)’ defined but not used [-Wunused-function]
 1339 | operator/=(Vec2_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1331:1: warning: ‘Vec4_i32& operator/=(Vec4_i32&, i32)’ defined but not used [-Wunused-function]
 1331 | operator/=(Vec4_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1324:1: warning: ‘Vec3_i32& operator/=(Vec3_i32&, i32)’ defined but not used [-Wunused-function]
 1324 | operator/=(Vec3_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1318:1: warning: ‘Vec2_i32& operator/=(Vec2_i32&, i32)’ defined but not used [-Wunused-function]
 1318 | operator/=(Vec2_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1310:1: warning: ‘Vec4_i16& operator/=(Vec4_i16&, i16)’ defined but not used [-Wunused-function]
 1310 | operator/=(Vec4_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1303:1: warning: ‘Vec3_i16& operator/=(Vec3_i16&, i16)’ defined but not used [-Wunused-function]
 1303 | operator/=(Vec3_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1297:1: warning: ‘Vec2_i16& operator/=(Vec2_i16&, i16)’ defined but not used [-Wunused-function]
 1297 | operator/=(Vec2_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1289:1: warning: ‘Vec4_i8& operator/=(Vec4_i8&, i8)’ defined but not used [-Wunused-function]
 1289 | operator/=(Vec4_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1282:1: warning: ‘Vec3_i8& operator/=(Vec3_i8&, i8)’ defined but not used [-Wunused-function]
 1282 | operator/=(Vec3_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1276:1: warning: ‘Vec2_i8& operator/=(Vec2_i8&, i8)’ defined but not used [-Wunused-function]
 1276 | operator/=(Vec2_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1267:1: warning: ‘Vec4_f32 operator/(Vec4_f32, f32)’ defined but not used [-Wunused-function]
 1267 | operator/(Vec4_f32 v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1260:1: warning: ‘Vec3_f32 operator/(Vec3_f32, f32)’ defined but not used [-Wunused-function]
 1260 | operator/(Vec3_f32 v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1254:1: warning: ‘Vec2_f32 operator/(Vec2_f32, f32)’ defined but not used [-Wunused-function]
 1254 | operator/(Vec2_f32 v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1246:1: warning: ‘Vec4_i32 operator/(Vec4_i32, i32)’ defined but not used [-Wunused-function]
 1246 | operator/(Vec4_i32 v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1239:1: warning: ‘Vec3_i32 operator/(Vec3_i32, i32)’ defined but not used [-Wunused-function]
 1239 | operator/(Vec3_i32 v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1225:1: warning: ‘Vec4_i16 operator/(Vec4_i16, i16)’ defined but not used [-Wunused-function]
 1225 | operator/(Vec4_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1218:1: warning: ‘Vec3_i16 operator/(Vec3_i16, i16)’ defined but not used [-Wunused-function]
 1218 | operator/(Vec3_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1212:1: warning: ‘Vec2_i16 operator/(Vec2_i16, i16)’ defined but not used [-Wunused-function]
 1212 | operator/(Vec2_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1204:1: warning: ‘Vec4_i8 operator/(Vec4_i8, i8)’ defined but not used [-Wunused-function]
 1204 | operator/(Vec4_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1197:1: warning: ‘Vec3_i8 operator/(Vec3_i8, i8)’ defined but not used [-Wunused-function]
 1197 | operator/(Vec3_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1191:1: warning: ‘Vec2_i8 operator/(Vec2_i8, i8)’ defined but not used [-Wunused-function]
 1191 | operator/(Vec2_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1182:1: warning: ‘Vec4_f32& operator*=(Vec4_f32&, f32)’ defined but not used [-Wunused-function]
 1182 | operator*=(Vec4_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1175:1: warning: ‘Vec3_f32& operator*=(Vec3_f32&, f32)’ defined but not used [-Wunused-function]
 1175 | operator*=(Vec3_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1169:1: warning: ‘Vec2_f32& operator*=(Vec2_f32&, f32)’ defined but not used [-Wunused-function]
 1169 | operator*=(Vec2_f32 &v, f32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1161:1: warning: ‘Vec4_i32& operator*=(Vec4_i32&, i32)’ defined but not used [-Wunused-function]
 1161 | operator*=(Vec4_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1154:1: warning: ‘Vec3_i32& operator*=(Vec3_i32&, i32)’ defined but not used [-Wunused-function]
 1154 | operator*=(Vec3_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1148:1: warning: ‘Vec2_i32& operator*=(Vec2_i32&, i32)’ defined but not used [-Wunused-function]
 1148 | operator*=(Vec2_i32 &v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1140:1: warning: ‘Vec4_i16& operator*=(Vec4_i16&, i16)’ defined but not used [-Wunused-function]
 1140 | operator*=(Vec4_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1133:1: warning: ‘Vec3_i16& operator*=(Vec3_i16&, i16)’ defined but not used [-Wunused-function]
 1133 | operator*=(Vec3_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1127:1: warning: ‘Vec2_i16& operator*=(Vec2_i16&, i16)’ defined but not used [-Wunused-function]
 1127 | operator*=(Vec2_i16 &v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1119:1: warning: ‘Vec4_i8& operator*=(Vec4_i8&, i8)’ defined but not used [-Wunused-function]
 1119 | operator*=(Vec4_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1112:1: warning: ‘Vec3_i8& operator*=(Vec3_i8&, i8)’ defined but not used [-Wunused-function]
 1112 | operator*=(Vec3_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1106:1: warning: ‘Vec2_i8& operator*=(Vec2_i8&, i8)’ defined but not used [-Wunused-function]
 1106 | operator*=(Vec2_i8 &v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1089:1: warning: ‘Vec4_f32 operator*(f32, Vec4_f32)’ defined but not used [-Wunused-function]
 1089 | operator*(f32 s, Vec4_f32 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1075:1: warning: ‘Vec3_f32 operator*(f32, Vec3_f32)’ defined but not used [-Wunused-function]
 1075 | operator*(f32 s, Vec3_f32 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1055:1: warning: ‘Vec4_i32 operator*(Vec4_i32, i32)’ defined but not used [-Wunused-function]
 1055 | operator*(Vec4_i32 v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1047:1: warning: ‘Vec4_i32 operator*(i32, Vec4_i32)’ defined but not used [-Wunused-function]
 1047 | operator*(i32 s, Vec4_i32 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1040:1: warning: ‘Vec3_i32 operator*(Vec3_i32, i32)’ defined but not used [-Wunused-function]
 1040 | operator*(Vec3_i32 v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1033:1: warning: ‘Vec3_i32 operator*(i32, Vec3_i32)’ defined but not used [-Wunused-function]
 1033 | operator*(i32 s, Vec3_i32 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1027:1: warning: ‘Vec2_i32 operator*(Vec2_i32, i32)’ defined but not used [-Wunused-function]
 1027 | operator*(Vec2_i32 v, i32 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1021:1: warning: ‘Vec2_i32 operator*(i32, Vec2_i32)’ defined but not used [-Wunused-function]
 1021 | operator*(i32 s, Vec2_i32 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1013:1: warning: ‘Vec4_i16 operator*(Vec4_i16, i16)’ defined but not used [-Wunused-function]
 1013 | operator*(Vec4_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:1005:1: warning: ‘Vec4_i16 operator*(i16, Vec4_i16)’ defined but not used [-Wunused-function]
 1005 | operator*(i16 s, Vec4_i16 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:998:1: warning: ‘Vec3_i16 operator*(Vec3_i16, i16)’ defined but not used [-Wunused-function]
  998 | operator*(Vec3_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:991:1: warning: ‘Vec3_i16 operator*(i16, Vec3_i16)’ defined but not used [-Wunused-function]
  991 | operator*(i16 s, Vec3_i16 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:985:1: warning: ‘Vec2_i16 operator*(Vec2_i16, i16)’ defined but not used [-Wunused-function]
  985 | operator*(Vec2_i16 v, i16 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:979:1: warning: ‘Vec2_i16 operator*(i16, Vec2_i16)’ defined but not used [-Wunused-function]
  979 | operator*(i16 s, Vec2_i16 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:971:1: warning: ‘Vec4_i8 operator*(Vec4_i8, i8)’ defined but not used [-Wunused-function]
  971 | operator*(Vec4_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:963:1: warning: ‘Vec4_i8 operator*(i8, Vec4_i8)’ defined but not used [-Wunused-function]
  963 | operator*(i8 s, Vec4_i8 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:956:1: warning: ‘Vec3_i8 operator*(Vec3_i8, i8)’ defined but not used [-Wunused-function]
  956 | operator*(Vec3_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:949:1: warning: ‘Vec3_i8 operator*(i8, Vec3_i8)’ defined but not used [-Wunused-function]
  949 | operator*(i8 s, Vec3_i8 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:943:1: warning: ‘Vec2_i8 operator*(Vec2_i8, i8)’ defined but not used [-Wunused-function]
  943 | operator*(Vec2_i8 v, i8 s){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:937:1: warning: ‘Vec2_i8 operator*(i8, Vec2_i8)’ defined but not used [-Wunused-function]
  937 | operator*(i8 s, Vec2_i8 v){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:928:1: warning: ‘Vec4_f32& operator-=(Vec4_f32&, Vec4_f32)’ defined but not used [-Wunused-function]
  928 | operator-=(Vec4_f32 &a, Vec4_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:921:1: warning: ‘Vec3_f32& operator-=(Vec3_f32&, Vec3_f32)’ defined but not used [-Wunused-function]
  921 | operator-=(Vec3_f32 &a, Vec3_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:907:1: warning: ‘Vec4_i32& operator-=(Vec4_i32&, Vec4_i32)’ defined but not used [-Wunused-function]
  907 | operator-=(Vec4_i32 &a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:900:1: warning: ‘Vec3_i32& operator-=(Vec3_i32&, Vec3_i32)’ defined but not used [-Wunused-function]
  900 | operator-=(Vec3_i32 &a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:894:1: warning: ‘Vec2_i32& operator-=(Vec2_i32&, Vec2_i32)’ defined but not used [-Wunused-function]
  894 | operator-=(Vec2_i32 &a, Vec2_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:886:1: warning: ‘Vec4_i16& operator-=(Vec4_i16&, Vec4_i16)’ defined but not used [-Wunused-function]
  886 | operator-=(Vec4_i16 &a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:879:1: warning: ‘Vec3_i16& operator-=(Vec3_i16&, Vec3_i16)’ defined but not used [-Wunused-function]
  879 | operator-=(Vec3_i16 &a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:873:1: warning: ‘Vec2_i16& operator-=(Vec2_i16&, Vec2_i16)’ defined but not used [-Wunused-function]
  873 | operator-=(Vec2_i16 &a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:865:1: warning: ‘Vec4_i8& operator-=(Vec4_i8&, Vec4_i8)’ defined but not used [-Wunused-function]
  865 | operator-=(Vec4_i8 &a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:858:1: warning: ‘Vec3_i8& operator-=(Vec3_i8&, Vec3_i8)’ defined but not used [-Wunused-function]
  858 | operator-=(Vec3_i8 &a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:852:1: warning: ‘Vec2_i8& operator-=(Vec2_i8&, Vec2_i8)’ defined but not used [-Wunused-function]
  852 | operator-=(Vec2_i8 &a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:822:1: warning: ‘Vec4_i32 operator-(Vec4_i32, Vec4_i32)’ defined but not used [-Wunused-function]
  822 | operator-(Vec4_i32 a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:815:1: warning: ‘Vec3_i32 operator-(Vec3_i32, Vec3_i32)’ defined but not used [-Wunused-function]
  815 | operator-(Vec3_i32 a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:809:1: warning: ‘Vec2_i32 operator-(Vec2_i32, Vec2_i32)’ defined but not used [-Wunused-function]
  809 | operator-(Vec2_i32 a, Vec2_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:801:1: warning: ‘Vec4_i16 operator-(Vec4_i16, Vec4_i16)’ defined but not used [-Wunused-function]
  801 | operator-(Vec4_i16 a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:794:1: warning: ‘Vec3_i16 operator-(Vec3_i16, Vec3_i16)’ defined but not used [-Wunused-function]
  794 | operator-(Vec3_i16 a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:788:1: warning: ‘Vec2_i16 operator-(Vec2_i16, Vec2_i16)’ defined but not used [-Wunused-function]
  788 | operator-(Vec2_i16 a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:780:1: warning: ‘Vec4_i8 operator-(Vec4_i8, Vec4_i8)’ defined but not used [-Wunused-function]
  780 | operator-(Vec4_i8 a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:773:1: warning: ‘Vec3_i8 operator-(Vec3_i8, Vec3_i8)’ defined but not used [-Wunused-function]
  773 | operator-(Vec3_i8 a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:767:1: warning: ‘Vec2_i8 operator-(Vec2_i8, Vec2_i8)’ defined but not used [-Wunused-function]
  767 | operator-(Vec2_i8 a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:758:1: warning: ‘Vec4_f32& operator+=(Vec4_f32&, Vec4_f32)’ defined but not used [-Wunused-function]
  758 | operator+=(Vec4_f32 &a, Vec4_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:751:1: warning: ‘Vec3_f32& operator+=(Vec3_f32&, Vec3_f32)’ defined but not used [-Wunused-function]
  751 | operator+=(Vec3_f32 &a, Vec3_f32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:737:1: warning: ‘Vec4_i32& operator+=(Vec4_i32&, Vec4_i32)’ defined but not used [-Wunused-function]
  737 | operator+=(Vec4_i32 &a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:730:1: warning: ‘Vec3_i32& operator+=(Vec3_i32&, Vec3_i32)’ defined but not used [-Wunused-function]
  730 | operator+=(Vec3_i32 &a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:724:1: warning: ‘Vec2_i32& operator+=(Vec2_i32&, Vec2_i32)’ defined but not used [-Wunused-function]
  724 | operator+=(Vec2_i32 &a, Vec2_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:716:1: warning: ‘Vec4_i16& operator+=(Vec4_i16&, Vec4_i16)’ defined but not used [-Wunused-function]
  716 | operator+=(Vec4_i16 &a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:709:1: warning: ‘Vec3_i16& operator+=(Vec3_i16&, Vec3_i16)’ defined but not used [-Wunused-function]
  709 | operator+=(Vec3_i16 &a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:703:1: warning: ‘Vec2_i16& operator+=(Vec2_i16&, Vec2_i16)’ defined but not used [-Wunused-function]
  703 | operator+=(Vec2_i16 &a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:695:1: warning: ‘Vec4_i8& operator+=(Vec4_i8&, Vec4_i8)’ defined but not used [-Wunused-function]
  695 | operator+=(Vec4_i8 &a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:688:1: warning: ‘Vec3_i8& operator+=(Vec3_i8&, Vec3_i8)’ defined but not used [-Wunused-function]
  688 | operator+=(Vec3_i8 &a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:682:1: warning: ‘Vec2_i8& operator+=(Vec2_i8&, Vec2_i8)’ defined but not used [-Wunused-function]
  682 | operator+=(Vec2_i8 &a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:652:1: warning: ‘Vec4_i32 operator+(Vec4_i32, Vec4_i32)’ defined but not used [-Wunused-function]
  652 | operator+(Vec4_i32 a, Vec4_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:645:1: warning: ‘Vec3_i32 operator+(Vec3_i32, Vec3_i32)’ defined but not used [-Wunused-function]
  645 | operator+(Vec3_i32 a, Vec3_i32 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:631:1: warning: ‘Vec4_i16 operator+(Vec4_i16, Vec4_i16)’ defined but not used [-Wunused-function]
  631 | operator+(Vec4_i16 a, Vec4_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:624:1: warning: ‘Vec3_i16 operator+(Vec3_i16, Vec3_i16)’ defined but not used [-Wunused-function]
  624 | operator+(Vec3_i16 a, Vec3_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:618:1: warning: ‘Vec2_i16 operator+(Vec2_i16, Vec2_i16)’ defined but not used [-Wunused-function]
  618 | operator+(Vec2_i16 a, Vec2_i16 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:610:1: warning: ‘Vec4_i8 operator+(Vec4_i8, Vec4_i8)’ defined but not used [-Wunused-function]
  610 | operator+(Vec4_i8 a, Vec4_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:603:1: warning: ‘Vec3_i8 operator+(Vec3_i8, Vec3_i8)’ defined but not used [-Wunused-function]
  603 | operator+(Vec3_i8 a, Vec3_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:597:1: warning: ‘Vec2_i8 operator+(Vec2_i8, Vec2_i8)’ defined but not used [-Wunused-function]
  597 | operator+(Vec2_i8 a, Vec2_i8 b){
      | ^~~~~~~~
./code/custom/4coder_base_types.cpp:592:1: warning: ‘Vec4_f32 V4f32(Vec4_f32)’ defined but not used [-Wunused-function]
  592 | V4f32(Vec4_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:588:1: warning: ‘Vec4_f32 V4f32(Vec4_i32)’ defined but not used [-Wunused-function]
  588 | V4f32(Vec4_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:584:1: warning: ‘Vec4_f32 V4f32(Vec4_i16)’ defined but not used [-Wunused-function]
  584 | V4f32(Vec4_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:580:1: warning: ‘Vec4_f32 V4f32(Vec4_i8)’ defined but not used [-Wunused-function]
  580 | V4f32(Vec4_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:576:1: warning: ‘Vec3_f32 V3f32(Vec3_f32)’ defined but not used [-Wunused-function]
  576 | V3f32(Vec3_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:572:1: warning: ‘Vec3_f32 V3f32(Vec3_i32)’ defined but not used [-Wunused-function]
  572 | V3f32(Vec3_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:568:1: warning: ‘Vec3_f32 V3f32(Vec3_i16)’ defined but not used [-Wunused-function]
  568 | V3f32(Vec3_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:564:1: warning: ‘Vec3_f32 V3f32(Vec3_i8)’ defined but not used [-Wunused-function]
  564 | V3f32(Vec3_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:560:1: warning: ‘Vec2_f32 V2f32(Vec2_f32)’ defined but not used [-Wunused-function]
  560 | V2f32(Vec2_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:552:1: warning: ‘Vec2_f32 V2f32(Vec2_i16)’ defined but not used [-Wunused-function]
  552 | V2f32(Vec2_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:548:1: warning: ‘Vec2_f32 V2f32(Vec2_i8)’ defined but not used [-Wunused-function]
  548 | V2f32(Vec2_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:544:1: warning: ‘Vec4_i32 V4i32(Vec4_f32)’ defined but not used [-Wunused-function]
  544 | V4i32(Vec4_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:540:1: warning: ‘Vec4_i32 V4i32(Vec4_i32)’ defined but not used [-Wunused-function]
  540 | V4i32(Vec4_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:536:1: warning: ‘Vec4_i32 V4i32(Vec4_i16)’ defined but not used [-Wunused-function]
  536 | V4i32(Vec4_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:532:1: warning: ‘Vec4_i32 V4i32(Vec4_i8)’ defined but not used [-Wunused-function]
  532 | V4i32(Vec4_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:528:1: warning: ‘Vec3_i32 V3i32(Vec3_f32)’ defined but not used [-Wunused-function]
  528 | V3i32(Vec3_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:524:1: warning: ‘Vec3_i32 V3i32(Vec3_i32)’ defined but not used [-Wunused-function]
  524 | V3i32(Vec3_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:520:1: warning: ‘Vec3_i32 V3i32(Vec3_i16)’ defined but not used [-Wunused-function]
  520 | V3i32(Vec3_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:516:1: warning: ‘Vec3_i32 V3i32(Vec3_i8)’ defined but not used [-Wunused-function]
  516 | V3i32(Vec3_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:512:1: warning: ‘Vec2_i32 V2i32(Vec2_f32)’ defined but not used [-Wunused-function]
  512 | V2i32(Vec2_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:508:1: warning: ‘Vec2_i32 V2i32(Vec2_i32)’ defined but not used [-Wunused-function]
  508 | V2i32(Vec2_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:504:1: warning: ‘Vec2_i32 V2i32(Vec2_i16)’ defined but not used [-Wunused-function]
  504 | V2i32(Vec2_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:500:1: warning: ‘Vec2_i32 V2i32(Vec2_i8)’ defined but not used [-Wunused-function]
  500 | V2i32(Vec2_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:496:1: warning: ‘Vec4_i16 V4i16(Vec4_f32)’ defined but not used [-Wunused-function]
  496 | V4i16(Vec4_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:492:1: warning: ‘Vec4_i16 V4i16(Vec4_i32)’ defined but not used [-Wunused-function]
  492 | V4i16(Vec4_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:488:1: warning: ‘Vec4_i16 V4i16(Vec4_i16)’ defined but not used [-Wunused-function]
  488 | V4i16(Vec4_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:484:1: warning: ‘Vec4_i16 V4i16(Vec4_i8)’ defined but not used [-Wunused-function]
  484 | V4i16(Vec4_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:480:1: warning: ‘Vec3_i16 V3i16(Vec3_f32)’ defined but not used [-Wunused-function]
  480 | V3i16(Vec3_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:476:1: warning: ‘Vec3_i16 V3i16(Vec3_i32)’ defined but not used [-Wunused-function]
  476 | V3i16(Vec3_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:472:1: warning: ‘Vec3_i16 V3i16(Vec3_i16)’ defined but not used [-Wunused-function]
  472 | V3i16(Vec3_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:468:1: warning: ‘Vec3_i16 V3i16(Vec3_i8)’ defined but not used [-Wunused-function]
  468 | V3i16(Vec3_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:464:1: warning: ‘Vec2_i16 V2i16(Vec2_f32)’ defined but not used [-Wunused-function]
  464 | V2i16(Vec2_f32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:460:1: warning: ‘Vec2_i16 V2i16(Vec2_i32)’ defined but not used [-Wunused-function]
  460 | V2i16(Vec2_i32 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:456:1: warning: ‘Vec2_i16 V2i16(Vec2_i16)’ defined but not used [-Wunused-function]
  456 | V2i16(Vec2_i16 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:452:1: warning: ‘Vec2_i16 V2i16(Vec2_i8)’ defined but not used [-Wunused-function]
  452 | V2i16(Vec2_i8 o){
      | ^~~~~
./code/custom/4coder_base_types.cpp:448:1: warning: ‘Vec4_i8 V4i8(Vec4_f32)’ defined but not used [-Wunused-function]
  448 | V4i8(Vec4_f32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:444:1: warning: ‘Vec4_i8 V4i8(Vec4_i32)’ defined but not used [-Wunused-function]
  444 | V4i8(Vec4_i32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:440:1: warning: ‘Vec4_i8 V4i8(Vec4_i16)’ defined but not used [-Wunused-function]
  440 | V4i8(Vec4_i16 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:436:1: warning: ‘Vec4_i8 V4i8(Vec4_i8)’ defined but not used [-Wunused-function]
  436 | V4i8(Vec4_i8 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:432:1: warning: ‘Vec3_i8 V3i8(Vec3_f32)’ defined but not used [-Wunused-function]
  432 | V3i8(Vec3_f32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:428:1: warning: ‘Vec3_i8 V3i8(Vec3_i32)’ defined but not used [-Wunused-function]
  428 | V3i8(Vec3_i32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:424:1: warning: ‘Vec3_i8 V3i8(Vec3_i16)’ defined but not used [-Wunused-function]
  424 | V3i8(Vec3_i16 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:420:1: warning: ‘Vec3_i8 V3i8(Vec3_i8)’ defined but not used [-Wunused-function]
  420 | V3i8(Vec3_i8 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:416:1: warning: ‘Vec2_i8 V2i8(Vec2_f32)’ defined but not used [-Wunused-function]
  416 | V2i8(Vec2_f32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:412:1: warning: ‘Vec2_i8 V2i8(Vec2_i32)’ defined but not used [-Wunused-function]
  412 | V2i8(Vec2_i32 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:408:1: warning: ‘Vec2_i8 V2i8(Vec2_i16)’ defined but not used [-Wunused-function]
  408 | V2i8(Vec2_i16 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:404:1: warning: ‘Vec2_i8 V2i8(Vec2_i8)’ defined but not used [-Wunused-function]
  404 | V2i8(Vec2_i8 o){
      | ^~~~
./code/custom/4coder_base_types.cpp:335:1: warning: ‘f32 cos_f32(f32)’ defined but not used [-Wunused-function]
  335 | cos_f32(f32 x){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:330:1: warning: ‘f32 sin_f32(f32)’ defined but not used [-Wunused-function]
  330 | sin_f32(f32 x){
      | ^~~~~~~
./code/custom/4coder_base_types.cpp:298:1: warning: ‘void block_copy_array_shift__inner(void*, void*, u64, Range_i32, i64)’ defined but not used [-Wunused-function]
  298 | block_copy_array_shift__inner(void *dst, void *src, u64 it_size, Range_i32 range, i64 shift){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:290:1: warning: ‘void block_copy_array_shift__inner(void*, void*, u64, Range_i64, i64)’ defined but not used [-Wunused-function]
  290 | block_copy_array_shift__inner(void *dst, void *src, u64 it_size, Range_i64 range, i64 shift){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:278:1: warning: ‘void block_range_copy__inner(void*, void*, Range_u64, i64, u64)’ defined but not used [-Wunused-function]
  278 | block_range_copy__inner(void *dst, void *src, Range_u64 range, i64 shift, u64 item_size){
      | ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:253:1: warning: ‘void block_fill_u64(void*, u64, u64)’ defined but not used [-Wunused-function]
  253 | block_fill_u64(void *a, u64 size, u64 val){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:245:1: warning: ‘void block_fill_u32(void*, u64, u32)’ defined but not used [-Wunused-function]
  245 | block_fill_u32(void *a, u64 size, u32 val){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:237:1: warning: ‘void block_fill_u16(void*, u64, u16)’ defined but not used [-Wunused-function]
  237 | block_fill_u16(void *a, u64 size, u16 val){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:219:1: warning: ‘i32 block_compare(void*, void*, u64)’ defined but not used [-Wunused-function]
  219 | block_compare(void *a, void *b, u64 size){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:185:1: warning: ‘void block_fill_ones(String_Const_u8)’ defined but not used [-Wunused-function]
  185 | block_fill_ones(String_Const_u8 data){
      | ^~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:138:1: warning: ‘u32 round_up_pot_u32(u32)’ defined but not used [-Wunused-function]
  138 | round_up_pot_u32(u32 x){
      | ^~~~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:133:1: warning: ‘f32 f32_integer(f32)’ defined but not used [-Wunused-function]
  133 | f32_integer(f32 x){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:127:1: warning: ‘u64 round_down_u64(u64, u64)’ defined but not used [-Wunused-function]
  127 | round_down_u64(u64 x, u64 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:122:1: warning: ‘i64 round_down_i64(i64, i64)’ defined but not used [-Wunused-function]
  122 | round_down_i64(i64 x, i64 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:117:1: warning: ‘u32 round_down_u32(u32, u32)’ defined but not used [-Wunused-function]
  117 | round_down_u32(u32 x, u32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:112:1: warning: ‘i32 round_down_i32(i32, i32)’ defined but not used [-Wunused-function]
  112 | round_down_i32(i32 x, i32 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:107:1: warning: ‘u16 round_down_u16(u16, u16)’ defined but not used [-Wunused-function]
  107 | round_down_u16(u16 x, u16 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:102:1: warning: ‘i16 round_down_i16(i16, i16)’ defined but not used [-Wunused-function]
  102 | round_down_i16(i16 x, i16 b){
      | ^~~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:97:1: warning: ‘u8 round_down_u8(u8, u8)’ defined but not used [-Wunused-function]
   97 | round_down_u8(u8 x, u8 b){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:92:1: warning: ‘i8 round_down_i8(i8, i8)’ defined but not used [-Wunused-function]
   92 | round_down_i8(i8 x, i8 b){
      | ^~~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:67:1: warning: ‘i32 round_up_i32(i32, i32)’ defined but not used [-Wunused-function]
   67 | round_up_i32(i32 x, i32 b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:61:1: warning: ‘u16 round_up_u16(u16, u16)’ defined but not used [-Wunused-function]
   61 | round_up_u16(u16 x, u16 b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:55:1: warning: ‘i16 round_up_i16(i16, i16)’ defined but not used [-Wunused-function]
   55 | round_up_i16(i16 x, i16 b){
      | ^~~~~~~~~~~~
./code/custom/4coder_base_types.cpp:49:1: warning: ‘u8 round_up_u8(u8, u8)’ defined but not used [-Wunused-function]
   49 | round_up_u8(u8 x, u8 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:43:1: warning: ‘i8 round_up_i8(i8, i8)’ defined but not used [-Wunused-function]
   43 | round_up_i8(i8 x, i8 b){
      | ^~~~~~~~~~~
./code/custom/4coder_base_types.cpp:28:1: warning: ‘f32 f32_ceil32(f32)’ defined but not used [-Wunused-function]
   28 | f32_ceil32(f32 v){
      | ^~~~~~~~~~
./code/custom/4coder_default_colors.h:65:25: warning: ‘global_theme_list’ defined but not used [-Wunused-variable]
   65 | global Color_Table_List global_theme_list = {};
      |                         ^~~~~~~~~~~~~~~~~
./code/custom/4coder_default_colors.h:64:14: warning: ‘global_theme_arena’ defined but not used [-Wunused-variable]
   64 | global Arena global_theme_arena = {};
      |              ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_default_colors.h:62:20: warning: ‘default_color_table’ defined but not used [-Wunused-variable]
   62 | global Color_Table default_color_table = {};
      |                    ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_default_colors.h:61:20: warning: ‘active_color_table’ defined but not used [-Wunused-variable]
   61 | global Color_Table active_color_table = {};
      |                    ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_default_colors.h:47:19: warning: ‘defcolor_line_numbers_text’ defined but not used [-Wunused-variable]
   47 | CUSTOM_ID(colors, defcolor_line_numbers_text);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:46:19: warning: ‘defcolor_line_numbers_back’ defined but not used [-Wunused-variable]
   46 | CUSTOM_ID(colors, defcolor_line_numbers_back);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:45:19: warning: ‘defcolor_text_cycle’ defined but not used [-Wunused-variable]
   45 | CUSTOM_ID(colors, defcolor_text_cycle);
      |                   ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:44:19: warning: ‘defcolor_back_cycle’ defined but not used [-Wunused-variable]
   44 | CUSTOM_ID(colors, defcolor_back_cycle);
      |                   ^~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:43:19: warning: ‘defcolor_undo’ defined but not used [-Wunused-variable]
   43 | CUSTOM_ID(colors, defcolor_undo);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:42:19: warning: ‘defcolor_paste’ defined but not used [-Wunused-variable]
   42 | CUSTOM_ID(colors, defcolor_paste);
      |                   ^~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:41:19: warning: ‘defcolor_highlight_white’ defined but not used [-Wunused-variable]
   41 | CUSTOM_ID(colors, defcolor_highlight_white);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:40:19: warning: ‘defcolor_highlight_junk’ defined but not used [-Wunused-variable]
   40 | CUSTOM_ID(colors, defcolor_highlight_junk);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:39:19: warning: ‘defcolor_ghost_character’ defined but not used [-Wunused-variable]
   39 | CUSTOM_ID(colors, defcolor_ghost_character);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:38:19: warning: ‘defcolor_special_character’ defined but not used [-Wunused-variable]
   38 | CUSTOM_ID(colors, defcolor_special_character);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:37:19: warning: ‘defcolor_include’ defined but not used [-Wunused-variable]
   37 | CUSTOM_ID(colors, defcolor_include);
      |                   ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:36:19: warning: ‘defcolor_preproc’ defined but not used [-Wunused-variable]
   36 | CUSTOM_ID(colors, defcolor_preproc);
      |                   ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:35:19: warning: ‘defcolor_bool_constant’ defined but not used [-Wunused-variable]
   35 | CUSTOM_ID(colors, defcolor_bool_constant);
      |                   ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:34:19: warning: ‘defcolor_float_constant’ defined but not used [-Wunused-variable]
   34 | CUSTOM_ID(colors, defcolor_float_constant);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:33:19: warning: ‘defcolor_int_constant’ defined but not used [-Wunused-variable]
   33 | CUSTOM_ID(colors, defcolor_int_constant);
      |                   ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:32:19: warning: ‘defcolor_char_constant’ defined but not used [-Wunused-variable]
   32 | CUSTOM_ID(colors, defcolor_char_constant);
      |                   ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:31:19: warning: ‘defcolor_str_constant’ defined but not used [-Wunused-variable]
   31 | CUSTOM_ID(colors, defcolor_str_constant);
      |                   ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:30:19: warning: ‘defcolor_keyword’ defined but not used [-Wunused-variable]
   30 | CUSTOM_ID(colors, defcolor_keyword);
      |                   ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:29:19: warning: ‘defcolor_comment_pop’ defined but not used [-Wunused-variable]
   29 | CUSTOM_ID(colors, defcolor_comment_pop);
      |                   ^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:28:19: warning: ‘defcolor_comment’ defined but not used [-Wunused-variable]
   28 | CUSTOM_ID(colors, defcolor_comment);
      |                   ^~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:27:19: warning: ‘defcolor_text_default’ defined but not used [-Wunused-variable]
   27 | CUSTOM_ID(colors, defcolor_text_default);
      |                   ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:26:19: warning: ‘defcolor_mark’ defined but not used [-Wunused-variable]
   26 | CUSTOM_ID(colors, defcolor_mark);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:25:19: warning: ‘defcolor_at_highlight’ defined but not used [-Wunused-variable]
   25 | CUSTOM_ID(colors, defcolor_at_highlight);
      |                   ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:24:19: warning: ‘defcolor_highlight’ defined but not used [-Wunused-variable]
   24 | CUSTOM_ID(colors, defcolor_highlight);
      |                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:23:19: warning: ‘defcolor_highlight_cursor_line’ defined but not used [-Wunused-variable]
   23 | CUSTOM_ID(colors, defcolor_highlight_cursor_line);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:22:19: warning: ‘defcolor_at_cursor’ defined but not used [-Wunused-variable]
   22 | CUSTOM_ID(colors, defcolor_at_cursor);
      |                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:21:19: warning: ‘defcolor_cursor’ defined but not used [-Wunused-variable]
   21 | CUSTOM_ID(colors, defcolor_cursor);
      |                   ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:20:19: warning: ‘defcolor_list_item_active’ defined but not used [-Wunused-variable]
   20 | CUSTOM_ID(colors, defcolor_list_item_active);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:19:19: warning: ‘defcolor_list_item_hover’ defined but not used [-Wunused-variable]
   19 | CUSTOM_ID(colors, defcolor_list_item_hover);
      |                   ^~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:18:19: warning: ‘defcolor_list_item’ defined but not used [-Wunused-variable]
   18 | CUSTOM_ID(colors, defcolor_list_item);
      |                   ^~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:17:19: warning: ‘defcolor_margin_active’ defined but not used [-Wunused-variable]
   17 | CUSTOM_ID(colors, defcolor_margin_active);
      |                   ^~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:16:19: warning: ‘defcolor_margin_hover’ defined but not used [-Wunused-variable]
   16 | CUSTOM_ID(colors, defcolor_margin_hover);
      |                   ^~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:15:19: warning: ‘defcolor_margin’ defined but not used [-Wunused-variable]
   15 | CUSTOM_ID(colors, defcolor_margin);
      |                   ^~~~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:14:19: warning: ‘defcolor_back’ defined but not used [-Wunused-variable]
   14 | CUSTOM_ID(colors, defcolor_back);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:13:19: warning: ‘defcolor_pop2’ defined but not used [-Wunused-variable]
   13 | CUSTOM_ID(colors, defcolor_pop2);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:12:19: warning: ‘defcolor_pop1’ defined but not used [-Wunused-variable]
   12 | CUSTOM_ID(colors, defcolor_pop1);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:11:19: warning: ‘defcolor_base’ defined but not used [-Wunused-variable]
   11 | CUSTOM_ID(colors, defcolor_base);
      |                   ^~~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_default_colors.h:10:19: warning: ‘defcolor_bar’ defined but not used [-Wunused-variable]
   10 | CUSTOM_ID(colors, defcolor_bar);
      |                   ^~~~~~~~~~~~
./code/custom/4coder_types.h:630:50: note: in definition of macro ‘CUSTOM_ID’
  630 | #define CUSTOM_ID(group, name) global Managed_ID name;
      |                                                  ^~~~
./code/custom/4coder_base_types.h:1099:12: warning: ‘surrogate_max’ defined but not used [-Wunused-variable]
 1099 | global u32 surrogate_max = 0xDFFF;
      |            ^~~~~~~~~~~~~
./code/custom/4coder_base_types.h:1098:12: warning: ‘surrogate_min’ defined but not used [-Wunused-variable]
 1098 | global u32 surrogate_min = 0xD800;
      |            ^~~~~~~~~~~~~
./code/4ed_api_definition.cpp: In function ‘API_Type* api_type_structure_with_location(Arena*, API_Definition*, API_Type_Structure_Kind, char*, List_String_Const_u8, char*, char*)’:
./code/4ed_api_definition.cpp:50:1: warning: infinite recursion detected [-Winfinite-recursion]
   50 | api_type_structure_with_location(Arena *arena, API_Definition *api, API_Type_Structure_Kind kind, char *name, List_String_Const_u8 member_list, char *definition, char *location){
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/4ed_api_definition.cpp:51:44: note: recursive call
   51 |     return(api_type_structure_with_location(arena, api, kind, name, member_list, definition, location));
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_u64_u64*, Table_Lookup, u64)’:
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
  118 | }
      | ^
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:118:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16507 stmt: 0):  return;EN: 5006-5009, EN: 5046-5047, EN: 5071-5072 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:112:12: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16505 stmt: 0):  _4 = table_24(D)->keys;EN: 4992-4993, EN: 5039, EN: 5064, EN: 5085, EN: 5303-5304, EN: 5330 [-Wanalyzer-too-complex]
  112 |     table->keys[lookup.index] = lookup.hash;
      |     ~~~~~~~^~~~
./code/custom/4coder_table.cpp:112:12: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16508 -> SN: 16494 in table_rehash)] before (SN: 16505 stmt: 0):  _4 = table_24(D)->keys;EN: 4992-4993, EN: 5039, EN: 5064, EN: 5085, EN: 5303-5304, EN: 5330 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] after SN: 16532EN: 4915-4917, EN: 5226-5228, EN: 5480-5481 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] after SN: 16541EN: 4925-4928, EN: 5236-5239 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] after SN: 16541EN: 4925-4928, EN: 5236-5239 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] after SN: 16541EN: 4925-4928, EN: 5236-5239 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4818, EN: 4851, EN: 4885, EN: 5148, EN: 5196, EN: 5383, EN: 5416, EN: 5450 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4818, EN: 4851, EN: 4885, EN: 5148, EN: 5196, EN: 5383, EN: 5416, EN: 5450 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4818, EN: 4851, EN: 4885, EN: 5148, EN: 5196, EN: 5383, EN: 5416, EN: 5450 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4818, EN: 4851, EN: 4885, EN: 5148, EN: 5196, EN: 5383, EN: 5416, EN: 5450 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp: In function ‘b32 table_rehash(Table_u64_u64*, Table_u64_u64*)’:
./code/custom/4coder_table.cpp:126:47: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16495 stmt: 0):  i_32 = i_16 + 1;EN: 5104-5108, EN: 5347, EN: 5488, EN: 5524 [-Wanalyzer-too-complex]
  126 |         for (u32 i = 0; i < src_slot_count; i += 1){
      |                                             ~~^~~~
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4818, EN: 4851, EN: 4885, EN: 5148, EN: 5196, EN: 5383, EN: 5416, EN: 5450 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert), (SN: 16544 -> SN: 16493 in table_rehash)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4933-4936, EN: 5244-5247 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
./code/custom/4coder_table.cpp: In function ‘b32 table_rehash(Table_u64_u64*, Table_u64_u64*)’:
./code/custom/4coder_table.cpp:126:47: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16495 stmt: 0):  i_32 = i_16 + 1;EN: 5104-5108, EN: 5347, EN: 5488, EN: 5524 [-Wanalyzer-too-complex]
  126 |         for (u32 i = 0; i < src_slot_count; i += 1){
      |                                             ~~^~~~
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16496 stmt: 0):  # DEBUG i => i_16EN: 4785, EN: 5115, EN: 5350, EN: 5491, EN: 5528, EN: 5561, EN: 5594, EN: 5628 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16496 stmt: 0):  # DEBUG i => i_16EN: 4785, EN: 5115, EN: 5350, EN: 5491, EN: 5528, EN: 5561, EN: 5594, EN: 5628 [-Wanalyzer-too-complex]
In function ‘void block_zero(void*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16549 -> SN: 16474 in table_insert), (SN: 24795 -> SN: 16548 in table_free)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 5810, EN: 5818, EN: 5826, EN: 5882, EN: 5890, EN: 5936, EN: 5944, EN: 5990 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16549 -> SN: 16474 in table_insert), (SN: 24795 -> SN: 16548 in table_free)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 5810, EN: 5818, EN: 5826, EN: 5882, EN: 5890, EN: 5936, EN: 5944, EN: 5990 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16549 -> SN: 16474 in table_insert), (SN: 24795 -> SN: 16548 in table_free)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 5810, EN: 5818, EN: 5826, EN: 5882, EN: 5890, EN: 5936, EN: 5944, EN: 5990 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16549 -> SN: 16474 in table_insert), (SN: 24795 -> SN: 16548 in table_free)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 5810, EN: 5818, EN: 5826, EN: 5882, EN: 5890, EN: 5936, EN: 5944, EN: 5990 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 6136, EN: 6169, EN: 6203, EN: 6305, EN: 6338, EN: 6372, EN: 6474, EN: 6507 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] after SN: 16541EN: 6243-6246, EN: 6412-6415 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] after SN: 16541EN: 6243-6246, EN: 6412-6415 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] after SN: 16541EN: 6243-6246, EN: 6412-6415 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] after SN: 16541EN: 6243-6246, EN: 6412-6415 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 6251-6254, EN: 6420-6423 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 6136, EN: 6169, EN: 6203, EN: 6305, EN: 6338, EN: 6372, EN: 6474, EN: 6507 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16476 in table_insert)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 6251-6254, EN: 6420-6423 [-Wanalyzer-too-complex]
In function ‘void block_zero(void*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16558 -> SN: 16471 in table_insert), (SN: 24795 -> SN: 16554 in make_table_u64_u64__inner)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 4611, EN: 4619, EN: 4627, EN: 4635, EN: 4735, EN: 9744, EN: 9752, EN: 9760 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16558 -> SN: 16471 in table_insert), (SN: 24795 -> SN: 16554 in make_table_u64_u64__inner)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 4611, EN: 4619, EN: 4627, EN: 4635, EN: 4735, EN: 9744, EN: 9752, EN: 9760 [-Wanalyzer-too-complex]
In function ‘b32 table_rehash(Table_u64_u64*, Table_u64_u64*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16496 stmt: 0):  # DEBUG i => i_16EN: 4785, EN: 5115, EN: 5350, EN: 5491, EN: 5528, EN: 5561, EN: 5594, EN: 5628 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16496 stmt: 0):  # DEBUG i => i_16EN: 4785, EN: 5115, EN: 5350, EN: 5491, EN: 5528, EN: 5561, EN: 5594, EN: 5628 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16500 -> SN: 16473 in table_insert)] before (SN: 16498 stmt: 0):  # DEBUG result => result_15EN: 5676-5680, EN: 5736, EN: 5756, EN: 9884 [-Wanalyzer-too-complex]
In function ‘void block_zero(void*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16549 -> SN: 16474 in table_insert), (SN: 24795 -> SN: 16548 in table_free)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 5810, EN: 5818, EN: 5826, EN: 5882, EN: 5890, EN: 5936, EN: 5944, EN: 5990 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp: In function ‘b32 table_insert(Table_u64_u64*, u64, u64)’:
./code/custom/4coder_table.cpp:157:32: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face)] before (SN: 16479 stmt: 0):  table_insert__inner (table_28(D), lookup, val_42(D));EN: 6640-6646, EN: 9936 [-Wanalyzer-too-complex]
  157 |             table_insert__inner(table, lookup, val);
      |             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
./code/custom/4coder_table.cpp:157:32: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face)] before (SN: 16479 stmt: 0):  table_insert__inner (table_28(D), lookup, val_42(D));EN: 6640-6646, EN: 9936 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp: In function ‘void table_insert__inner(Table_u64_u64*, Table_Lookup, u64)’:
./code/custom/4coder_table.cpp:112:12: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16508 -> SN: 16480 in table_insert)] before (SN: 16505 stmt: 0):  _4 = table_24(D)->keys;EN: 6669-6670, EN: 6703, EN: 6720, EN: 6744, EN: 6755, EN: 6762, EN: 9953 [-Wanalyzer-too-complex]
  112 |     table->keys[lookup.index] = lookup.hash;
      |     ~~~~~~~^~~~
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] after SN: 16532EN: 4424-4426, EN: 9557-9559, EN: 12282-12283 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] after SN: 16541EN: 4434-4437, EN: 9567-9570 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] after SN: 16541EN: 4434-4437, EN: 9567-9570 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] after SN: 16541EN: 4434-4437, EN: 9567-9570 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4442-4445, EN: 9575-9578 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
./code/4ed_font_set.cpp: In function ‘Face* font_set_new_face(Font_Set*, Face_Description*)’:
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
   94 |     return(face);
      |                ^
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
./code/4ed_coroutine.cpp: In function ‘void coroutine__pass_control(Coroutine*, Coroutine*, Coroutine_State, Coroutine_Pass_Control)’:
./code/4ed_coroutine.cpp:16:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3739 in co_handle_request), (SN: 7298 -> SN: 7205 in coroutine_run)] before (SN: 7289 stmt: 0):  _3 = me_16(D)->sys;EN: 7103-7104, EN: 7180, EN: 10245-10246, EN: 10295, EN: 12507-12508 [-Wanalyzer-too-complex]
   16 |     Assert(me->sys == other->sys);
      |            ~~~~^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
In function ‘Coroutine* coroutine_run(Coroutine_Group*, Coroutine*, void*, void*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3739 in co_handle_request)] before (SN: 7210 stmt: 0):  # DEBUG result => result_13EN: 7237-7240, EN: 10321, EN: 12623-12625 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] after SN: 16532EN: 7459-7461, EN: 10469-10471, EN: 12784-12785 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] after SN: 16541EN: 7469-7472, EN: 10479-10482 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] after SN: 16541EN: 7469-7472, EN: 10479-10482 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] after SN: 16541EN: 7469-7472, EN: 10479-10482 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 7477-7480, EN: 10487-10490 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
./code/4ed_coroutine.cpp: In function ‘void coroutine__pass_control(Coroutine*, Coroutine*, Coroutine_State, Coroutine_Pass_Control)’:
./code/4ed_coroutine.cpp:16:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3748 in co_handle_request), (SN: 7298 -> SN: 7205 in coroutine_run)] before (SN: 7289 stmt: 0):  _3 = me_16(D)->sys;EN: 8385-8386, EN: 8462, EN: 11289-11290, EN: 11339, EN: 12859-12860 [-Wanalyzer-too-complex]
   16 |     Assert(me->sys == other->sys);
      |            ~~~~^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
In function ‘Coroutine* coroutine_run(Coroutine_Group*, Coroutine*, void*, void*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3748 in co_handle_request)] before (SN: 7210 stmt: 0):  # DEBUG result => result_13EN: 8519-8522, EN: 11365, EN: 12975-12977 [-Wanalyzer-too-complex]
./code/4ed_coroutine.cpp: In function ‘void coroutine__pass_control(Coroutine*, Coroutine*, Coroutine_State, Coroutine_Pass_Control)’:
./code/4ed_coroutine.cpp:16:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3751 in co_handle_request), (SN: 7298 -> SN: 7205 in coroutine_run)] before (SN: 7289 stmt: 0):  _3 = me_16(D)->sys;EN: 8638-8639, EN: 8715, EN: 11445-11446, EN: 11495, EN: 13081-13082 [-Wanalyzer-too-complex]
   16 |     Assert(me->sys == other->sys);
      |            ~~~~^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
In function ‘Coroutine* coroutine_run(Coroutine_Group*, Coroutine*, void*, void*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3751 in co_handle_request)] before (SN: 7210 stmt: 0):  # DEBUG result => result_13EN: 8772-8775, EN: 11521, EN: 13197-13199 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4327, EN: 4360, EN: 4394, EN: 9460, EN: 9493, EN: 9527, EN: 12204, EN: 12252 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4442-4445, EN: 9575-9578 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 4327, EN: 4360, EN: 4394, EN: 9460, EN: 9493, EN: 9527, EN: 12204, EN: 12252 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 16486 -> SN: 6744 in font_set_new_face), (SN: 16544 -> SN: 16465 in table_insert)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 4442-4445, EN: 9575-9578 [-Wanalyzer-too-complex]
./code/custom/4coder_base_types.cpp: In function ‘void base_free(Base_Allocator*, void*)’:
./code/custom/4coder_base_types.cpp:3053:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 21987 -> SN: 6746 in font_set_new_face), (SN: 22000 -> SN: 21984 in linalloc_clear), (SN: 22124 -> SN: 21998 in linalloc_end_temp)] before (SN: 22123 stmt: 0):  return;EN: 6926-6927, EN: 10090-10091, EN: 12370-12371, EN: 14419-14420 [-Wanalyzer-too-complex]
 3053 | }
      | ^
./code/custom/4coder_base_types.cpp:3053:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 21987 -> SN: 6746 in font_set_new_face), (SN: 22000 -> SN: 21984 in linalloc_clear), (SN: 22124 -> SN: 21998 in linalloc_end_temp)] before (SN: 22123 stmt: 0):  return;EN: 6926-6927, EN: 10090-10091, EN: 12370-12371, EN: 14419-14420 [-Wanalyzer-too-complex]
./code/custom/4coder_base_types.cpp: In function ‘void linalloc_end_temp(Temp_Memory_Arena)’:
./code/custom/4coder_base_types.cpp:3209:1: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request), (SN: 21987 -> SN: 6746 in font_set_new_face), (SN: 22000 -> SN: 21984 in linalloc_clear)] before (SN: 21999 stmt: 0):  return;EN: 6940-6941, EN: 10104-10105, EN: 12384-12385, EN: 14433-14434 [-Wanalyzer-too-complex]
 3209 | }
      | ^
./code/4ed_font_set.cpp: In function ‘Face* font_set_new_face(Font_Set*, Face_Description*)’:
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
   94 |     return(face);
      |                ^
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
./code/4ed_font_set.cpp:94:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6747 stmt: 0):  _25 = face_14;EN: 6978-6981, EN: 10142-10144, EN: 12422 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6749 stmt: 0):  <L5>:EN: 7000-7002, EN: 10157-10158, EN: 12429-12430, EN: 14536 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6750 -> SN: 3734 in co_handle_request)] before (SN: 6749 stmt: 0):  <L5>:EN: 7000-7002, EN: 10157-10158, EN: 12429-12430, EN: 14536 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 7362, EN: 7395, EN: 7429, EN: 10372, EN: 10405, EN: 10439, EN: 12706, EN: 12754 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 6696 -> SN: 3742 in co_handle_request), (SN: 6734 -> SN: 6682 in font_set_modify_face), (SN: 16515 -> SN: 6730 in font_set__get_face_slot), (SN: 16544 -> SN: 16511 in table_read)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 7477-7480, EN: 10487-10490 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
./code/4ed_coroutine.cpp: In function ‘void coroutine__pass_control(Coroutine*, Coroutine*, Coroutine_State, Coroutine_Pass_Control)’:
./code/4ed_coroutine.cpp:16:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3748 in co_handle_request), (SN: 7298 -> SN: 7205 in coroutine_run)] before (SN: 7289 stmt: 0):  _3 = me_16(D)->sys;EN: 8385-8386, EN: 8462, EN: 11289-11290, EN: 11339, EN: 12859-12860 [-Wanalyzer-too-complex]
   16 |     Assert(me->sys == other->sys);
      |            ~~~~^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
./code/4ed_coroutine.cpp:16:16: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event), (SN: 3756 -> SN: 3725 in co_run), (SN: 7212 -> SN: 3751 in co_handle_request), (SN: 7298 -> SN: 7205 in coroutine_run)] before (SN: 7289 stmt: 0):  _3 = me_16(D)->sys;EN: 8638-8639, EN: 8715, EN: 11445-11446, EN: 11495, EN: 13081-13082 [-Wanalyzer-too-complex]
   16 |     Assert(me->sys == other->sys);
      |            ~~~~^~~
./code/custom/4coder_base_types.h:263:22: note: in definition of macro ‘Stmnt’
  263 | #define Stmnt(s) do{ s }while(0)
      |                      ^
./code/custom/4coder_base_types.h:284:19: note: in expansion of macro ‘AssertAlways’
  284 | #define Assert(c) AssertAlways(c)
      |                   ^~~~~~~~~~~~
./code/4ed_coroutine.cpp:16:5: note: in expansion of macro ‘Assert’
   16 |     Assert(me->sys == other->sys);
      |     ^~~~~~
In function ‘Coroutine* co_run(Thread_Context*, Models*, Coroutine*, Co_In*, Co_Out*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event)] before (SN: 3726 stmt: 0):  # DEBUG result => result_3EN: 3722-3725, EN: 11569, EN: 11574, EN: 13241, EN: 13246 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event)] before (SN: 3726 stmt: 0):  # DEBUG result => result_3EN: 3722-3725, EN: 11569, EN: 11574, EN: 13241, EN: 13246 [-Wanalyzer-too-complex]
In function ‘void lifetime__free_key(Lifetime_Allocator*, Lifetime_Key*, Lifetime_Object*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7003 stmt: 0):  # DEBUG j => j_53EN: 34670, EN: 34685, EN: 34699, EN: 34721, EN: 34734, EN: 34887, EN: 34902, EN: 34922 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7003 stmt: 0):  # DEBUG j => j_53EN: 34670, EN: 34685, EN: 34699, EN: 34721, EN: 34734, EN: 34887, EN: 34902, EN: 34922 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7003 stmt: 0):  # DEBUG j => j_53EN: 34670, EN: 34685, EN: 34699, EN: 34721, EN: 34734, EN: 34887, EN: 34902, EN: 34922 [-Wanalyzer-too-complex]
In function ‘b32 table_erase(Table_u64_u64*, Table_Lookup)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16454 -> SN: 7026 in lifetime__free_key), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 36519, EN: 36538, EN: 36558-36559, EN: 36587-36588, EN: 36812, EN: 36831 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16454 -> SN: 7026 in lifetime__free_key), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 36519, EN: 36538, EN: 36558-36559, EN: 36587-36588, EN: 36812, EN: 36831 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16454 -> SN: 7026 in lifetime__free_key), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 36519, EN: 36538, EN: 36558-36559, EN: 36587-36588, EN: 36812, EN: 36831 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16454 -> SN: 7026 in lifetime__free_key), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 36519, EN: 36538, EN: 36558-36559, EN: 36587-36588, EN: 36812, EN: 36831 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 34377, EN: 34396, EN: 34416-34417, EN: 34445-34446, EN: 37127, EN: 37146 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 34377, EN: 34396, EN: 34416-34417, EN: 34445-34446, EN: 37127, EN: 37146 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 34377, EN: 34396, EN: 34416-34417, EN: 34445-34446, EN: 37127, EN: 37146 [-Wanalyzer-too-complex]
In function ‘void lifetime__free_key(Lifetime_Allocator*, Lifetime_Key*, Lifetime_Object*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7003 stmt: 0):  # DEBUG j => j_53EN: 34670, EN: 34685, EN: 34699, EN: 34721, EN: 34734, EN: 34887, EN: 34902, EN: 34922 [-Wanalyzer-too-complex]
./code/4ed_dynamic_variables.cpp:239:32: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7008 stmt: 0):  last_node_88 = object_78->D.7018.key_node_last;EN: 34760-34762, EN: 34951-34953, EN: 35085, EN: 35168 [-Wanalyzer-too-complex]
  239 |         Lifetime_Key_Ref_Node *last_node = object->key_node_last;
      |                                ^~~~~~~~~
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7003 stmt: 0):  # DEBUG j => j_53EN: 34670, EN: 34685, EN: 34699, EN: 34721, EN: 34734, EN: 34887, EN: 34902, EN: 34922 [-Wanalyzer-too-complex]
./code/4ed_dynamic_variables.cpp:239:32: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys)] before (SN: 7008 stmt: 0):  last_node_88 = object_78->D.7018.key_node_last;EN: 34760-34762, EN: 34951-34953, EN: 35085, EN: 35168 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_Data_u64*, String_Const_u8)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16229 -> SN: 7025 in lifetime__free_key), (SN: 16318 -> SN: 16224 in table_erase)] after SN: 16306EN: 35613-35615, EN: 36144-36146, EN: 37689-37690 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16229 -> SN: 7025 in lifetime__free_key), (SN: 16318 -> SN: 16224 in table_erase)] after SN: 16315EN: 35623-35626, EN: 36154-36157 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16229 -> SN: 7025 in lifetime__free_key), (SN: 16318 -> SN: 16224 in table_erase)] after SN: 16315EN: 35623-35626, EN: 36154-36157 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16229 -> SN: 7025 in lifetime__free_key), (SN: 16318 -> SN: 16224 in table_erase)] after SN: 16315EN: 35623-35626, EN: 36154-36157 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:423:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 16229 -> SN: 7025 in lifetime__free_key), (SN: 16318 -> SN: 16224 in table_erase)] before (SN: 16316 stmt: 0):  D.45807 = result;EN: 35631-35634, EN: 36162-36165 [-Wanalyzer-too-complex]
  423 |     return(result);
      |                  ^
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16532EN: 34305-34307, EN: 37055-37057, EN: 37837-37838 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 34315-34318, EN: 37065-37068 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 34315-34318, EN: 37065-37068 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 34315-34318, EN: 37065-37068 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
   90 |     return(result);
      |                  ^
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 34208, EN: 34241, EN: 34275, EN: 36977, EN: 37025, EN: 37740, EN: 37773, EN: 37807 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 34208, EN: 34241, EN: 34275, EN: 36977, EN: 37025, EN: 37740, EN: 37773, EN: 37807 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
In function ‘b32 table_erase(Table_u64_u64*, Table_Lookup)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 38174, EN: 38193, EN: 38213-38214, EN: 38242-38243, EN: 38608, EN: 38627 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 38174, EN: 38193, EN: 38213-38214, EN: 38242-38243, EN: 38608, EN: 38627 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 38174, EN: 38193, EN: 38213-38214, EN: 38242-38243, EN: 38608, EN: 38627 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16460 -> SN: 16451 in table_erase)] before (SN: 16458 stmt: 0):  # DEBUG result => result_14EN: 38174, EN: 38193, EN: 38213-38214, EN: 38242-38243, EN: 38608, EN: 38627 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 34208, EN: 34241, EN: 34275, EN: 36977, EN: 37025, EN: 37740, EN: 37773, EN: 37807 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 34208, EN: 34241, EN: 34275, EN: 36977, EN: 37025, EN: 37740, EN: 37773, EN: 37807 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16532EN: 38102-38104, EN: 38536-38538, EN: 39077-39078 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 38112-38115, EN: 38546-38549 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 38112-38115, EN: 38546-38549 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] after SN: 16541EN: 38112-38115, EN: 38546-38549 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 38120-38123, EN: 38554-38557 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 34208, EN: 34241, EN: 34275, EN: 36977, EN: 37025, EN: 37740, EN: 37773, EN: 37807 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object), (SN: 7030 -> SN: 6945 in lifetime__object_free_all_keys), (SN: 7075 -> SN: 6994 in lifetime__free_key), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 34323-34326, EN: 37073-37076 [-Wanalyzer-too-complex]
In function ‘void lifetime__object_free_all_keys(Lifetime_Allocator*, Lifetime_Object*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 6952 -> SN: 6928 in lifetime_free_object)] before (SN: 6946 stmt: 0):  # DEBUG i => i_12EN: 34168, EN: 36937, EN: 37700, EN: 37858, EN: 37908, EN: 38866, EN: 38916, EN: 39134 [-Wanalyzer-too-complex]
In function ‘Table_Lookup table_lookup(Table_u64_u64*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16527 stmt: 0):  # DEBUG index => index_18EN: 38005, EN: 38038, EN: 38072, EN: 38439, EN: 38472, EN: 38506, EN: 38999, EN: 39047 [-Wanalyzer-too-complex]
./code/custom/4coder_table.cpp:90:18: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4104 -> SN: 3692 in view_close), (SN: 6930 -> SN: 4103 in live_set_free_view), (SN: 7075 -> SN: 6929 in lifetime_free_object), (SN: 16454 -> SN: 7073 in dynamic_workspace_free), (SN: 16544 -> SN: 16450 in table_erase)] before (SN: 16542 stmt: 0):  D.45633 = result;EN: 38120-38123, EN: 38554-38557 [-Wanalyzer-too-complex]
./code/4ed_layout.cpp: In function ‘void layout_propogate_sizes_down_from_node(Layout*, Panel*)’:
./code/4ed_layout.cpp:103:36: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4342 -> SN: 3687 in view_close), (SN: 4418 -> SN: 4337 in layout_close_panel)] before (SN: 4409 stmt: 0):  layout__set_panel_rectangle (layout_24(D), tl_panel_12, r1);EN: 15292-15293, EN: 21235-21236, EN: 27178-27179, EN: 39798-39799 [-Wanalyzer-too-complex]
  103 |         layout__set_panel_rectangle(layout, tl_panel, r1);
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
./code/4ed_layout.cpp:103:36: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3684 -> SN: 3645 in co_send_event), (SN: 3695 -> SN: 3681 in view_check_co_exited), (SN: 4342 -> SN: 3687 in view_close), (SN: 4418 -> SN: 4337 in layout_close_panel)] before (SN: 4409 stmt: 0):  layout__set_panel_rectangle (layout_24(D), tl_panel_12, r1);EN: 15292-15293, EN: 21235-21236, EN: 27178-27179, EN: 39798-39799 [-Wanalyzer-too-complex]
In function ‘void block_copy(void*, const void*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 4167 -> SN: 3642 in co_send_event), (SN: 24775 -> SN: 4166 in begin_handling_input)] before (SN: 24769 stmt: 0):  # DEBUG s => s_7EN: 3378, EN: 3386, EN: 3394, EN: 3402, EN: 3410, EN: 46344, EN: 46352, EN: 46360 [-Wanalyzer-too-complex]
In function ‘Coroutine* co_run(Thread_Context*, Models*, Coroutine*, Co_In*, Co_Out*)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event)] before (SN: 3726 stmt: 0):  # DEBUG result => result_3EN: 3722-3725, EN: 11569, EN: 11574, EN: 13241, EN: 13246 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event)] before (SN: 3726 stmt: 0):  # DEBUG result => result_3EN: 3722-3725, EN: 11569, EN: 11574, EN: 13241, EN: 13246 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 3612 -> SN: 13 in app_step), (SN: 3639 -> SN: 3610 in co_send_core_event), (SN: 3652 -> SN: 3634 in co_send_core_event), (SN: 3730 -> SN: 3643 in co_send_event)] before (SN: 3726 stmt: 0):  # DEBUG result => result_3EN: 3722-3725, EN: 11569, EN: 11574, EN: 13241, EN: 13246 [-Wanalyzer-too-complex]
./code/4ed_layout.cpp: In function ‘void layout_propogate_sizes_down_from_node(Layout*, Panel*)’:
./code/4ed_layout.cpp:103:36: warning: terminating analysis for this program point: callstring: [(SN: 4291 -> SN: 17 in app_step), (SN: 4418 -> SN: 4289 in layout_set_root_size)] before (SN: 4409 stmt: 0):  layout__set_panel_rectangle (layout_24(D), tl_panel_12, r1);EN: 47220-47221, EN: 53251-53252, EN: 59277-59278, EN: 65308-65309 [-Wanalyzer-too-complex]
./code/4ed_layout.cpp:103:36: warning: terminating analysis for this program point: callstring: [(SN: 4291 -> SN: 17 in app_step), (SN: 4418 -> SN: 4289 in layout_set_root_size)] before (SN: 4409 stmt: 0):  layout__set_panel_rectangle (layout_24(D), tl_panel_12, r1);EN: 47220-47221, EN: 53251-53252, EN: 59277-59278, EN: 65308-65309 [-Wanalyzer-too-complex]
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 linalloc_push(Cursor*, u64, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3083:18: warning: terminating analysis for this program point: callstring: [(SN: 22045 -> SN: 27 in app_step), (SN: 22099 -> SN: 22034 in linalloc_push)] before (SN: 22097 stmt: 0):  D.42107 = result;EN: 72002-72003, EN: 72030, EN: 72536, EN: 72871-72872, EN: 72899, EN: 73405 [-Wanalyzer-too-complex]
 3083 |     return(result);
      |                  ^
./code/custom/4coder_base_types.cpp: In function ‘String_Const_u8 linalloc_push(Arena*, u64, String_Const_u8)’:
./code/custom/4coder_base_types.cpp:3151:18: warning: terminating analysis for this program point: callstring: [(SN: 22045 -> SN: 27 in app_step)] before (SN: 22041 stmt: 0):  D.42142 = result;EN: 72396-72397, EN: 72728-72729, EN: 73265-73266, EN: 73597-73598 [-Wanalyzer-too-complex]
 3151 |     return(result);
      |                  ^
In function ‘void block_zero(void*, u64)’:
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 2914 -> SN: 45 in app_step), (SN: 3324 -> SN: 2911 in output_file_append), (SN: 3359 -> SN: 3314 in edit_single), (SN: 16664 -> SN: 3337 in edit__apply), (SN: 16674 -> SN: 16663 in Profile_Block::Profile_Block), (SN: 16698 -> SN: 16673 in profile_block__init), (SN: 16709 -> SN: 16696 in thread_profile_record_push), (SN: 21977 -> SN: 16703 in thread_profile_record__inner), (SN: 24795 -> SN: 21975 in linalloc_wrap_zero)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 77928, EN: 77937, EN: 77945, EN: 77953, EN: 77997, EN: 78030, EN: 78039, EN: 78867 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 2914 -> SN: 45 in app_step), (SN: 3324 -> SN: 2911 in output_file_append), (SN: 3359 -> SN: 3314 in edit_single), (SN: 16664 -> SN: 3337 in edit__apply), (SN: 16674 -> SN: 16663 in Profile_Block::Profile_Block), (SN: 16698 -> SN: 16673 in profile_block__init), (SN: 16709 -> SN: 16696 in thread_profile_record_push), (SN: 21977 -> SN: 16703 in thread_profile_record__inner), (SN: 24795 -> SN: 21975 in linalloc_wrap_zero)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 77928, EN: 77937, EN: 77945, EN: 77953, EN: 77997, EN: 78030, EN: 78039, EN: 78867 [-Wanalyzer-too-complex]
cc1plus: warning: terminating analysis for this program point: callstring: [(SN: 2914 -> SN: 45 in app_step), (SN: 3324 -> SN: 2911 in output_file_append), (SN: 3359 -> SN: 3314 in edit_single), (SN: 16664 -> SN: 3337 in edit__apply), (SN: 16674 -> SN: 16663 in Profile_Block::Profile_Block), (SN: 16698 -> SN: 16673 in profile_block__init), (SN: 16709 -> SN: 16696 in thread_profile_record_push), (SN: 21977 -> SN: 16703 in thread_profile_record__inner), (SN: 24795 -> SN: 21975 in linalloc_wrap_zero)] before (SN: 24793 stmt: 0):  # DEBUG p => p_1EN: 77928, EN: 77937, EN: 77945, EN: 77953, EN: 77997, EN: 78030, EN: 78039, EN: 78867 [-Wanalyzer-too-complex]
[INFO] build command g++ -std=c++11 -D_GNU_SOURCE -fPIC -fno-threadsafe-statics -pthread -ggdb -g3 -fno-eliminate-unused-debug-symbols -fvar-tracking -fno-eliminate-unused-debug-types -fanalyzer -Wanalyzer-too-complex -Wall -Weffc++ -pedantic -Wextra -Wcast-align -Wcast-qual -Wconversion -Wdisabled-optimization -Wfloat-equal -Wformat=2 -Wformat-nonliteral -Wformat-security -Wformat-y2k -Wimport -Winit-self -Winline -Winvalid-pch -Wlong-long -Wctor-dtor-privacy -Wlogical-op -Wmissing-declarations -Wnoexcept -Wold-style-cast -Woverloaded-virtual -Wsign-conversion -Wsign-promo -Wstrict-null-sentinel -Wstrict-overflow=5 -Wundef -Wno-unused -Wmissing-field-initializers -Wmissing-format-attribute -Wmissing-include-dirs -Wmissing-noreturn -Wpacked -Wpadded -Wpointer-arith -Wredundant-decls -Wshadow -Wstack-protector -Wstrict-aliasing=2 -Wswitch-default -Wswitch-enum -Wunreachable-code -Wunused -Wunused-parameter -Wvariadic-macros -Wno-write-strings -Wno-unused-result -lX11 -lpthread -lm -lrt -lGL -ldl -lXfixes -lfreetype -lfontconfig -m64 -DFTECH_64_BIT -shared -I./code -I./code/custom -I./non-source/foreign/freetype2 -Iplatform_all -Iplatform_unix -I"./code" ./code/./code/platform_linux/linux_4ed.cpp -o ./build/debug/./code/4ed:
